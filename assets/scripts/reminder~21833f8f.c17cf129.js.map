{"version":3,"sources":["webpack:///./src/components/Reminder/TaskListItem/classes.css?e0e5","webpack:///./src/components/Reminder/TaskListItem/classes.css","webpack:///./src/lib/curry.ts","webpack:///./src/components/Reminder/AddTaskButton/messages.ts","webpack:///./src/components/Reminder/AddTaskButton/index.tsx","webpack:///./src/components/Reminder/TaskList/index.tsx","webpack:///./src/components/Reminder/TaskListItem/DeleteTaskButton/index.tsx","webpack:///./src/components/Reminder/TaskListItem/messages.ts","webpack:///./src/components/Reminder/TaskListItem/index.tsx","webpack:///./src/components/Reminder/TaskListItemDropTarget/index.tsx","webpack:///./src/components/Reminder/index.tsx","webpack:///./src/components/App/ReminderPage/messages.ts","webpack:///./src/components/App/ReminderPage/index.tsx","webpack:///./src/lib/identity.ts","webpack:///./src/lib/guards/commonGuards.ts","webpack:///./src/components/Nav/classes.css?5ee4","webpack:///./src/components/Nav/classes.css","webpack:///./src/components/DarkSwitch/index.tsx","webpack:///./src/components/LocaleSelect/messages.ts","webpack:///./src/components/LocaleSelect/index.tsx","webpack:///./src/lib/languageNameSolver/index.ts","webpack:///./src/lib/components/Link/index.tsx","webpack:///./src/lib/components/MenuItemLink/index.tsx","webpack:///./src/components/Nav/messages.ts","webpack:///./src/components/Nav/index.tsx","webpack:///./src/lib/components/ErrorBoundary/index.ts","webpack:///./src/templates/PageTemplate/index.tsx","webpack:///./src/lib/asserters/commonAsserters.ts","webpack:///./src/lib/validators/stringValidators.ts"],"names":["api","content","__esModule","default","module","i","options","exports","locals","___CSS_LOADER_API_IMPORT___","push","curry","f","x","xs","defineMessages","add","AddTaskButton","addTask","onClick","variant","color","messages","TaskList","children","DeleteTaskButton","asBoundedLengthStringErrorMessage","TaskListItem","value","index","onChange","onDelete","validate","useDrag","item","type","isDragging","monitor","getItem","isIdenticalTo","collect","dragging","drag","preview","className","useMemo","classnames","classes","TaskListItemContainer","Dragging","handleContentChange","useCallback","event","target","handleDoneChange","_checked","done","checked","useIntl","formatMessage","locale","errors","hasError","Object","values","some","error","undefined","helperText","isOneOf","keys","key","text","Case","sentence","Error","ref","container","secondaryAction","ListItemSecondaryAction","fullWidth","disabled","TaskListItemDropTarget","moveTask","div","useRef","useDrop","accept","hover","shouldBePresent","current","clientOffset","getClientOffset","boundingClientRect","getBoundingClientRect","pointerY","y","top","middleY","bottom","drop","asObject","input","leftOnly","named","asBoundedLengthString","upperBound","asBoolean","mapDispatchToProps","getTasks","getTasksAsync","addTaskAsync","changeTaskContent","changeTaskContentAsync","markTaskAsDone","markTaskAsDoneAsync","markTaskAsUndone","markTaskAsUndoneAsync","deleteTask","deleteTaskAsync","connect","tasks","reminder","useEffect","changeTask","taskId","map","task","id","toArray","createPage","title","option","optional","isT","DarkSwitch","useContext","ThemeProviderContext","dark","setDark","handleChange","_event","languages","selectLocale","localeSelector","FormControlProps","useState","labelWidth","setLabelWidth","inputId","v4","theme","useTheme","props","MuiFormControl","rootClassName","root","labelClassName","label","inputClassName","selectIconClassName","selectIcon","inputUnderlineClassName","inputUnderline","inputLabel","node","offsetWidth","tag","tagNativeNameMap","availableLocales","IntlProviderContext","htmlFor","icon","native","inputProps","standard","underline","outlined","filled","availableLocale","isTypographyColor","RouterLinkWithRef","React","forwardRef","innerRef","Link","this","restProps","component","console","warn","typed","Component","MenuItemLink","menuItem","to","button","menuItemProps","LinkWithRef","linkProps","link","home","chess","counter","info","paint","Nav","anchorEl","setAnchorEl","openMenu","currentTarget","closeMenu","position","edge","Spacer","LocaleSelectLabel","LocaleSelectInput","LocaleSelectSelectIcon","LocaleSelectInputUnderline","open","onClose","ErrorBoundary","state","renderError","getDerivedStateFromError","PageTemplate","String","TypeError","Body","it","shouldBeNullable","lowerBound","Infinity","inputAsString","asString","length","ValidationError","asUrl","isUrl"],"mappings":"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","file":"assets/scripts/reminder~21833f8f.c17cf129.js","sourcesContent":["var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--5-1!../../../../node_modules/postcss-loader/src/index.js!./classes.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".src-components-Reminder-TaskListItem-classes__TaskListItemContainer--3F5ef.src-components-Reminder-TaskListItem-classes__Dragging--1TtFC {\\n  opacity: 0;\\n}\\n\\n.src-components-Reminder-TaskListItem-classes__ListItemSecondaryAction--3QycB {\\n  padding-right: 72px; /* TODO */\\n}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"TaskListItemContainer\": \"src-components-Reminder-TaskListItem-classes__TaskListItemContainer--3F5ef\",\n\t\"Dragging\": \"src-components-Reminder-TaskListItem-classes__Dragging--1TtFC\",\n\t\"ListItemSecondaryAction\": \"src-components-Reminder-TaskListItem-classes__ListItemSecondaryAction--3QycB\"\n};\nmodule.exports = exports;\n","const curry = <T0, Ts extends unknown[], U>(f: (x: T0, ...xs: Ts) => U) => (x: T0) => (...xs: Ts): U => f(x, ...xs)\n\nexport default curry\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  add: 'add',\n})\n","import React from 'react'\nimport { FormattedMessage } from 'react-intl'\n\nimport Button from '@material-ui/core/Button'\n\nimport messages from './messages'\n\nexport interface Props {\n  addTask(): void\n}\n\nconst AddTaskButton: React.FC<Props> = ({ addTask }) => (\n  <Button onClick={ addTask } variant=\"contained\" color=\"secondary\">\n    <FormattedMessage { ...messages.add } />\n  </Button>\n)\n\nexport default AddTaskButton\n","import React from 'react'\n\nimport List from '@material-ui/core/List'\n\nimport { Props as TaskListItemDropTargetProps } from '~/components/Reminder/TaskListItemDropTarget'\n\nexport interface Props {\n  children?: React.ReactElement<TaskListItemDropTargetProps, React.ComponentType<TaskListItemDropTargetProps>> | Array<React.ReactElement<TaskListItemDropTargetProps, React.ComponentType<TaskListItemDropTargetProps>>>\n}\n\nconst TaskList: React.FC<Props> = ({ children }) => (\n  <List>\n    { children }\n  </List>\n)\n\nexport default TaskList\n","import React from 'react'\n\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\nexport interface Props {\n  onClick(): void\n}\n\nconst DeleteTaskButton: React.FC<Props> = ({ onClick }) => (\n  <IconButton onClick={ onClick }>\n    <DeleteIcon />\n  </IconButton>\n)\n\nexport default DeleteTaskButton\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  asBoundedLengthStringErrorMessage: '{ name } must be 0-{ upperBound } characters.',\n})\n","import Case from 'case'\nimport classnames from 'classnames'\nimport React, { useCallback, useMemo } from 'react'\nimport { DragObjectWithType, useDrag } from 'react-dnd'\nimport { useIntl } from 'react-intl'\n\nimport Checkbox from '@material-ui/core/Checkbox'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport TextField from '@material-ui/core/TextField'\nimport DragHandleIcon from '@material-ui/icons/DragHandle'\n\nimport Task, { TaskParams } from '~/domain/entity/Task'\nimport { isOneOf } from '~/lib/guards/commonGuards'\nimport ValidationError from '~/lib/validators/ValidationError'\nimport DeleteTaskButton from './DeleteTaskButton'\nimport classes from './classes.css'\nimport messages from './messages'\n\nexport interface Props {\n  value: Task\n  index: number\n\n  onChange(value: Partial<TaskParams>): void\n  onDelete(): void\n  validate(input: Task): Partial<Record<keyof Task, ValidationError>>\n}\n\ninterface CollectedProps {\n  dragging: boolean\n}\n\nexport interface DragObject extends DragObjectWithType {\n  value: Task\n  index: number\n}\n\nconst TaskListItem: React.FC<Props> = ({ value, index, onChange, onDelete, validate }) => {\n  const [{ dragging }, drag, preview] = useDrag<DragObject, unknown, CollectedProps>({\n    item: {\n      type: 'TaskListItem',\n      value,\n      index,\n    },\n    isDragging: (monitor) => {\n      const item: DragObject = monitor.getItem()\n\n      return value.isIdenticalTo(item.value)\n    },\n    collect: (monitor) => ({\n      dragging: monitor.isDragging(),\n    }),\n  })\n\n  const className = useMemo(() => classnames(classes.TaskListItemContainer, {\n    [classes.Dragging]: dragging,\n  }), [dragging])\n\n  const handleContentChange = useCallback<React.ChangeEventHandler<HTMLInputElement>>((event) => {\n    onChange({\n      content: event.target.value,\n    })\n  }, [onChange])\n\n  const handleDoneChange = useCallback((event: React.ChangeEvent<HTMLInputElement>, _checked: boolean) => {\n    onChange({\n      done: event.target.checked,\n    })\n  }, [onChange])\n\n  const { formatMessage, locale } = useIntl()\n\n  const errors = useMemo(() => validate(value), [value, validate])\n  const hasError = useMemo(() => Object.values(errors).some((error) => error !== undefined), [errors])\n\n  const helperText = useMemo(() => {\n    if (errors.content === undefined) {\n      return null\n    }\n\n    if (isOneOf(...Object.keys(messages))(errors.content.key)) {\n      const text = formatMessage(messages[errors.content.key], errors.content.values)\n\n      switch (locale) {\n        case 'en': return Case.sentence(text)\n        case 'ja': return text\n        default: throw new Error // TODO\n      }\n    }\n\n    return null // TODO\n  }, [locale, formatMessage, errors.content])\n\n  return (\n    <div ref={ preview }>\n      <ListItem\n        classes={ {\n          container: className,\n          secondaryAction: classes.ListItemSecondaryAction,\n        } }\n      >\n        <ListItemIcon>\n          <div ref={ drag }>\n            <DragHandleIcon />\n          </div>\n        </ListItemIcon>\n        <ListItemIcon>\n          <Checkbox checked={ value.done } onChange={ handleDoneChange } />\n        </ListItemIcon>\n        <TextField\n          fullWidth\n          value={ value.content }\n          onChange={ handleContentChange }\n          disabled={ value.done }\n          error={ hasError }\n          helperText={ helperText }\n        />\n        <ListItemSecondaryAction>\n          <DeleteTaskButton onClick={ onDelete } />\n        </ListItemSecondaryAction>\n      </ListItem>\n    </div>\n  )\n}\n\nexport default TaskListItem\n","import React, { useRef } from 'react'\nimport { useDrop } from 'react-dnd'\n\nimport { DragObject, Props as TaskListItemProps } from '~/components/Reminder/TaskListItem'\nimport { shouldBePresent } from '~/lib/asserters/commonAsserters'\n\nexport interface Props {\n  children?: React.ReactElement<TaskListItemProps, React.ComponentType<TaskListItemProps>>\n  index: number\n\n  moveTask(sourceIndex: number, targetIndex: number): void\n}\n\nconst TaskListItemDropTarget: React.FC<Props> = ({ children, index, moveTask }) => {\n  const div = useRef<HTMLDivElement>(null)\n\n  const [, drop] = useDrop<DragObject, unknown, unknown>({\n    accept: 'TaskListItem',\n    hover(item, monitor) {\n      shouldBePresent(div.current)\n\n      if (item.index === index) {\n        return\n      }\n\n      const clientOffset = monitor.getClientOffset()\n\n      shouldBePresent(clientOffset)\n\n      const boundingClientRect = div.current.getBoundingClientRect()\n      const pointerY = clientOffset.y - boundingClientRect.top\n      const middleY = (boundingClientRect.bottom - boundingClientRect.top) / 2\n\n      // downwards\n      if (item.index < index && pointerY < middleY) {\n        return\n      }\n\n      // upwards\n      if (item.index > index && pointerY > middleY) {\n        return\n      }\n\n      moveTask(item.index, index)\n\n      // tslint:disable-next-line:no-object-mutation\n      item.index = index\n    },\n  })\n\n  drop(div)\n\n  return (\n    <div ref={ div }>\n      { children }\n    </div>\n  )\n}\n\nexport default TaskListItemDropTarget\n","import { List } from 'immutable'\nimport React, { useCallback, useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport Task, { TaskParams } from '~/domain/entity/Task'\nimport TaskId from '~/domain/vo/TaskId'\nimport curry from '~/lib/curry'\nimport { asBoolean, asObject, leftOnly, named } from '~/lib/validators/commonValidators'\nimport { asBoundedLengthString } from '~/lib/validators/stringValidators'\nimport { State } from '~/redux'\nimport { addTaskAsync, changeTaskContentAsync, deleteTaskAsync, getTasksAsync, markTaskAsDoneAsync, markTaskAsUndoneAsync, moveTask } from '~/redux/modules/reminder'\nimport AddTaskButton from './AddTaskButton'\nimport TaskList from './TaskList'\nimport TaskListItem from './TaskListItem'\nimport TaskListItemDropTarget from './TaskListItemDropTarget'\n\ninterface StateProps {\n  tasks: List<Task>\n}\n\ninterface DispatchProps {\n  getTasks(): void\n  addTask(): void\n  changeTaskContent(taskId: TaskId, content: string): void\n  markTaskAsDone(taskId: TaskId): void\n  markTaskAsUndone(taskId: TaskId): void\n  deleteTask(taskId: TaskId): void\n  moveTask(source: number, dest: number): void\n}\n\ntype Props =\n  & StateProps\n  & DispatchProps\n\nconst validate = asObject('a Task for presentation', (input) => ({\n  content: leftOnly(named('content', asBoundedLengthString({\n    upperBound: 140,\n  })))(input.content),\n  done: leftOnly(asBoolean)(input.done),\n}))\n\nconst Reminder: React.FC<Props> = ({ tasks, getTasks, addTask, changeTaskContent, markTaskAsDone, markTaskAsUndone, deleteTask, moveTask }) => {\n  useEffect(() => {\n    getTasks()\n  }, [getTasks])\n\n  const changeTask = useCallback((taskId: TaskId, { content, done }: Partial<Alt.Omit<TaskParams, 'id'>>) => {\n    if (content !== undefined) {\n      changeTaskContent(taskId, content)\n    }\n\n    if (done !== undefined) {\n      if (done) {\n        markTaskAsDone(taskId)\n      } else {\n        markTaskAsUndone(taskId)\n      }\n    }\n  }, [changeTaskContent, markTaskAsDone, markTaskAsUndone])\n\n  return (\n    <>\n      <TaskList>\n        {\n          tasks.map((task, index) => (\n            <TaskListItemDropTarget\n              key={ index }\n              index={ index }\n              moveTask={ moveTask }\n            >\n              <TaskListItem\n                key={ task.id.value }\n                value={ task }\n                index={ index }\n                onChange={ curry(changeTask)(task.id) }\n                onDelete={ curry(deleteTask)(task.id) }\n                validate={ validate }\n              />\n            </TaskListItemDropTarget>\n          )).toArray()\n        }\n      </TaskList>\n      <AddTaskButton addTask={ addTask } />\n    </>\n  )\n}\n\n// connect\n\nconst mapStateToProps = ({ reminder: { tasks } }: State): StateProps => ({\n  tasks,\n})\n\nconst mapDispatchToProps: DispatchProps = {\n  getTasks: getTasksAsync,\n  addTask: addTaskAsync,\n  changeTaskContent: changeTaskContentAsync,\n  markTaskAsDone: markTaskAsDoneAsync,\n  markTaskAsUndone: markTaskAsUndoneAsync,\n  deleteTask: deleteTaskAsync,\n  moveTask,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Reminder)\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  reminder: 'reminder',\n})\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { useIntl } from 'react-intl'\n\nimport Reminder from '~/components/Reminder'\nimport { createPage } from '~/templates/PageTemplate'\nimport messages from './messages'\n\nconst ReminderPage: React.FC = () => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <>\n      <Helmet title={ formatMessage(messages.reminder) } />\n      <Reminder />\n    </>\n  )\n}\n\nexport default createPage(ReminderPage)\n","const identity = <T extends U, U>(it: T): U => it\n\nexport default identity\n","import identity from '~/lib/identity'\n\nexport const isOneOf = <T extends readonly Json[]>(...options: T) => (input: unknown): input is T[number] => options.some((option) => option === input)\n\nexport const optional = <A extends unknown, T extends A>(isT: (input: A) => input is T) => (input: A | undefined): input is T | undefined => {\n  if (input === undefined) {\n    return true\n  }\n\n  return isT(input)\n}\n\nexport const isObject = <A extends B, T extends A, B = A>(isT: (input: B) => Record<keyof A, boolean>) => (input: A): input is T => {\n  return Object.values<boolean>(isT(input)).every(identity)\n}\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--5-1!../../../node_modules/postcss-loader/src/index.js!./classes.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".src-components-Nav-classes__Spacer--36ovl {\\n  flex-grow: 1;\\n}\\n\\n.src-components-Nav-classes__LocaleSelectLabel--3h3DV.src-components-Nav-classes__LocaleSelectLabel--3h3DV {\\n  color: currentColor\\n}\\n\\n.src-components-Nav-classes__LocaleSelectLabel--3h3DV.src-components-Nav-classes__LocaleSelectLabel--3h3DV.Mui-focused {\\n    opacity: 0.618;\\n    color: currentColor;\\n  }\\n\\n.src-components-Nav-classes__LocaleSelectInput--3oNu1.src-components-Nav-classes__LocaleSelectInput--3oNu1 {\\n  color: currentColor;\\n}\\n\\n.src-components-Nav-classes__LocaleSelectSelectIcon--2AyFk.src-components-Nav-classes__LocaleSelectSelectIcon--2AyFk {\\n  color: currentColor;\\n}\\n\\n.src-components-Nav-classes__LocaleSelectInputUnderline--2WFrx.src-components-Nav-classes__LocaleSelectInputUnderline--2WFrx::before,\\n  .src-components-Nav-classes__LocaleSelectInputUnderline--2WFrx.src-components-Nav-classes__LocaleSelectInputUnderline--2WFrx:hover:not(.Mui-disabled)::before,\\n  .src-components-Nav-classes__LocaleSelectInputUnderline--2WFrx.src-components-Nav-classes__LocaleSelectInputUnderline--2WFrx::after {\\n    border-bottom-color: currentColor;\\n  }\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"Spacer\": \"src-components-Nav-classes__Spacer--36ovl\",\n\t\"LocaleSelectLabel\": \"src-components-Nav-classes__LocaleSelectLabel--3h3DV\",\n\t\"LocaleSelectInput\": \"src-components-Nav-classes__LocaleSelectInput--3oNu1\",\n\t\"LocaleSelectSelectIcon\": \"src-components-Nav-classes__LocaleSelectSelectIcon--2AyFk\",\n\t\"LocaleSelectInputUnderline\": \"src-components-Nav-classes__LocaleSelectInputUnderline--2WFrx\"\n};\nmodule.exports = exports;\n","import React, { useCallback, useContext } from 'react'\n\nimport Switch from '@material-ui/core/Switch'\n\nimport ThemeProviderContext from '~/contexts/ThemeProviderContext'\n\nconst DarkSwitch = () => {\n  const { dark, setDark } = useContext(ThemeProviderContext)\n\n  if (dark == null || setDark == null) {\n    throw new Error //\n  }\n\n  const handleChange = useCallback((_event, checked) => {\n    setDark(checked)\n  }, [setDark])\n\n  return (\n    <Switch checked={ dark } onChange={ handleChange } />\n  )\n}\n\nexport default DarkSwitch\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  languages: 'Languages',\n})\n","import classnames from 'classnames'\nimport React, { useCallback, useContext, useMemo, useState } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { connect } from 'react-redux'\nimport { v4 } from 'uuid'\n\nimport FilledInput from '@material-ui/core/FilledInput'\nimport FormControl, { FormControlProps } from '@material-ui/core/FormControl'\nimport Input from '@material-ui/core/Input'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport OutlinedInput from '@material-ui/core/OutlinedInput'\nimport Select, { SelectProps } from '@material-ui/core/Select'\nimport { useTheme } from '@material-ui/core/styles'\n\nimport IntlProviderContext from '~/lib/contexts/IntlProviderContext'\nimport { Tag, getNativeNameByTag, isTag } from '~/lib/languageNameSolver'\nimport { State } from '~/redux'\nimport { selectLocale } from '~/redux/modules/localeSelector'\nimport messages from './messages'\n\ninterface OwnProps {\n  classes?: {\n    root?: string\n    label?: string\n    input?: string\n    selectIcon?: string\n    inputUnderline?: string\n  } | null\n  FormControlProps?: FormControlProps | null\n}\n\ninterface StateProps {\n  locale: Tag\n}\n\ninterface DispatchProps {\n  selectLocale(locale: Tag): void\n}\n\ntype Props =\n  & OwnProps\n  & StateProps\n  & DispatchProps\n\nexport /* for testing */ const LocaleSelect: React.FC<Props> = ({ classes, FormControlProps, locale, selectLocale }) => {\n  const [labelWidth, setLabelWidth] = useState<number>(0)\n  const inputId = useMemo(v4, [])\n  const theme = useTheme()\n\n  // NOTE: Fortunately, FormControl is nothing but FormControl.\n  const variant = useMemo(() => FormControlProps?.variant ?? theme?.props?.MuiFormControl?.variant ?? 'standard', [FormControlProps?.variant, theme?.props?.MuiFormControl?.variant])\n\n  const rootClassName = useMemo(() => classnames(classes?.root, FormControlProps?.className), [classes?.root, FormControlProps?.className])\n  const labelClassName = useMemo(() => classnames(classes?.label), [classes?.label])\n  const inputClassName = useMemo(() => classnames(classes?.input), [classes?.input])\n  const selectIconClassName = useMemo(() => classnames(classes?.selectIcon), [classes?.selectIcon])\n  const inputUnderlineClassName = useMemo(() => classnames(classes?.inputUnderline), [classes?.inputUnderline])\n\n  const inputLabel = useCallback((node: HTMLLabelElement | null) => { // TODO: type\n    if (node !== null) {\n      setLabelWidth(node.offsetWidth)\n    }\n  }, [])\n\n  const handleChange = useCallback<NonNullable<SelectProps['onChange']>>((event) => {\n    if (isTag(event.target.value)) {\n      selectLocale(event.target.value)\n    }\n  }, [selectLocale])\n\n  const { availableLocales } = useContext(IntlProviderContext)\n\n  return (\n    <FormControl\n      { ...FormControlProps }\n      className={ rootClassName } // NOTE: overrides FormControlProps.className\n    >\n      <InputLabel className={ labelClassName } ref={ inputLabel } htmlFor={ inputId }>\n        <FormattedMessage { ...messages.languages } />\n      </InputLabel>\n      <Select\n        classes={ {\n          icon: selectIconClassName,\n        } }\n        native\n        labelWidth={ labelWidth }\n        value={ locale }\n        onChange={ handleChange }\n        id={ inputId }\n        inputProps={ { 'data-testid': 'localeSelect' } }\n        input={ {\n          standard: (\n            <Input\n              className={ inputClassName }\n              classes={ {\n                underline: inputUnderlineClassName,\n              } }\n            />\n          ),\n          outlined: <OutlinedInput className={ inputClassName } labelWidth={ labelWidth } />,\n          filled: <FilledInput className={ inputClassName } />,\n        }[variant] }\n      >\n        { availableLocales?.map((availableLocale, i) => (\n          <option key={ i } value={ availableLocale }>{ getNativeNameByTag(availableLocale) }</option>\n        )) }\n      </Select>\n    </FormControl>\n  )\n}\n\n// connect\n\nconst mapStateToProps = ({ localeSelector: { locale } }: State): StateProps => ({\n  locale,\n})\n\nconst mapDispatchToProps: DispatchProps = {\n  selectLocale,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LocaleSelect)\n","import tagNativeNameMap from './__data__/tagNativeNameMap.json'\n\nexport type Tag = keyof typeof tagNativeNameMap\n\nexport function isTag(tag: unknown): tag is Tag {\n  return typeof tag === 'string' && tag in tagNativeNameMap\n}\n\nexport function getNativeNameByTag(tag: Tag) {\n  return tagNativeNameMap[tag]\n}\n","import React from 'react'\nimport { Link as RouterLink, LinkProps as RouterLinkProps } from 'react-router-dom'\n\nimport MuiLink, { LinkProps as MuiLinkProps } from '@material-ui/core/Link'\n\nimport { isOneOf, optional } from '~/lib/guards/commonGuards'\nimport typed from '~/lib/typed'\n\nexport type Props =\n  & RouterLinkProps\n  & Alt.Omit<MuiLinkProps, 'color' | 'ref'>\n\nconst isTypographyColor = optional(isOneOf('initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error'))\n\n// TODO: delete this; See also https://material-ui.com/guides/composition/#link\nconst RouterLinkWithRef = React.forwardRef<HTMLAnchorElement, RouterLinkProps>((props, ref) => (\n  <RouterLink innerRef={ ref } { ...props } />\n))\n\nexport default class Link extends React.Component<Props> {\n  public render() {\n    const { color, ...restProps } = this.props\n\n    if (!isTypographyColor(color)) {\n      console.warn(typed<[string]>`${ color } is not a Material-UI Typography color.`) // tslint:disable-line:no-console\n\n      return (\n        <MuiLink component={ RouterLinkWithRef } { ...restProps } />\n      )\n    }\n\n    return (\n      <MuiLink component={ RouterLinkWithRef } color={ color } { ...restProps } />\n    )\n  }\n}\n","import * as React from 'react'\n\nimport MenuItem, { MenuItemProps } from '@material-ui/core/MenuItem'\n\nimport Link, { Props as LinkProps } from '~/lib/components/Link'\n\ntype Props = MenuItemProps<typeof Link, { button?: true }>\n\nconst MenuItemLink: React.FC<Props> = React.forwardRef<Link, React.PropsWithoutRef<Props>>(({ to, button, innerRef, ...menuItemProps }, menuItem) => {\n  // See https://material-ui.com/guides/composition/#link\n  const LinkWithRef = React.forwardRef<Link, LinkProps>((linkProps, link) => (\n    <Link ref={ link } innerRef={ innerRef } color=\"inherit\" underline=\"none\" { ...linkProps } />\n  ))\n\n  return (\n    <MenuItem button component={ LinkWithRef } to={ to } ref={ menuItem } { ...menuItemProps } />\n  )\n})\n\nexport default MenuItemLink\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  home: 'home',\n  chess: 'chess',\n  counter: 'counter',\n  info: 'info',\n  paint: 'paint',\n  reminder: 'reminder',\n})\n","// import classnames from 'classnames'\nimport React, { useCallback, useState } from 'react'\nimport { FormattedMessage } from 'react-intl'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Menu from '@material-ui/core/Menu'\nimport Toolbar from '@material-ui/core/Toolbar'\n// import { createStyles, makeStyles } from '@material-ui/core/styles'\nimport MenuIcon from '@material-ui/icons/Menu'\n\nimport DarkSwitch from '~/components/DarkSwitch'\nimport LocaleSelect from '~/components/LocaleSelect' // TODO\nimport MenuItemLink from '~/lib/components/MenuItemLink'\nimport classes from './classes.css'\nimport messages from './messages'\n\nconst Nav: React.FC = () => {\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null)\n\n  const openMenu = useCallback<React.MouseEventHandler<HTMLButtonElement>>((event) => {\n    setAnchorEl(event.currentTarget)\n  }, [])\n\n  const closeMenu = useCallback(() => {\n    setAnchorEl(null)\n  }, [])\n\n  return (\n    <>\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" onClick={ openMenu }>\n            <MenuIcon />\n          </IconButton>\n          <div className={ classes.Spacer } />\n          <DarkSwitch />\n          <LocaleSelect\n            classes={ {\n              label: classes.LocaleSelectLabel,\n              input: classes.LocaleSelectInput,\n              selectIcon: classes.LocaleSelectSelectIcon,\n              inputUnderline: classes.LocaleSelectInputUnderline,\n            } }\n            FormControlProps={ {\n              variant: 'filled',\n            } }\n          />\n        </Toolbar>\n      </AppBar>\n      <Menu open={ anchorEl !== null } anchorEl={ anchorEl } onClose={ closeMenu }>\n        <MenuItemLink to=\"/\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.home } />\n        </MenuItemLink>\n        <MenuItemLink to=\"/chess\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.chess } />\n        </MenuItemLink>\n        <MenuItemLink to=\"/counter\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.counter } />\n        </MenuItemLink>\n        <MenuItemLink to=\"/info\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.info } />\n        </MenuItemLink>\n        <MenuItemLink to=\"/paint\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.paint } />\n        </MenuItemLink>\n        <MenuItemLink to=\"/reminder\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.reminder } />\n        </MenuItemLink>\n      </Menu>\n    </>\n  )\n}\n\nexport default Nav\n","import React from 'react'\n\ninterface Props {\n  /**\n   * @param children that throws {error}\n   */\n  renderError(error: unknown, children: React.ReactNode): React.ReactNode\n}\n\ninterface State {\n  hasError: boolean\n  error?: unknown\n}\n\nclass ErrorBoundary extends React.Component<Props, State> {\n\n  // NOTE: https://github.com/DefinitelyTyped/DefinitelyTyped/blob/826ce0f1ce1d1887d199986283630d6f63075ad5/types/react/index.d.ts#L419 にも関わらず、初期化されていない state は null であるため、初期化を強制するためにプロパティ宣言を行う。\n  public state: Readonly<State> = {\n    hasError: false,\n  }\n\n  public static getDerivedStateFromError = (error: unknown) => ({\n    hasError: true,\n    error,\n  })\n\n  public render() {\n    const { renderError, children } = this.props\n    const { hasError, error } = this.state\n\n    if (hasError) {\n      return renderError(error, children)\n    }\n\n    return children\n  }\n}\n\nexport default ErrorBoundary\n","import React, { useCallback } from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\n\nimport Nav from '~/components/Nav'\nimport ErrorBoundary from '~/lib/components/ErrorBoundary'\nimport typed from '~/lib/typed'\n\ninterface PageTemplateProps {\n  children: React.ReactElement<BodyProps, React.ComponentType<BodyProps>>\n}\n\ntype BodyProps = PageProps\n\ntype PageProps =\n  & RouteComponentProps\n\nconst PageTemplate: React.FC<PageTemplateProps> = ({ children }) => {\n  const renderError = useCallback((error: unknown) => {\n    if (error instanceof Error) {\n      return typed<[string]>`${ String(error) }`\n    }\n\n    throw new TypeError(typed<[string]>`${ String(error) } is not an error.`)\n  }, [])\n\n  return (\n    <>\n      <Nav />\n      <ErrorBoundary renderError={ renderError }>\n        { children }\n      </ErrorBoundary>\n    </>\n  )\n}\n\nexport const createPage: (Body: React.FC<BodyProps>) => React.FC<PageProps> = (Body) => (props) => (\n  <PageTemplate>\n    <Body { ...props } />\n  </PageTemplate>\n)\n\nexport default PageTemplate\n","export function shouldBePresent<T>(it: T | null | undefined): asserts it is T {\n  if (it == null) {\n    throw new Error //\n  }\n}\n\nexport function shouldBeNullable<T>(it: T | null | undefined): asserts it is null | undefined {\n  if (it != null) {\n    throw new Error //\n  }\n}\n","import assert from 'assert'\n\nimport { isUrl } from '~/lib/guards/stringGuards'\nimport typed from '~/lib/typed'\nimport ValidationError from './ValidationError'\nimport { asString } from './commonValidators'\n\nexport const asBoundedLengthString = ({\n  lowerBound = -Infinity,\n  upperBound = Infinity,\n}: {\n  lowerBound?: number\n  upperBound?: number\n}) => (input: unknown) => {\n  assert(lowerBound <= upperBound)\n\n  const inputAsString = asString(input)\n\n  if (lowerBound <= inputAsString.length && inputAsString.length <= upperBound) {\n    return inputAsString\n  }\n\n  throw new ValidationError(\n    typed<[string, number, number]>`${ inputAsString } is not between ${ lowerBound } and ${ upperBound } characters.`,\n    'asBoundedLengthStringErrorMessage',\n    {\n      input: inputAsString.length,\n      lowerBound,\n      upperBound,\n    }\n  )\n}\n\nexport function asUrl(input: unknown): string.Url {\n  const inputAsString = asString(input)\n\n  if (!isUrl(inputAsString)) {\n    throw new ValidationError(typed<[string]>`${ inputAsString } is not a URL.`)\n  }\n\n  return inputAsString\n}\n"],"sourceRoot":""}