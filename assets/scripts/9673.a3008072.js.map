{"version":3,"sources":["webpack://rap/./src/atoms/bannersState.ts","webpack://rap/./src/atoms/notificationsState.ts","webpack://rap/./src/atoms/bannerOpenState.ts","webpack://rap/./src/components/BannerContainer/classes.css?e0ca","webpack://rap/./src/components/BannerContainer/index.tsx","webpack://rap/./src/components/ErrorBoundary/index.ts","webpack://rap/./src/components/Link/index.tsx","webpack://rap/./src/components/ListItemLink/index.tsx","webpack://rap/./src/components/PageTemplate/Nav/classes.css?4e16","webpack://rap/./src/components/PageTemplate/Nav/messages.ts","webpack://rap/./src/components/PageTemplate/Nav/index.tsx","webpack://rap/./src/components/LocaleSelect/classes.css?b291","webpack://rap/./src/components/LocaleSelect/messages.ts","webpack://rap/./src/components/LocaleSelect/index.tsx","webpack://rap/./src/languageNameSolver/index.ts","webpack://rap/./src/atoms/notificationsSortState.ts","webpack://rap/./src/selectors/sortedNotificationsState.ts","webpack://rap/./src/components/NotificationList/NotificationListItem/index.tsx","webpack://rap/./src/components/NotificationList/index.tsx","webpack://rap/./src/components/ToggleDarkButton/classes.css?6c28","webpack://rap/./src/components/ToggleDarkButton/messages.ts","webpack://rap/./src/components/ToggleDarkButton/index.tsx","webpack://rap/./src/components/PageTemplate/TopAppbar/classes.css?1b0e","webpack://rap/./src/components/PageTemplate/TopAppbar/messages.ts","webpack://rap/./src/components/PageTemplate/TopAppbar/index.tsx","webpack://rap/./src/components/PageTemplate/index.tsx","webpack://rap/./src/components/Spacer/classes.css?bca0","webpack://rap/./src/components/Spacer/index.tsx","webpack://rap/./src/guards/commonGuards.ts","webpack://rap/./src/hooks/useRefsMerged.ts","webpack://rap/./src/hooks/useScreen.ts","webpack://rap/./src/selectors/currentBannerState.ts","webpack://rap/./src/components/BannerContainer/classes.css","webpack://rap/./src/components/LocaleSelect/classes.css","webpack://rap/./src/components/PageTemplate/Nav/classes.css","webpack://rap/./src/components/PageTemplate/TopAppbar/classes.css","webpack://rap/./src/components/Spacer/classes.css","webpack://rap/./src/components/ToggleDarkButton/classes.css"],"names":["bannersState","atom","key","default","notificationsState","effects_UNSTABLE","onSet","newNotifications","Array","isArray","Error","length","FaviconNotification","options","useStyles","makeStyles","CollapseContainer","top","topAppbarHeight","currentBanner","useRecoilValue","currentBannerState","open","setOpen","useRecoilState","bannerOpenState","jssClasses","collapseContainerClassName","useMemo","classNames","classes","bannerToShow","setBannerToShow","useState","theme","useTheme","useEffect","delay","transitions","duration","standard","Collapse","in","mountOnEnter","unmountOnExit","container","banner","Divider","ErrorBoundary","React","state","hasError","render","renderError","children","this","props","error","getDerivedStateFromError","isTypographyColor","optional","isOneOf","RouterLinkWithRef","ref","innerRef","Link","color","restProps","component","console","warn","typed","to","button","listItemProps","listItem","LinkWithRef","linkProps","link","underline","ListItem","defineMessages","home","components","formControls","apps","chess","clock","counter","info","paint","reminder","settings","DrawerHeader","mixins","gutters","height","undefined","display","alignItems","justifyContent","name","FlippedListIcon","style","transform","restStyle","onClose","dir","useContext","IntlProviderContext","RtlFriendlyListIcon","shouldBePresent","ListIcon","Drawer","anchor","PaperProps","className","IconButton","edge","onClick","Menu","List","ListItemIcon","Home","ListItemText","messages","ListSubheader","disableSticky","TextFields","icon","chessPawn","width","Info","Brush","Settings","language","Select","minWidth","selectMinWidth","mapDispatchToProps","selectLocale","connect","localeSelector","locale","propClasses","FormControlProps","labelWidth","setLabelWidth","setSelectMinWidth","inputId","v4","variant","MuiFormControl","rootClassName","classnames","root","labelClassName","label","cssClasses","selectSelectClassName","inputClassName","input","selectIconClassName","selectIcon","inputUnderlineClassName","inputUnderline","inputLabel","useRef","select","current","offsetWidth","selectSelect","querySelector","HTMLDivElement","rect","getBoundingClientRect","globalThis","getComputedStyle","paddingInlineStart","parseFloat","paddingLeft","paddingRight","paddingInlineEnd","handleChange","useCallback","event","tag","target","value","tagNativeNameMap","availableLocales","FormControl","InputLabel","htmlFor","onChange","id","inputProps","Input","outlined","OutlinedInput","filled","FilledInput","map","availableLocale","i","MenuItem","by","selector","get","notifications","sort","notificationsSortState","sorted","notification","a","b","reverse","handleDeleteButtonClick","close","primary","title","secondary","timestamp","format","ListItemSecondaryAction","Delete","sortedNotificationsState","n","toggleLightDarkTheme","dark","setDark","darkState","defaultDark","DefaultDarkContext","handleOn","handleOff","Tooltip","Brightness7","Brightness4","showNotifications","Offset","onMenuIconButtonClick","forwardedRef","screenWidth","useScreen","setHeight","ownRef","node","useRefsMerged","notificationsOpen","setNotificationsOpen","handleNotificationsShow","handleNotificationsClose","AppBar","position","Toolbar","Spacer","Box","mx","disableFocusListener","disableHoverListener","disableTouchListener","disabled","Badge","badgeContent","Notifications","Popover","anchorEl","anchorOrigin","horizontal","vertical","transformOrigin","PageTemplate","String","TypeError","drawerOpen","setDrawerOpen","drawerRef","setTopAppbarHeight","topAppbarRef","topAppbarRect","openDrawer","closeDrawer","createPage","Body","some","option","isT","refs","setWidth","dpr","setDpr","updateScreenSize","innerWidth","innerHeight","updateScreenDpr","devicePixelRatio","addEventListener","removeEventListener","banners","set","newCurrentBanner","DefaultValue","_firstBanner","restBanners","oldCurrentBanner","bannersWOCurrentReplaceable","replaceable","j","findIndex","slice","___CSS_LOADER_EXPORT___","push","module","locals"],"mappings":"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","file":"assets/scripts/9673.a3008072.js","sourcesContent":["import { atom } from 'recoil'\n\nimport { Props as BannerProps } from '~/components/Banner'\n\nexport type BannerElement = React.ReactElement<BannerProps, React.ComponentType<BannerProps>>\n\nexport interface Banner {\n  banner: BannerElement\n  key: string\n  replaceable: boolean\n}\n\nconst bannersState = atom<Banner[]>({\n  key: 'bannersState',\n  default: [],\n})\n\nexport default bannersState\n","import FaviconNotification from 'favicon-notification'\nimport { atom } from 'recoil'\n\nconst notificationsState = atom<Notification[]>({\n  key: 'notificationsState',\n  default: [],\n  effects_UNSTABLE: [\n    ({ onSet }) => {\n      onSet((newNotifications) => {\n        if (!Array.isArray(newNotifications)) {\n          throw new Error\n        }\n\n        if (newNotifications.length !== 0) {\n          FaviconNotification.add()\n        } else {\n          FaviconNotification.remove()\n        }\n      })\n    },\n  ],\n})\n\nexport default notificationsState\n","import { atom } from 'recoil'\n\nconst bannerOpenState = atom({\n  key: 'bannerOpenState',\n  default: false,\n})\n\nexport default bannerOpenState\n","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js!./classes.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import Collapse from '@material-ui/core/Collapse'\nimport Divider from '@material-ui/core/Divider'\nimport { Theme, makeStyles, useTheme } from '@material-ui/core/styles'\nimport classNames from 'classnames'\nimport React, { useEffect, useMemo, useState } from 'react'\nimport { useRecoilState, useRecoilValue } from 'recoil'\n\nimport bannerOpenState from '~/atoms/bannerOpenState'\nimport { Banner } from '~/atoms/bannersState'\nimport delay from '~/delay'\nimport currentBannerState from '~/selectors/currentBannerState'\nimport classes from './classes.css'\n\ninterface Props {\n  topAppbarHeight?: number\n}\n\ninterface StyleProps {\n  topAppbarHeight?: number\n}\n\nconst useStyles = makeStyles<Theme, StyleProps, 'CollapseContainer'>({\n  CollapseContainer: {\n    top: ({ topAppbarHeight }) => topAppbarHeight,\n  },\n})\n\nconst BannerContainer: React.FC<Props> = ({ topAppbarHeight }) => {\n  const currentBanner = useRecoilValue(currentBannerState)\n  const [open, setOpen] = useRecoilState(bannerOpenState)\n  const jssClasses = useStyles({ topAppbarHeight })\n  const collapseContainerClassName = useMemo(() => classNames(jssClasses.CollapseContainer, classes.CollapseContainer), [jssClasses])\n  const [bannerToShow, setBannerToShow] = useState<Banner | null>(null)\n  const theme = useTheme()\n\n  useEffect(() => {\n    // tslint:disable-next-line:semicolon\n    ;(async () => {\n      if (currentBanner !== null) {\n\n        // すでにバナーが表示されていて、別のバナーを表示しようとするときは、バナーを閉じる。\n        if (bannerToShow !== null && currentBanner.key !== bannerToShow.key) {\n          setOpen(false)\n          await delay(theme.transitions.duration.standard) // TODO: Wait the transition well\n        }\n\n        setBannerToShow(currentBanner)\n        setOpen(true)\n      } else {\n        setOpen(false)\n        await delay(theme.transitions.duration.standard) // TODO: Wait the transition\n        setBannerToShow(null)\n      }\n    })()\n  }, [currentBanner, bannerToShow, theme])\n\n  return (\n    <Collapse\n      in={ open }\n      mountOnEnter\n      unmountOnExit\n      classes={ {\n        container: collapseContainerClassName,\n      } }\n    >\n      <div>\n        { bannerToShow?.banner }\n        <Divider />\n      </div>\n    </Collapse>\n  )\n}\n\nexport default BannerContainer\n","import React from 'react'\n\ninterface Props {\n  /**\n   * @param children that throws `error`\n   */\n  renderError(error: unknown, children: React.ReactNode): React.ReactNode\n}\n\ninterface State {\n  hasError: boolean\n  error?: unknown\n}\n\nclass ErrorBoundary extends React.Component<Props, State> {\n\n  // NOTE: https://github.com/DefinitelyTyped/DefinitelyTyped/blob/826ce0f1ce1d1887d199986283630d6f63075ad5/types/react/index.d.ts#L419 にも関わらず、初期化されていない state は null であるため、初期化を強制するためにプロパティ宣言を行う。\n  public override state: Readonly<State> = {\n    hasError: false,\n  }\n\n  public static getDerivedStateFromError = (error: unknown) => ({\n    hasError: true,\n    error,\n  })\n\n  public override render() {\n    const { renderError, children } = this.props\n    const { hasError, error } = this.state\n\n    if (hasError) {\n      return renderError(error, children)\n    }\n\n    return children\n  }\n}\n\nexport default ErrorBoundary\n","import MuiLink, { LinkProps as MuiLinkProps } from '@material-ui/core/Link'\nimport React from 'react'\nimport { Link as RouterLink, LinkProps as RouterLinkProps } from 'react-router-dom'\n\nimport { isOneOf, optional } from '~/guards/commonGuards'\nimport typed from '~/typed'\n\nexport type Props =\n  & RouterLinkProps\n  & Alt.Omit<MuiLinkProps, 'color' | 'ref'>\n\nconst isTypographyColor = optional(isOneOf('initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error'))\n\n// TODO: Delete; See also https://material-ui.com/guides/composition/#link\nconst RouterLinkWithRef = React.forwardRef<HTMLAnchorElement, RouterLinkProps>((props, ref) => (\n  <RouterLink innerRef={ ref } { ...props } />\n))\n\nexport default class Link extends React.Component<Props> {\n  public override render() {\n    const { color, ...restProps } = this.props\n\n    if (!isTypographyColor(color)) {\n      console.warn(typed<[string]>`${ color } is not a Material-UI Typography color.`) // tslint:disable-line:no-console\n\n      return (\n        <MuiLink component={ RouterLinkWithRef } { ...restProps } />\n      )\n    }\n\n    return (\n      <MuiLink component={ RouterLinkWithRef } color={ color } { ...restProps } />\n    )\n  }\n}\n","import ListItem, { ListItemProps } from '@material-ui/core/ListItem'\nimport * as React from 'react'\n\nimport Link, { Props as LinkProps } from '~/components/Link'\n\ntype Props = ListItemProps<typeof Link, { button?: true }>\n\nconst ListItemLink: React.FC<Props> = React.forwardRef<Link, React.PropsWithoutRef<Props>>(({ to, button, innerRef, ...listItemProps }, listItem) => {\n  // See https://material-ui.com/guides/composition/#link\n  const LinkWithRef = React.forwardRef<Link, LinkProps>((linkProps, link) => (\n    <Link ref={ link } innerRef={ innerRef } color=\"inherit\" underline=\"none\" { ...linkProps } />\n  ))\n\n  return (\n    <ListItem button component={ LinkWithRef } to={ to } ref={ listItem } { ...listItemProps } />\n  )\n})\n\nexport default ListItemLink\n","import api from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js!./classes.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  home: 'Home',\n  components: 'Components',\n  formControls: 'Form controls',\n  apps: 'Apps',\n  chess: 'Chess',\n  clock: 'Clock',\n  counter: 'Counter',\n  info: 'Info',\n  paint: 'Paint',\n  reminder: 'Reminder',\n  settings: 'Settings',\n})\n","import chessPawn from '@iconify/icons-mdi/chess-pawn'\nimport clock from '@iconify/icons-mdi/clock'\nimport counter from '@iconify/icons-mdi/counter'\nimport { Icon } from '@iconify/react'\nimport Divider from '@material-ui/core/Divider'\nimport Drawer from '@material-ui/core/Drawer'\nimport IconButton from '@material-ui/core/IconButton'\nimport List from '@material-ui/core/List'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListSubheader from '@material-ui/core/ListSubheader'\nimport { Theme, makeStyles } from '@material-ui/core/styles'\nimport BrushIcon from '@material-ui/icons/Brush'\nimport HomeIcon from '@material-ui/icons/Home'\nimport InfoIcon from '@material-ui/icons/Info'\nimport ListIcon from '@material-ui/icons/List'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport TextFieldsIcon from '@material-ui/icons/TextFields'\nimport React, { useContext, useMemo } from 'react'\nimport { FormattedMessage } from 'react-intl'\n\nimport { shouldBePresent } from '~/asserters/commonAsserters'\nimport ListItemLink from '~/components/ListItemLink'\nimport IntlProviderContext from '~/contexts/IntlProviderContext'\nimport typed from '~/typed'\nimport classes from './classes.css'\nimport messages from './messages'\n\ninterface Props {\n  open: boolean\n  onClose(): void\n  topAppbarHeight?: number\n}\n\ninterface StyleProps {\n  topAppbarHeight?: number\n}\n\nconst useStyles = makeStyles<Theme, StyleProps, 'DrawerHeader'>((theme) => ({\n  DrawerHeader: {\n    ...theme.mixins.gutters(),\n    height: ({ topAppbarHeight }) => topAppbarHeight !== undefined ? typed<[number]>`${ topAppbarHeight }px` : undefined,\n    display: 'grid',\n    alignItems: 'center',\n    justifyContent: 'start',\n  },\n}), { name: 'Nav' })\n\nconst FlippedListIcon: React.FC<React.PropsOf<typeof ListIcon>> = ({ style, ...restProps }) => {\n  if (style === undefined) {\n    return <ListIcon style={ { transform: 'scaleX(-1)' } } { ...restProps } />\n  }\n\n  const { transform, ...restStyle } = style\n\n  if (transform !== undefined) {\n    throw new Error\n  }\n\n  return <ListIcon style={ { transform: 'scaleX(-1)', ...restStyle } } { ...restProps } />\n}\n\nconst Nav = React.forwardRef<HTMLDivElement, Props>(({ open, onClose, topAppbarHeight }, ref) => {\n  const { dir } = useContext(IntlProviderContext)\n\n  const RtlFriendlyListIcon = useMemo(() => {\n    shouldBePresent(dir)\n\n    switch (dir) {\n      case 'ltr': return ListIcon\n      case 'rtl': return FlippedListIcon\n    }\n  }, [dir])\n\n  const jssClasses = useStyles({ topAppbarHeight })\n\n  // NOTE: anchor はページが RtL であることを検出すると水平反転するので、 dir から計算する必要は無い。\n  return (\n    <Drawer anchor=\"left\" open={ open } onClose={ onClose } PaperProps={ { ref } }>\n      <div className={ jssClasses.DrawerHeader }>\n        <IconButton edge=\"start\" color=\"inherit\" onClick={ onClose }>\n          <MenuIcon />\n        </IconButton>\n      </div>\n      <Divider />\n      <List className={ classes.List }>\n        <ListItemLink to=\"/\" onClick={ onClose }>\n          <ListItemIcon>\n            <HomeIcon />\n          </ListItemIcon>\n          <ListItemText>\n            <FormattedMessage { ...messages.home } />\n          </ListItemText>\n        </ListItemLink>\n        <ListSubheader disableSticky>\n          <FormattedMessage { ...messages.components } />\n        </ListSubheader>\n        <ListItemLink to=\"/form-controls\" onClick={ onClose }>\n          <ListItemIcon>\n            <TextFieldsIcon />\n          </ListItemIcon>\n          <ListItemText>\n            <FormattedMessage { ...messages.formControls } />\n          </ListItemText>\n        </ListItemLink>\n        <ListSubheader disableSticky>\n          <FormattedMessage { ...messages.apps } />\n        </ListSubheader>\n        <ListItemLink to=\"/chess\" onClick={ onClose }>\n          <ListItemIcon>\n            <Icon icon={ chessPawn } width=\"24\" height=\"24\" />\n          </ListItemIcon>\n          <ListItemText>\n            <FormattedMessage { ...messages.chess } />\n          </ListItemText>\n        </ListItemLink>\n        <ListItemLink to=\"/clock\" onClick={ onClose }>\n          <ListItemIcon>\n            <Icon icon={ clock } width=\"24\" height=\"24\" />\n          </ListItemIcon>\n          <ListItemText>\n            <FormattedMessage { ...messages.clock } />\n          </ListItemText>\n        </ListItemLink>\n        <ListItemLink to=\"/counter\" onClick={ onClose }>\n          <ListItemIcon>\n            <Icon icon={ counter } width=\"24\" height=\"24\" />\n          </ListItemIcon>\n          <ListItemText>\n            <FormattedMessage { ...messages.counter } />\n          </ListItemText>\n        </ListItemLink>\n        <ListItemLink to=\"/info\" onClick={ onClose }>\n          <ListItemIcon>\n            <InfoIcon />\n          </ListItemIcon>\n          <ListItemText>\n            <FormattedMessage { ...messages.info } />\n          </ListItemText>\n        </ListItemLink>\n        <ListItemLink to=\"/paint\" onClick={ onClose }>\n          <ListItemIcon>\n            <BrushIcon />\n          </ListItemIcon>\n          <ListItemText>\n            <FormattedMessage { ...messages.paint } />\n          </ListItemText>\n        </ListItemLink>\n        <ListItemLink to=\"/reminder\" onClick={ onClose }>\n          <ListItemIcon>\n            <RtlFriendlyListIcon />\n          </ListItemIcon>\n          <ListItemText>\n            <FormattedMessage { ...messages.reminder } />\n          </ListItemText>\n        </ListItemLink>\n        <ListItemLink to=\"/settings\" onClick={ onClose }>\n          <ListItemIcon>\n            <SettingsIcon />\n          </ListItemIcon>\n          <ListItemText>\n            <FormattedMessage { ...messages.settings } />\n          </ListItemText>\n        </ListItemLink>\n      </List>\n    </Drawer>\n  )\n})\n\nexport default Nav\n","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js!./classes.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  language: 'Language',\n})\n","import FilledInput from '@material-ui/core/FilledInput'\nimport FormControl, { FormControlProps } from '@material-ui/core/FormControl'\nimport Input from '@material-ui/core/Input'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport OutlinedInput from '@material-ui/core/OutlinedInput'\nimport Select, { SelectProps } from '@material-ui/core/Select'\nimport { Theme, makeStyles, useTheme } from '@material-ui/core/styles'\nimport classnames from 'classnames'\nimport React, { useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { connect } from 'react-redux'\nimport { v4 } from 'uuid'\n\nimport IntlProviderContext from '~/contexts/IntlProviderContext'\nimport { Tag, getNativeNameByTag, isTag } from '~/languageNameSolver'\nimport { State } from '~/redux'\nimport { selectLocale } from '~/redux/modules/localeSelector'\nimport cssClasses from './classes.css'\nimport messages from './messages'\n\ninterface OwnProps {\n  classes?: {\n    root?: string\n    label?: string\n    input?: string\n    selectIcon?: string\n    inputUnderline?: string\n  } | null\n  FormControlProps?: FormControlProps | null\n}\n\ninterface StateProps {\n  locale: Tag\n}\n\ninterface DispatchProps {\n  selectLocale(locale: Tag): void\n}\n\ntype Props =\n  & OwnProps\n  & StateProps\n  & DispatchProps\n\ninterface StyleProps {\n  selectMinWidth?: number\n}\n\nconst useStyles = makeStyles<Theme, StyleProps, 'Select'>({\n  Select: {\n    minWidth: ({ selectMinWidth }) => selectMinWidth,\n  },\n})\n\nexport /* for testing */ const LocaleSelect: React.FC<Props> = ({ classes: propClasses, FormControlProps, locale, selectLocale }) => {\n  const [labelWidth, setLabelWidth] = useState<number | null>(null)\n  const [selectMinWidth, setSelectMinWidth] = useState<number | null>(null)\n  const inputId = useMemo(v4, [])\n  const theme = useTheme()\n  const { dir } = useContext(IntlProviderContext)\n  const jssClasses = useStyles({ selectMinWidth: selectMinWidth ?? undefined })\n\n  // NOTE: Fortunately, FormControl is nothing but FormControl.\n  const variant = useMemo(() => FormControlProps?.variant ?? theme?.props?.MuiFormControl?.variant ?? 'standard', [FormControlProps?.variant, theme?.props?.MuiFormControl?.variant])\n\n  const rootClassName = useMemo(() => classnames(propClasses?.root, FormControlProps?.className), [propClasses?.root, FormControlProps?.className])\n  const labelClassName = useMemo(() => classnames(propClasses?.label, cssClasses.InputLabel), [propClasses?.label])\n  const selectSelectClassName = useMemo(() => classnames(jssClasses.Select, cssClasses.Select), [jssClasses.Select])\n  const inputClassName = useMemo(() => classnames(propClasses?.input), [propClasses?.input])\n  const selectIconClassName = useMemo(() => classnames(propClasses?.selectIcon), [propClasses?.selectIcon])\n  const inputUnderlineClassName = useMemo(() => classnames(propClasses?.inputUnderline), [propClasses?.inputUnderline])\n\n  const inputLabel = useRef<HTMLLabelElement>(null)\n  const select = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    if (inputLabel.current === null) {\n      return\n    }\n\n    setLabelWidth(inputLabel.current.offsetWidth)\n\n    if (select.current === null) {\n      return\n    }\n\n    const selectSelect = select.current.querySelector(`:scope > .${ cssClasses.Select }`)\n\n    if (selectSelect === null || !(selectSelect instanceof HTMLDivElement)) {\n      return\n    }\n\n    const rect = inputLabel.current.getBoundingClientRect() // NOTE: node.offsetWidth は transform 前の値、 rect.width は transform 後の値を返す。\n\n    const style = globalThis.getComputedStyle(selectSelect)\n\n    // NOTE: document.dir 変更前なので style.paddingInlineStart 等で得ることはできない。\n    const paddingInlineStart = parseFloat(dir === 'ltr' ? style.paddingLeft : style.paddingRight)\n    const paddingInlineEnd = parseFloat(dir === 'ltr' ? style.paddingRight : style.paddingLeft)\n\n    // tslint:disable-next-line:no-object-mutation\n    setSelectMinWidth(rect.width + paddingInlineStart - paddingInlineEnd)\n  }, [locale, dir])\n\n  const handleChange = useCallback<NonNullable<SelectProps['onChange']>>((event) => {\n    if (isTag(event.target.value)) {\n      selectLocale(event.target.value)\n    }\n  }, [selectLocale])\n\n  const { availableLocales } = useContext(IntlProviderContext)\n\n  return (\n    <FormControl\n      { ...FormControlProps }\n      className={ rootClassName } // NOTE: Overrides FormControlProps.className\n    >\n      <InputLabel className={ labelClassName } ref={ inputLabel } htmlFor={ inputId }>\n        <FormattedMessage { ...messages.language } />\n      </InputLabel>\n      <Select\n        classes={ {\n          select: selectSelectClassName,\n          icon: selectIconClassName,\n        } }\n        ref={ select }\n        labelWidth={ labelWidth ?? undefined }\n        value={ locale }\n        onChange={ handleChange }\n        id={ inputId }\n        inputProps={ { 'data-testid': 'localeSelect' } }\n        input={ {\n          standard: (\n            <Input\n              className={ inputClassName }\n              classes={ {\n                underline: inputUnderlineClassName,\n              } }\n            />\n          ),\n          outlined: <OutlinedInput className={ inputClassName } labelWidth={ labelWidth ?? undefined } />,\n          filled: <FilledInput className={ inputClassName } />,\n        }[variant] }\n      >\n        { availableLocales?.map((availableLocale, i) => (\n          <MenuItem key={ i } value={ availableLocale }>{ getNativeNameByTag(availableLocale) }</MenuItem>\n        )) }\n      </Select>\n    </FormControl>\n  )\n}\n\n// connect\n\nconst mapStateToProps = ({ localeSelector: { locale } }: State): StateProps => ({\n  locale,\n})\n\nconst mapDispatchToProps: DispatchProps = {\n  selectLocale,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LocaleSelect)\n","import tagNativeNameMap from './__data__/tagNativeNameMap.json'\n\nexport type Tag = keyof typeof tagNativeNameMap\n\nexport function isTag(tag: unknown): tag is Tag {\n  return typeof tag === 'string' && tag in tagNativeNameMap\n}\n\nexport function getNativeNameByTag(tag: Tag) {\n  return tagNativeNameMap[tag]\n}\n","import { atom } from 'recoil'\n\ntype NotificationsSort = Sort<Notification>\n\nconst notificationsSortState = atom<NotificationsSort>({\n  key: 'notificationsSortState',\n  default: {\n    by: 'timestamp',\n    in: 'descending',\n  },\n})\n\nexport default notificationsSortState\n","import { selector } from 'recoil'\n\nimport notificationsSortState from '~/atoms/notificationsSortState'\nimport notificationsState from '~/atoms/notificationsState'\n\nconst sortedNotificationsState = selector({\n  key: 'sortedNotificationsState',\n  get({ get }) {\n    const notifications = get(notificationsState)\n    const sort = get(notificationsSortState)\n\n    const sorted = notifications.map(notification => ({\n      notification,\n      by: notification[sort.by],\n    }))\n    .sort(({ by: a }, { by: b }) => a - b) // tslint:disable-line:no-array-mutation\n    .map(({ notification }) => notification)\n\n    if (sort.in === 'descending') {\n      sorted.reverse() // tslint:disable-line:no-array-mutation\n    }\n\n    return sorted\n  },\n})\n\nexport default sortedNotificationsState\n","import IconButton from '@material-ui/core/IconButton'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport React, { useCallback } from 'react'\nimport { FormattedTime } from 'react-intl'\n\ninterface Props {\n  notification: Notification\n}\n\nconst NotificationListItem: React.FC<Props> = ({ notification }) => {\n  const handleDeleteButtonClick = useCallback<React.MouseEventHandler<HTMLButtonElement>>(() => {\n    notification.close()\n  }, [notification])\n\n  return (\n    <ListItem>\n      <ListItemText\n        primary={ notification.title }\n        secondary={ <FormattedTime value={ notification.timestamp } format=\"medium\" /> }\n      />\n      <ListItemSecondaryAction>\n        <IconButton edge=\"end\" onClick={ handleDeleteButtonClick }>\n          <DeleteIcon />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  )\n}\n\nexport default NotificationListItem\n","import List from '@material-ui/core/List'\nimport React from 'react'\nimport { useRecoilValue } from 'recoil'\n\nimport sortedNotificationsState from '~/selectors/sortedNotificationsState'\nimport NotificationListItem from './NotificationListItem'\n\nconst NotificationList: React.FC = () => {\n  const notifications = useRecoilValue(sortedNotificationsState)\n\n  return (\n    <List>\n      { notifications.map((n) => (\n        <NotificationListItem key={ n.timestamp } notification={ n } />\n      )) }\n    </List>\n  )\n}\n\nexport default NotificationList\n","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js!./classes.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  toggleLightDarkTheme: 'Toggle light/dark theme',\n})\n","import IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Brightness4Icon from '@material-ui/icons/Brightness4'\nimport Brightness7Icon from '@material-ui/icons/Brightness7'\nimport React, { useCallback, useContext } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { useRecoilState } from 'recoil'\n\nimport { shouldBePresent } from '~/asserters/commonAsserters'\nimport DefaultDarkContext from '~/contexts/DefaultDarkContext'\nimport darkState from '~/selectors/darkState'\nimport classes from './classes.css'\nimport messages from './messages'\n\nconst ToggleDarkButton = () => {\n  const [dark, setDark] = useRecoilState(darkState)\n  const { defaultDark } = useContext(DefaultDarkContext)\n\n  shouldBePresent(defaultDark)\n\n  const handleOn = useCallback(() => {\n    setDark(true)\n  }, [])\n\n  const handleOff = useCallback(() => {\n    setDark(false)\n  }, [])\n\n  return (\n    <Tooltip title={ <FormattedMessage { ...messages.toggleLightDarkTheme } /> }>\n      <span className={ classes.TooltipWrapper }>\n        { dark ?? defaultDark ? (\n          <IconButton onClick={ handleOff }>\n            <Brightness7Icon />\n          </IconButton>\n        ) : (\n          <IconButton onClick={ handleOn } color=\"inherit\">\n            <Brightness4Icon />\n          </IconButton>\n        ) }\n      </span>\n    </Tooltip>\n  )\n}\n\nexport default ToggleDarkButton\n","import api from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js!./classes.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  showNotifications: 'Show notifications',\n})\n","import AppBar from '@material-ui/core/AppBar'\nimport Badge from '@material-ui/core/Badge'\nimport Box from '@material-ui/core/Box'\nimport IconButton from '@material-ui/core/IconButton'\nimport Popover from '@material-ui/core/Popover'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport { Theme, makeStyles } from '@material-ui/core/styles'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport NotificationsIcon from '@material-ui/icons/Notifications'\nimport React, { useCallback, useContext, useEffect, useState } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { useRecoilState } from 'recoil'\n\nimport notificationsState from '~/atoms/notificationsState'\nimport LocaleSelect from '~/components/LocaleSelect' // TODO\nimport NotificationList from '~/components/NotificationList'\nimport Spacer from '~/components/Spacer'\nimport ToggleDarkButton from '~/components/ToggleDarkButton'\nimport IntlProviderContext from '~/contexts/IntlProviderContext'\nimport useRefsMerged from '~/hooks/useRefsMerged'\nimport useScreen from '~/hooks/useScreen'\nimport classes from './classes.css'\nimport messages from './messages'\n\ninterface Props {\n  onMenuIconButtonClick: React.MouseEventHandler<HTMLButtonElement>\n}\n\ninterface StyleProps {\n  topAppbarHeight?: number\n}\n\nconst useStyles = makeStyles<Theme, StyleProps, 'Offset'>({\n  Offset: {\n    height: ({ topAppbarHeight }) => topAppbarHeight,\n  },\n})\n\nconst TopAppbar = React.forwardRef<HTMLDivElement, Props>(({ onMenuIconButtonClick }, forwardedRef) => {\n  const { width: screenWidth } = useScreen()\n  const { dir } = useContext(IntlProviderContext)\n  const [height, setHeight] = useState<number | null>(null)\n\n  const ownRef = useCallback<React.RefCallback<HTMLDivElement>>((node) => {\n    // To silence the ESLint rule react-hooks/exhaustive-deps\n    if (screenWidth === null) {\n      return\n    }\n\n    const rect = node?.getBoundingClientRect()\n\n    if (rect === undefined) {\n      return\n    }\n\n    setHeight(rect.height)\n  }, [screenWidth])\n\n  const ref = useRefsMerged(forwardedRef, ownRef)\n\n  const jssClasses = useStyles({ topAppbarHeight: height ?? undefined })\n\n  const [notifications] = useRecoilState(notificationsState)\n  const [notificationsOpen, setNotificationsOpen] = useState(false)\n\n  const anchor = React.useRef<HTMLButtonElement | null>(null)\n\n  const handleNotificationsShow = useCallback<React.MouseEventHandler<HTMLButtonElement>>(() => {\n    if (notifications.length !== 0) {\n      setNotificationsOpen(true)\n    }\n  }, [notifications])\n\n  const handleNotificationsClose = useCallback(() => {\n    setNotificationsOpen(false)\n  }, [])\n\n  useEffect(() => {\n    if (notifications.length === 0) {\n      setNotificationsOpen(false)\n    }\n  }, [notifications])\n\n  return (\n    <>\n      <AppBar position=\"fixed\" ref={ ref }>\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" onClick={ onMenuIconButtonClick }>\n            <MenuIcon />\n          </IconButton>\n          <Spacer />\n          <Box mx={ 1 }>\n            <ToggleDarkButton />\n            { 'Notification' in globalThis && <>\n              <Tooltip\n                title={ <FormattedMessage { ...messages.showNotifications } /> }\n                disableFocusListener={ notifications.length === 0 }\n                disableHoverListener={ notifications.length === 0 }\n                disableTouchListener={ notifications.length === 0 }\n              >\n                <span className={ classes.TooltipWrapper }>\n                  <IconButton color=\"inherit\" onClick={ handleNotificationsShow } ref={ anchor } disabled={ notifications.length === 0 }>\n                    <Badge color=\"secondary\" badgeContent={ notifications.length }>\n                      <NotificationsIcon />\n                    </Badge>\n                  </IconButton>\n                </span>\n              </Tooltip>\n              { notifications.length !== 0 && <Popover\n                open={ notificationsOpen }\n                onClose={ handleNotificationsClose }\n                anchorEl={ anchor.current }\n                anchorOrigin={ {\n                  horizontal: dir === 'ltr' ? 'right' : 'left',\n                  vertical: 'bottom',\n                } }\n                transformOrigin={ {\n                  horizontal: dir === 'ltr' ? 'right' : 'left',\n                  vertical: 'top',\n                } }\n              >\n                <NotificationList />\n              </Popover> }\n            </> }\n          </Box>\n          <LocaleSelect\n            classes={ {\n              label: classes.LocaleSelectLabel,\n              input: classes.LocaleSelectInput,\n              selectIcon: classes.LocaleSelectSelectIcon,\n              inputUnderline: classes.LocaleSelectInputUnderline,\n            } }\n            FormControlProps={ {\n              variant: 'filled',\n            } }\n          />\n        </Toolbar>\n      </AppBar>\n      <div className={ jssClasses.Offset } />\n    </>\n  )\n})\n\nexport default TopAppbar\n","import React, { useCallback, useRef, useState } from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\n\nimport BannerContainer from '~/components/BannerContainer'\nimport ErrorBoundary from '~/components/ErrorBoundary'\nimport useScreen from '~/hooks/useScreen'\nimport typed from '~/typed'\nimport Nav from './Nav'\nimport TopAppbar from './TopAppbar'\n\ninterface PageTemplateProps {\n  children: React.ReactElement<BodyProps, React.ComponentType<BodyProps>>\n}\n\ntype BodyProps = PageProps\n\ntype PageProps =\n  & RouteComponentProps\n\nconst PageTemplate: React.FC<PageTemplateProps> = ({ children }) => {\n  const renderError = useCallback((error: unknown) => {\n    if (error instanceof Error) {\n      return typed<[string]>`${ String(error) }`\n    }\n\n    throw new TypeError(typed<[string]>`${ String(error) } is not an error.`)\n  }, [])\n\n  const [drawerOpen, setDrawerOpen] = useState(false)\n  const drawerRef = useRef<HTMLDivElement>(null)\n\n  const { width } = useScreen()\n  const [topAppbarHeight, setTopAppbarHeight] = useState<number | null>(null)\n\n  const topAppbarRef = useCallback<React.RefCallback<HTMLDivElement>>((node) => {\n    // To silence the ESLint rule react-hooks/exhaustive-deps\n    if (width === null) {\n      return\n    }\n\n    const topAppbarRect = node?.getBoundingClientRect()\n\n    if (topAppbarRect === undefined) {\n      return\n    }\n\n    setTopAppbarHeight(topAppbarRect.height)\n  }, [width])\n\n  const openDrawer = useCallback<React.MouseEventHandler>(() => {\n    setDrawerOpen(true)\n  }, [])\n\n  const closeDrawer = useCallback(() => {\n    setDrawerOpen(false)\n  }, [])\n\n  return (\n    <>\n      <TopAppbar ref={ topAppbarRef } onMenuIconButtonClick={ openDrawer } />\n      <BannerContainer topAppbarHeight={ topAppbarHeight ?? undefined } />\n      <Nav\n        ref={ drawerRef }\n        open={ drawerOpen }\n        onClose={ closeDrawer }\n        topAppbarHeight={ topAppbarHeight ?? undefined }\n      />\n      <ErrorBoundary renderError={ renderError }>\n        { children }\n      </ErrorBoundary>\n    </>\n  )\n}\n\nexport const createPage: (Body: React.FC<BodyProps>) => React.FC<PageProps> = (Body) => (props) => (\n  <PageTemplate>\n    <Body { ...props } />\n  </PageTemplate>\n)\n\nexport default PageTemplate\n","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js!./classes.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import React from 'react'\n\nimport classes from './classes.css'\n\nconst Spacer: React.FC = () => (\n  <div className={ classes.Spacer } />\n)\n\nexport default Spacer\n","import identity from '~/identity'\n\nexport const isOneOf = <T extends readonly Json[]>(...options: T) => (input: unknown): input is T[number] => options.some((option) => option === input)\n\nexport const optional = <A extends unknown, T extends A>(isT: (input: A) => input is T) => (input: A | undefined): input is T | undefined => {\n  if (input === undefined) {\n    return true\n  }\n\n  return isT(input)\n}\n\nexport const isObject = <A extends B, T extends A, B = A>(isT: (input: B) => Record<keyof A, boolean>) => (input: A): input is T => {\n  return Object.values<boolean>(isT(input)).every(identity)\n}\n","import React, { useCallback } from 'react'\n\nexport default function useRefsMerged<T>(...refs: React.Ref<T>[]): React.RefCallback<T> {\n  return useCallback((node) => {\n    for (const ref of refs) { // tslint:disable-line:no-loop-statement\n      if (ref === null) {\n        continue\n      }\n\n      // NOTE: 関数に `current` が設定されたものは React では callback ref と見なされるので、関数かどうかを先に調べる。\n      if (typeof ref === 'function') {\n        ref(node)\n      } else {\n        const mutableRef: React.MutableRefObject<T | null> = ref // FIXME\n\n        mutableRef.current = node // tslint:disable-line:no-object-mutation\n      }\n    }\n  }, [refs])\n}\n","import { useCallback, useEffect, useState } from 'react'\n\nexport default function useScreen() {\n  const [width, setWidth] = useState<number | null>(null)\n  const [height, setHeight] = useState<number | null>(null)\n  const [dpr, setDpr] = useState<number | null>(null)\n\n  const updateScreenSize = useCallback(() => {\n    setWidth(globalThis.innerWidth)\n    setHeight(globalThis.innerHeight)\n  }, [])\n\n  const updateScreenDpr = useCallback(() => {\n    setDpr(globalThis.devicePixelRatio)\n  }, [])\n\n  useEffect(() => {\n    updateScreenSize()\n    updateScreenDpr()\n\n    globalThis.addEventListener('resize', updateScreenSize)\n    globalThis.addEventListener('change', updateScreenDpr)\n\n    return () => {\n      globalThis.removeEventListener('resize', updateScreenSize)\n      globalThis.removeEventListener('change', updateScreenDpr)\n    }\n  }, [updateScreenSize, updateScreenDpr])\n\n  return { width, height, dpr }\n}\n","import assert from 'assert'\nimport { DefaultValue, selector } from 'recoil'\n\nimport bannersState, { Banner } from '~/atoms/bannersState'\n\nconst currentBannerState = selector<Banner | null>({\n  key: 'currentBannerState',\n  get({ get }) {\n    const banners = get(bannersState)\n\n    if (banners.length >= 1) {\n      return banners[0]\n    } else {\n      return null\n    }\n  },\n  set({ get, set }, newCurrentBanner) {\n    if (newCurrentBanner instanceof DefaultValue) {\n      throw new Error('DefaultValue not supported.')\n    }\n\n    set(bannersState, (banners) => {\n      if (newCurrentBanner === null) {\n        const [_firstBanner, ...restBanners] = banners\n\n        return restBanners\n      } else {\n        const oldCurrentBanner = get(currentBannerState)\n\n        // TODO: Use `do` expression: https://github.com/tc39/proposal-do-expressions\n        const bannersWOCurrentReplaceable = (() => {\n          if (oldCurrentBanner !== null && oldCurrentBanner.replaceable) {\n            const j = banners.findIndex((banner) => banner.key === oldCurrentBanner.key)\n\n            assert(j === 0)\n\n            return [\n              ...banners.slice(0, j),\n              ...banners.slice(j + 1),\n            ]\n          } else {\n            return banners\n          }\n        })()\n\n        const i = bannersWOCurrentReplaceable.findIndex((banner) => banner.key === newCurrentBanner.key)\n\n        if (i !== -1) {\n          return [\n            newCurrentBanner,\n            ...bannersWOCurrentReplaceable.slice(0, i),\n            ...bannersWOCurrentReplaceable.slice(i + 1),\n          ]\n        } else {\n          return [newCurrentBanner, ...bannersWOCurrentReplaceable]\n        }\n      }\n    })\n  },\n})\n\nexport default currentBannerState\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-components-BannerContainer-classes__CollapseContainer--1XRJF {\\n  position: sticky;\\n  z-index: 1075; /* NOTE: Behind an app bar, ahead speed dials; cf. https://material-ui.com/customization/z-index/ */\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/BannerContainer/classes.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,gBAAgB;EAChB,aAAa,EAAE,mGAAmG;AACpH\",\"sourcesContent\":[\".CollapseContainer {\\n  position: sticky;\\n  z-index: 1075; /* NOTE: Behind an app bar, ahead speed dials; cf. https://material-ui.com/customization/z-index/ */\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"CollapseContainer\": \"src-components-BannerContainer-classes__CollapseContainer--1XRJF\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-components-LocaleSelect-classes__InputLabel--2e4qL {\\n  white-space: nowrap;\\n}\\n\\n.src-components-LocaleSelect-classes__Select--2XRfO {\\n  /* Silence is golden. */\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/LocaleSelect/classes.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,mBAAmB;AACrB;;AAEA;EACE,uBAAuB;AACzB\",\"sourcesContent\":[\".InputLabel {\\n  white-space: nowrap;\\n}\\n\\n.Select {\\n  /* Silence is golden. */\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"InputLabel\": \"src-components-LocaleSelect-classes__InputLabel--2e4qL\",\n\t\"Select\": \"src-components-LocaleSelect-classes__Select--2XRfO\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-components-PageTemplate-Nav-classes__List--Wtuz2 {\\n  overflow-y: auto;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/PageTemplate/Nav/classes.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,gBAAgB;AAClB\",\"sourcesContent\":[\".List {\\n  overflow-y: auto;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"List\": \"src-components-PageTemplate-Nav-classes__List--Wtuz2\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-components-PageTemplate-TopAppbar-classes__LocaleSelectLabel--1RjUX.src-components-PageTemplate-TopAppbar-classes__LocaleSelectLabel--1RjUX {\\n  color: currentColor\\n}\\n\\n.src-components-PageTemplate-TopAppbar-classes__LocaleSelectLabel--1RjUX.src-components-PageTemplate-TopAppbar-classes__LocaleSelectLabel--1RjUX.Mui-focused {\\n    opacity: 0.618;\\n    color: currentColor;\\n  }\\n\\n.src-components-PageTemplate-TopAppbar-classes__LocaleSelectInput--1iMs0.src-components-PageTemplate-TopAppbar-classes__LocaleSelectInput--1iMs0 {\\n  color: currentColor;\\n}\\n\\n.src-components-PageTemplate-TopAppbar-classes__LocaleSelectSelectIcon--2tFO9.src-components-PageTemplate-TopAppbar-classes__LocaleSelectSelectIcon--2tFO9 {\\n  color: currentColor;\\n}\\n\\n.src-components-PageTemplate-TopAppbar-classes__LocaleSelectInputUnderline--2c5cm.src-components-PageTemplate-TopAppbar-classes__LocaleSelectInputUnderline--2c5cm::before,\\n  .src-components-PageTemplate-TopAppbar-classes__LocaleSelectInputUnderline--2c5cm.src-components-PageTemplate-TopAppbar-classes__LocaleSelectInputUnderline--2c5cm:hover:not(.Mui-disabled)::before,\\n  .src-components-PageTemplate-TopAppbar-classes__LocaleSelectInputUnderline--2c5cm.src-components-PageTemplate-TopAppbar-classes__LocaleSelectInputUnderline--2c5cm::after {\\n    border-bottom-color: currentColor;\\n  }\\n\\n/* TODO: Remove */\\n/* NOTE: https://material-ui.com/components/tooltips/#disabled-elements のように <span> を差し込む場合、ツールチップの位置を <span> が無い場合と揃えるために <span> の高さを保持する。 */\\n/* NOTE: <Tooltip> の親の内側のレイアウトが flex な場合も <span> の高さが保持されるので、 <InputAdornment> 等で使う場合はこのルールセットは不要。 */\\n.src-components-PageTemplate-TopAppbar-classes__TooltipWrapper--TkZN7 {\\n  display: inline flow-root;\\n  display: inline-block; /* TODO: Delete this line */\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/PageTemplate/TopAppbar/classes.css\"],\"names\":[],\"mappings\":\"AAAA;EACE;AAMF;;AAJE;IACE,cAAc;IACd,mBAAmB;EACrB;;AAGF;EACE,mBAAmB;AACrB;;AAEA;EACE,mBAAmB;AACrB;;AAGE;;;IAGE,iCAAiC;EACnC;;AAGF,iBAAiB;AACjB,6IAA6I;AAC7I,oGAAoG;AACpG;EACE,yBAAyB;EACzB,qBAAqB,EAAE,2BAA2B;AACpD\",\"sourcesContent\":[\".LocaleSelectLabel.LocaleSelectLabel {\\n  color: currentColor;\\n\\n  &:global(.Mui-focused) {\\n    opacity: 0.618;\\n    color: currentColor;\\n  }\\n}\\n\\n.LocaleSelectInput.LocaleSelectInput {\\n  color: currentColor;\\n}\\n\\n.LocaleSelectSelectIcon.LocaleSelectSelectIcon {\\n  color: currentColor;\\n}\\n\\n.LocaleSelectInputUnderline.LocaleSelectInputUnderline {\\n  &::before,\\n  &:hover:not(:global(.Mui-disabled))::before,\\n  &::after {\\n    border-bottom-color: currentColor;\\n  }\\n}\\n\\n/* TODO: Remove */\\n/* NOTE: https://material-ui.com/components/tooltips/#disabled-elements のように <span> を差し込む場合、ツールチップの位置を <span> が無い場合と揃えるために <span> の高さを保持する。 */\\n/* NOTE: <Tooltip> の親の内側のレイアウトが flex な場合も <span> の高さが保持されるので、 <InputAdornment> 等で使う場合はこのルールセットは不要。 */\\n.TooltipWrapper {\\n  display: inline flow-root;\\n  display: inline-block; /* TODO: Delete this line */\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"LocaleSelectLabel\": \"src-components-PageTemplate-TopAppbar-classes__LocaleSelectLabel--1RjUX\",\n\t\"LocaleSelectInput\": \"src-components-PageTemplate-TopAppbar-classes__LocaleSelectInput--1iMs0\",\n\t\"LocaleSelectSelectIcon\": \"src-components-PageTemplate-TopAppbar-classes__LocaleSelectSelectIcon--2tFO9\",\n\t\"LocaleSelectInputUnderline\": \"src-components-PageTemplate-TopAppbar-classes__LocaleSelectInputUnderline--2c5cm\",\n\t\"TooltipWrapper\": \"src-components-PageTemplate-TopAppbar-classes__TooltipWrapper--TkZN7\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-components-Spacer-classes__Spacer--3cheZ {\\n  flex-grow: 1;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/Spacer/classes.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,YAAY;AACd\",\"sourcesContent\":[\".Spacer {\\n  flex-grow: 1;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"Spacer\": \"src-components-Spacer-classes__Spacer--3cheZ\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/* TODO: Remove */\\n/* NOTE: https://material-ui.com/components/tooltips/#disabled-elements のように <span> を差し込む場合、ツールチップの位置を <span> が無い場合と揃えるために <span> の高さを保持する。 */\\n/* NOTE: <Tooltip> の親の内側のレイアウトが flex な場合も <span> の高さが保持されるので、 <InputAdornment> 等で使う場合はこのルールセットは不要。 */\\n.src-components-ToggleDarkButton-classes__TooltipWrapper--J9IIY {\\n  display: inline flow-root;\\n  display: inline-block; /* TODO: Delete this line */\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/ToggleDarkButton/classes.css\"],\"names\":[],\"mappings\":\"AAAA,iBAAiB;AACjB,6IAA6I;AAC7I,oGAAoG;AACpG;EACE,yBAAyB;EACzB,qBAAqB,EAAE,2BAA2B;AACpD\",\"sourcesContent\":[\"/* TODO: Remove */\\n/* NOTE: https://material-ui.com/components/tooltips/#disabled-elements のように <span> を差し込む場合、ツールチップの位置を <span> が無い場合と揃えるために <span> の高さを保持する。 */\\n/* NOTE: <Tooltip> の親の内側のレイアウトが flex な場合も <span> の高さが保持されるので、 <InputAdornment> 等で使う場合はこのルールセットは不要。 */\\n.TooltipWrapper {\\n  display: inline flow-root;\\n  display: inline-block; /* TODO: Delete this line */\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"TooltipWrapper\": \"src-components-ToggleDarkButton-classes__TooltipWrapper--J9IIY\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n"],"sourceRoot":""}