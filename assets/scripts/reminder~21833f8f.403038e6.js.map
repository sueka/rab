{"version":3,"sources":["webpack:///./src/lib/identity.ts","webpack:///./src/lib/guards/commonGuards.ts","webpack:///./src/components/Nav/classes.css?5ee4","webpack:///./src/components/Nav/classes.css","webpack:///./src/components/LocaleSelect/classes.css?cdf4","webpack:///./src/components/LocaleSelect/classes.css","webpack:///./src/components/DarkSwitch/index.tsx","webpack:///./src/components/LocaleSelect/messages.ts","webpack:///./src/components/LocaleSelect/index.tsx","webpack:///./src/lib/languageNameSolver/index.ts","webpack:///./src/lib/components/Link/index.tsx","webpack:///./src/lib/components/MenuItemLink/index.tsx","webpack:///./src/components/Nav/messages.ts","webpack:///./src/components/Nav/index.tsx","webpack:///./src/lib/components/ErrorBoundary/index.ts","webpack:///./src/templates/PageTemplate/index.tsx","webpack:///./src/lib/asserters/commonAsserters.ts","webpack:///./src/lib/validators/stringValidators.ts","webpack:///./src/components/Reminder/TaskListItem/classes.css?e0e5","webpack:///./src/components/Reminder/TaskListItem/classes.css","webpack:///./src/lib/curry.ts","webpack:///./src/components/Reminder/AddTaskButton/messages.ts","webpack:///./src/components/Reminder/AddTaskButton/index.tsx","webpack:///./src/components/Reminder/TaskList/index.tsx","webpack:///./src/components/Reminder/TaskListItem/DeleteTaskButton/index.tsx","webpack:///./src/components/Reminder/TaskListItem/messages.ts","webpack:///./src/components/Reminder/TaskListItem/index.tsx","webpack:///./src/components/Reminder/TaskListItemDropTarget/index.tsx","webpack:///./src/components/Reminder/index.tsx","webpack:///./src/components/App/ReminderPage/messages.ts","webpack:///./src/components/App/ReminderPage/index.tsx"],"names":["isOneOf","options","input","some","option","optional","isT","undefined","api","content","__esModule","default","module","i","exports","locals","___CSS_LOADER_API_IMPORT___","push","DarkSwitch","useContext","ThemeProviderContext","dark","setDark","Error","handleChange","useCallback","_event","checked","Switch","onChange","defineMessages","languages","mapDispatchToProps","selectLocale","connect","locale","localeSelector","propClasses","classes","FormControlProps","useState","labelWidth","setLabelWidth","inputId","useMemo","v4","theme","useTheme","variant","props","MuiFormControl","rootClassName","classnames","root","className","labelClassName","label","cssClasses","InputLabel","inputClassName","selectIconClassName","selectIcon","inputUnderlineClassName","inputUnderline","select","useRef","inputLabel","node","offsetWidth","current","selectSelect","querySelector","Select","HTMLDivElement","rect","getBoundingClientRect","style","minWidth","width","event","tag","target","value","tagNativeNameMap","availableLocales","IntlProviderContext","FormControl","ref","htmlFor","messages","icon","id","inputProps","standard","Input","underline","outlined","OutlinedInput","filled","FilledInput","map","availableLocale","MenuItem","key","isTypographyColor","RouterLinkWithRef","React","forwardRef","innerRef","Link","this","color","restProps","component","console","warn","typed","Component","MenuItemLink","menuItem","to","button","menuItemProps","LinkWithRef","linkProps","link","home","chess","counter","info","paint","reminder","Nav","anchorEl","setAnchorEl","openMenu","currentTarget","closeMenu","AppBar","position","Toolbar","IconButton","edge","onClick","Spacer","LocaleSelectLabel","LocaleSelectInput","LocaleSelectSelectIcon","LocaleSelectInputUnderline","Menu","open","onClose","ErrorBoundary","state","hasError","renderError","children","error","getDerivedStateFromError","PageTemplate","String","TypeError","createPage","Body","shouldBePresent","it","shouldBeNullable","asBoundedLengthString","lowerBound","Infinity","upperBound","inputAsString","asString","length","ValidationError","asUrl","isUrl","curry","f","x","xs","add","AddTaskButton","addTask","Button","TaskList","List","DeleteTaskButton","asBoundedLengthStringErrorMessage","TaskListItem","index","onDelete","validate","useDrag","item","type","isDragging","monitor","getItem","isIdenticalTo","collect","dragging","drag","preview","dir","TaskListItemContainer","Ltr","Rtl","Dragging","handleContentChange","handleDoneChange","_checked","done","useIntl","formatMessage","errors","Object","values","helperText","keys","text","Case","sentence","ListItem","container","secondaryAction","ListItemSecondaryAction","ListItemIcon","Checkbox","TextField","fullWidth","disabled","TaskListItemDropTarget","moveTask","div","useDrop","accept","hover","clientOffset","getClientOffset","boundingClientRect","pointerY","y","top","middleY","bottom","drop","asObject","leftOnly","named","asBoolean","getTasks","getTasksAsync","addTaskAsync","changeTaskContent","changeTaskContentAsync","markTaskAsDone","markTaskAsDoneAsync","markTaskAsUndone","markTaskAsUndoneAsync","deleteTask","deleteTaskAsync","tasks","useEffect","changeTask","taskId","task","toArray","title"],"mappings":"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","file":"assets/scripts/reminder~21833f8f.403038e6.js","sourcesContent":["const identity = <T extends U, U>(it: T): U => it\n\nexport default identity\n","import identity from '~/lib/identity'\n\nexport const isOneOf = <T extends readonly Json[]>(...options: T) => (input: unknown): input is T[number] => options.some((option) => option === input)\n\nexport const optional = <A extends unknown, T extends A>(isT: (input: A) => input is T) => (input: A | undefined): input is T | undefined => {\n  if (input === undefined) {\n    return true\n  }\n\n  return isT(input)\n}\n\nexport const isObject = <A extends B, T extends A, B = A>(isT: (input: B) => Record<keyof A, boolean>) => (input: A): input is T => {\n  return Object.values<boolean>(isT(input)).every(identity)\n}\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--5-1!../../../node_modules/postcss-loader/src/index.js!./classes.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".src-components-Nav-classes__Spacer--36ovl {\\n  flex-grow: 1;\\n}\\n\\n.src-components-Nav-classes__LocaleSelectLabel--3h3DV.src-components-Nav-classes__LocaleSelectLabel--3h3DV {\\n  color: currentColor\\n}\\n\\n.src-components-Nav-classes__LocaleSelectLabel--3h3DV.src-components-Nav-classes__LocaleSelectLabel--3h3DV.Mui-focused {\\n    opacity: 0.618;\\n    color: currentColor;\\n  }\\n\\n.src-components-Nav-classes__LocaleSelectInput--3oNu1.src-components-Nav-classes__LocaleSelectInput--3oNu1 {\\n  color: currentColor;\\n}\\n\\n.src-components-Nav-classes__LocaleSelectSelectIcon--2AyFk.src-components-Nav-classes__LocaleSelectSelectIcon--2AyFk {\\n  color: currentColor;\\n}\\n\\n.src-components-Nav-classes__LocaleSelectInputUnderline--2WFrx.src-components-Nav-classes__LocaleSelectInputUnderline--2WFrx::before,\\n  .src-components-Nav-classes__LocaleSelectInputUnderline--2WFrx.src-components-Nav-classes__LocaleSelectInputUnderline--2WFrx:hover:not(.Mui-disabled)::before,\\n  .src-components-Nav-classes__LocaleSelectInputUnderline--2WFrx.src-components-Nav-classes__LocaleSelectInputUnderline--2WFrx::after {\\n    border-bottom-color: currentColor;\\n  }\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"Spacer\": \"src-components-Nav-classes__Spacer--36ovl\",\n\t\"LocaleSelectLabel\": \"src-components-Nav-classes__LocaleSelectLabel--3h3DV\",\n\t\"LocaleSelectInput\": \"src-components-Nav-classes__LocaleSelectInput--3oNu1\",\n\t\"LocaleSelectSelectIcon\": \"src-components-Nav-classes__LocaleSelectSelectIcon--2AyFk\",\n\t\"LocaleSelectInputUnderline\": \"src-components-Nav-classes__LocaleSelectInputUnderline--2WFrx\"\n};\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--5-1!../../../node_modules/postcss-loader/src/index.js!./classes.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".src-components-LocaleSelect-classes__InputLabel--3FfW9 {\\n  white-space: nowrap;\\n}\\n\\n.src-components-LocaleSelect-classes__Select--3gHqK {\\n  /* Silence is golden. */\\n}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"InputLabel\": \"src-components-LocaleSelect-classes__InputLabel--3FfW9\",\n\t\"Select\": \"src-components-LocaleSelect-classes__Select--3gHqK\"\n};\nmodule.exports = exports;\n","import React, { useCallback, useContext } from 'react'\n\nimport Switch from '@material-ui/core/Switch'\n\nimport ThemeProviderContext from '~/contexts/ThemeProviderContext'\n\nconst DarkSwitch = () => {\n  const { dark, setDark } = useContext(ThemeProviderContext)\n\n  if (dark == null || setDark == null) {\n    throw new Error //\n  }\n\n  const handleChange = useCallback((_event, checked) => {\n    setDark(checked)\n  }, [setDark])\n\n  return (\n    <Switch checked={ dark } onChange={ handleChange } />\n  )\n}\n\nexport default DarkSwitch\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  languages: 'Languages',\n})\n","import classnames from 'classnames'\nimport React, { useCallback, useContext, useMemo, useRef, useState } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { connect } from 'react-redux'\nimport { v4 } from 'uuid'\n\nimport FilledInput from '@material-ui/core/FilledInput'\nimport FormControl, { FormControlProps } from '@material-ui/core/FormControl'\nimport Input from '@material-ui/core/Input'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport OutlinedInput from '@material-ui/core/OutlinedInput'\nimport Select, { SelectProps } from '@material-ui/core/Select'\nimport { useTheme } from '@material-ui/core/styles'\n\nimport IntlProviderContext from '~/lib/contexts/IntlProviderContext'\nimport { Tag, getNativeNameByTag, isTag } from '~/lib/languageNameSolver'\nimport { State } from '~/redux'\nimport { selectLocale } from '~/redux/modules/localeSelector'\nimport cssClasses from './classes.css'\nimport messages from './messages'\n\ninterface OwnProps {\n  classes?: {\n    root?: string\n    label?: string\n    input?: string\n    selectIcon?: string\n    inputUnderline?: string\n  } | null\n  FormControlProps?: FormControlProps | null\n}\n\ninterface StateProps {\n  locale: Tag\n}\n\ninterface DispatchProps {\n  selectLocale(locale: Tag): void\n}\n\ntype Props =\n  & OwnProps\n  & StateProps\n  & DispatchProps\n\nexport /* for testing */ const LocaleSelect: React.FC<Props> = ({ classes: propClasses, FormControlProps, locale, selectLocale }) => {\n  const [labelWidth, setLabelWidth] = useState<number>(0)\n  const inputId = useMemo(v4, [])\n  const theme = useTheme()\n\n  // NOTE: Fortunately, FormControl is nothing but FormControl.\n  const variant = useMemo(() => FormControlProps?.variant ?? theme?.props?.MuiFormControl?.variant ?? 'standard', [FormControlProps?.variant, theme?.props?.MuiFormControl?.variant])\n\n  const rootClassName = useMemo(() => classnames(propClasses?.root,  FormControlProps?.className), [propClasses?.root, FormControlProps?.className])\n  const labelClassName = useMemo(() => classnames(propClasses?.label, cssClasses.InputLabel), [propClasses?.label])\n  const inputClassName = useMemo(() => classnames(propClasses?.input), [propClasses?.input])\n  const selectIconClassName = useMemo(() => classnames(propClasses?.selectIcon), [propClasses?.selectIcon])\n  const inputUnderlineClassName = useMemo(() => classnames(propClasses?.inputUnderline), [propClasses?.inputUnderline])\n\n  const select = useRef<HTMLDivElement>(null)\n\n  const inputLabel = useCallback((node: HTMLLabelElement | null) => { // TODO: Type\n    if (node !== null) {\n      setLabelWidth(node.offsetWidth)\n\n      if (select.current === null) {\n        return\n      }\n\n      const selectSelect = select.current.querySelector(`:scope > .${ cssClasses.Select }`)\n\n      if (selectSelect === null || !(selectSelect instanceof HTMLDivElement)) {\n        return\n      }\n\n      const rect = node.getBoundingClientRect()\n\n      // tslint:disable-next-line:no-object-mutation\n      selectSelect.style.minWidth = `${ rect.width }px` // FIXME: style を操作しないようにする\n    }\n  }, [select.current]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  const handleChange = useCallback<NonNullable<SelectProps['onChange']>>((event) => {\n    if (isTag(event.target.value)) {\n      selectLocale(event.target.value)\n    }\n  }, [selectLocale])\n\n  const { availableLocales } = useContext(IntlProviderContext)\n\n  return (\n    <FormControl\n      { ...FormControlProps }\n      className={ rootClassName } // NOTE: Overrides FormControlProps.className\n    >\n      <InputLabel className={ labelClassName } ref={ inputLabel } htmlFor={ inputId }>\n        <FormattedMessage { ...messages.languages } />\n      </InputLabel>\n      <Select\n        classes={ {\n          select: cssClasses.Select,\n          icon: selectIconClassName,\n        } }\n        ref={ select }\n        labelWidth={ labelWidth }\n        value={ locale }\n        onChange={ handleChange }\n        id={ inputId }\n        inputProps={ { 'data-testid': 'localeSelect' } }\n        input={ {\n          standard: (\n            <Input\n              className={ inputClassName }\n              classes={ {\n                underline: inputUnderlineClassName,\n              } }\n            />\n          ),\n          outlined: <OutlinedInput className={ inputClassName } labelWidth={ labelWidth } />,\n          filled: <FilledInput className={ inputClassName } />,\n        }[variant] }\n      >\n        { availableLocales?.map((availableLocale, i) => (\n          <MenuItem key={ i } value={ availableLocale }>{ getNativeNameByTag(availableLocale) }</MenuItem>\n        )) }\n      </Select>\n    </FormControl>\n  )\n}\n\n// connect\n\nconst mapStateToProps = ({ localeSelector: { locale } }: State): StateProps => ({\n  locale,\n})\n\nconst mapDispatchToProps: DispatchProps = {\n  selectLocale,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LocaleSelect)\n","import tagNativeNameMap from './__data__/tagNativeNameMap.json'\n\nexport type Tag = keyof typeof tagNativeNameMap\n\nexport function isTag(tag: unknown): tag is Tag {\n  return typeof tag === 'string' && tag in tagNativeNameMap\n}\n\nexport function getNativeNameByTag(tag: Tag) {\n  return tagNativeNameMap[tag]\n}\n","import React from 'react'\nimport { Link as RouterLink, LinkProps as RouterLinkProps } from 'react-router-dom'\n\nimport MuiLink, { LinkProps as MuiLinkProps } from '@material-ui/core/Link'\n\nimport { isOneOf, optional } from '~/lib/guards/commonGuards'\nimport typed from '~/lib/typed'\n\nexport type Props =\n  & RouterLinkProps\n  & Alt.Omit<MuiLinkProps, 'color' | 'ref'>\n\nconst isTypographyColor = optional(isOneOf('initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error'))\n\n// TODO: Delete; See also https://material-ui.com/guides/composition/#link\nconst RouterLinkWithRef = React.forwardRef<HTMLAnchorElement, RouterLinkProps>((props, ref) => (\n  <RouterLink innerRef={ ref } { ...props } />\n))\n\nexport default class Link extends React.Component<Props> {\n  public render() {\n    const { color, ...restProps } = this.props\n\n    if (!isTypographyColor(color)) {\n      console.warn(typed<[string]>`${ color } is not a Material-UI Typography color.`) // tslint:disable-line:no-console\n\n      return (\n        <MuiLink component={ RouterLinkWithRef } { ...restProps } />\n      )\n    }\n\n    return (\n      <MuiLink component={ RouterLinkWithRef } color={ color } { ...restProps } />\n    )\n  }\n}\n","import * as React from 'react'\n\nimport MenuItem, { MenuItemProps } from '@material-ui/core/MenuItem'\n\nimport Link, { Props as LinkProps } from '~/lib/components/Link'\n\ntype Props = MenuItemProps<typeof Link, { button?: true }>\n\nconst MenuItemLink: React.FC<Props> = React.forwardRef<Link, React.PropsWithoutRef<Props>>(({ to, button, innerRef, ...menuItemProps }, menuItem) => {\n  // See https://material-ui.com/guides/composition/#link\n  const LinkWithRef = React.forwardRef<Link, LinkProps>((linkProps, link) => (\n    <Link ref={ link } innerRef={ innerRef } color=\"inherit\" underline=\"none\" { ...linkProps } />\n  ))\n\n  return (\n    <MenuItem button component={ LinkWithRef } to={ to } ref={ menuItem } { ...menuItemProps } />\n  )\n})\n\nexport default MenuItemLink\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  home: 'home',\n  chess: 'chess',\n  counter: 'counter',\n  info: 'info',\n  paint: 'paint',\n  reminder: 'reminder',\n})\n","import React, { useCallback, useState } from 'react'\nimport { FormattedMessage } from 'react-intl'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Menu from '@material-ui/core/Menu'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport MenuIcon from '@material-ui/icons/Menu'\n\nimport DarkSwitch from '~/components/DarkSwitch'\nimport LocaleSelect from '~/components/LocaleSelect' // TODO\nimport MenuItemLink from '~/lib/components/MenuItemLink'\nimport classes from './classes.css'\nimport messages from './messages'\n\nconst Nav: React.FC = () => {\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null)\n\n  const openMenu = useCallback<React.MouseEventHandler<HTMLButtonElement>>((event) => {\n    setAnchorEl(event.currentTarget)\n  }, [])\n\n  const closeMenu = useCallback(() => {\n    setAnchorEl(null)\n  }, [])\n\n  return (\n    <>\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" onClick={ openMenu }>\n            <MenuIcon />\n          </IconButton>\n          <div className={ classes.Spacer } />\n          <DarkSwitch />\n          <LocaleSelect\n            classes={ {\n              label: classes.LocaleSelectLabel,\n              input: classes.LocaleSelectInput,\n              selectIcon: classes.LocaleSelectSelectIcon,\n              inputUnderline: classes.LocaleSelectInputUnderline,\n            } }\n            FormControlProps={ {\n              variant: 'filled',\n            } }\n          />\n        </Toolbar>\n      </AppBar>\n      <Menu open={ anchorEl !== null } anchorEl={ anchorEl } onClose={ closeMenu }>\n        <MenuItemLink to=\"/\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.home } />\n        </MenuItemLink>\n        <MenuItemLink to=\"/chess\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.chess } />\n        </MenuItemLink>\n        <MenuItemLink to=\"/counter\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.counter } />\n        </MenuItemLink>\n        <MenuItemLink to=\"/info\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.info } />\n        </MenuItemLink>\n        <MenuItemLink to=\"/paint\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.paint } />\n        </MenuItemLink>\n        <MenuItemLink to=\"/reminder\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.reminder } />\n        </MenuItemLink>\n      </Menu>\n    </>\n  )\n}\n\nexport default Nav\n","import React from 'react'\n\ninterface Props {\n  /**\n   * @param children that throws {error}\n   */\n  renderError(error: unknown, children: React.ReactNode): React.ReactNode\n}\n\ninterface State {\n  hasError: boolean\n  error?: unknown\n}\n\nclass ErrorBoundary extends React.Component<Props, State> {\n\n  // NOTE: https://github.com/DefinitelyTyped/DefinitelyTyped/blob/826ce0f1ce1d1887d199986283630d6f63075ad5/types/react/index.d.ts#L419 にも関わらず、初期化されていない state は null であるため、初期化を強制するためにプロパティ宣言を行う。\n  public state: Readonly<State> = {\n    hasError: false,\n  }\n\n  public static getDerivedStateFromError = (error: unknown) => ({\n    hasError: true,\n    error,\n  })\n\n  public render() {\n    const { renderError, children } = this.props\n    const { hasError, error } = this.state\n\n    if (hasError) {\n      return renderError(error, children)\n    }\n\n    return children\n  }\n}\n\nexport default ErrorBoundary\n","import React, { useCallback } from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\n\nimport Nav from '~/components/Nav'\nimport ErrorBoundary from '~/lib/components/ErrorBoundary'\nimport typed from '~/lib/typed'\n\ninterface PageTemplateProps {\n  children: React.ReactElement<BodyProps, React.ComponentType<BodyProps>>\n}\n\ntype BodyProps = PageProps\n\ntype PageProps =\n  & RouteComponentProps\n\nconst PageTemplate: React.FC<PageTemplateProps> = ({ children }) => {\n  const renderError = useCallback((error: unknown) => {\n    if (error instanceof Error) {\n      return typed<[string]>`${ String(error) }`\n    }\n\n    throw new TypeError(typed<[string]>`${ String(error) } is not an error.`)\n  }, [])\n\n  return (\n    <>\n      <Nav />\n      <ErrorBoundary renderError={ renderError }>\n        { children }\n      </ErrorBoundary>\n    </>\n  )\n}\n\nexport const createPage: (Body: React.FC<BodyProps>) => React.FC<PageProps> = (Body) => (props) => (\n  <PageTemplate>\n    <Body { ...props } />\n  </PageTemplate>\n)\n\nexport default PageTemplate\n","export function shouldBePresent<T>(it: T | null | undefined): asserts it is T {\n  if (it == null) {\n    throw new Error //\n  }\n}\n\nexport function shouldBeNullable<T>(it: T | null | undefined): asserts it is null | undefined {\n  if (it != null) {\n    throw new Error //\n  }\n}\n","import assert from 'assert'\n\nimport { isUrl } from '~/lib/guards/stringGuards'\nimport typed from '~/lib/typed'\nimport ValidationError from './ValidationError'\nimport { asString } from './commonValidators'\n\nexport const asBoundedLengthString = ({\n  lowerBound = -Infinity,\n  upperBound = Infinity,\n}: {\n  lowerBound?: number\n  upperBound?: number\n}) => (input: unknown) => {\n  assert(lowerBound <= upperBound)\n\n  const inputAsString = asString(input)\n\n  if (lowerBound <= inputAsString.length && inputAsString.length <= upperBound) {\n    return inputAsString\n  }\n\n  throw new ValidationError(\n    typed<[string, number, number]>`${ inputAsString } is not between ${ lowerBound } and ${ upperBound } characters.`,\n    'asBoundedLengthStringErrorMessage',\n    {\n      input: inputAsString.length,\n      lowerBound,\n      upperBound,\n    }\n  )\n}\n\nexport function asUrl(input: unknown): string.Url {\n  const inputAsString = asString(input)\n\n  if (!isUrl(inputAsString)) {\n    throw new ValidationError(typed<[string]>`${ inputAsString } is not a URL.`)\n  }\n\n  return inputAsString\n}\n","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--5-1!../../../../node_modules/postcss-loader/src/index.js!./classes.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".src-components-Reminder-TaskListItem-classes__TaskListItemContainer--3F5ef.src-components-Reminder-TaskListItem-classes__Dragging--1TtFC {\\n  opacity: 0;\\n}\\n\\n.src-components-Reminder-TaskListItem-classes__ListItemSecondaryAction--3QycB {\\n  -webkit-padding-end: 72px;\\n          padding-inline-end: 72px; /* TODO */\\n}\\n\\n/* TODO: Polyfill and delete the following */\\n.src-components-Reminder-TaskListItem-classes__ListItemSecondaryAction--3QycB.src-components-Reminder-TaskListItem-classes__Ltr--3iC7d {\\n  padding-right: 72px;\\n}\\n\\n.src-components-Reminder-TaskListItem-classes__ListItemSecondaryAction--3QycB.src-components-Reminder-TaskListItem-classes__Rtl--1yl21 {\\n  padding-left: 72px;\\n}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"TaskListItemContainer\": \"src-components-Reminder-TaskListItem-classes__TaskListItemContainer--3F5ef\",\n\t\"Dragging\": \"src-components-Reminder-TaskListItem-classes__Dragging--1TtFC\",\n\t\"ListItemSecondaryAction\": \"src-components-Reminder-TaskListItem-classes__ListItemSecondaryAction--3QycB\",\n\t\"Ltr\": \"src-components-Reminder-TaskListItem-classes__Ltr--3iC7d\",\n\t\"Rtl\": \"src-components-Reminder-TaskListItem-classes__Rtl--1yl21\"\n};\nmodule.exports = exports;\n","const curry = <T0, Ts extends unknown[], U>(f: (x: T0, ...xs: Ts) => U) => (x: T0) => (...xs: Ts): U => f(x, ...xs)\n\nexport default curry\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  add: 'add',\n})\n","import React from 'react'\nimport { FormattedMessage } from 'react-intl'\n\nimport Button from '@material-ui/core/Button'\n\nimport messages from './messages'\n\nexport interface Props {\n  addTask(): void\n}\n\nconst AddTaskButton: React.FC<Props> = ({ addTask }) => (\n  <Button onClick={ addTask } variant=\"contained\" color=\"secondary\">\n    <FormattedMessage { ...messages.add } />\n  </Button>\n)\n\nexport default AddTaskButton\n","import React from 'react'\n\nimport List from '@material-ui/core/List'\n\nimport { Props as TaskListItemDropTargetProps } from '~/components/Reminder/TaskListItemDropTarget'\n\nexport interface Props {\n  children?: React.ReactElement<TaskListItemDropTargetProps, React.ComponentType<TaskListItemDropTargetProps>> | Array<React.ReactElement<TaskListItemDropTargetProps, React.ComponentType<TaskListItemDropTargetProps>>>\n}\n\nconst TaskList: React.FC<Props> = ({ children }) => (\n  <List>\n    { children }\n  </List>\n)\n\nexport default TaskList\n","import React from 'react'\n\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\nexport interface Props {\n  onClick(): void\n}\n\nconst DeleteTaskButton: React.FC<Props> = ({ onClick }) => (\n  <IconButton onClick={ onClick }>\n    <DeleteIcon />\n  </IconButton>\n)\n\nexport default DeleteTaskButton\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  asBoundedLengthStringErrorMessage: '{ name } must be 0-{ upperBound } characters.',\n})\n","import Case from 'case'\nimport classnames from 'classnames'\nimport React, { useCallback, useContext, useMemo } from 'react'\nimport { DragObjectWithType, useDrag } from 'react-dnd'\nimport { useIntl } from 'react-intl'\n\nimport Checkbox from '@material-ui/core/Checkbox'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport TextField from '@material-ui/core/TextField'\nimport DragHandleIcon from '@material-ui/icons/DragHandle'\n\nimport Task, { TaskParams } from '~/domain/entity/Task'\nimport IntlProviderContext from '~/lib/contexts/IntlProviderContext'\nimport { isOneOf } from '~/lib/guards/commonGuards'\nimport ValidationError from '~/lib/validators/ValidationError'\nimport DeleteTaskButton from './DeleteTaskButton'\nimport classes from './classes.css'\nimport messages from './messages'\n\nexport interface Props {\n  value: Task\n  index: number\n\n  onChange(value: Partial<TaskParams>): void\n  onDelete(): void\n  validate(input: Task): Partial<Record<keyof Task, ValidationError>>\n}\n\ninterface CollectedProps {\n  dragging: boolean\n}\n\nexport interface DragObject extends DragObjectWithType {\n  value: Task\n  index: number\n}\n\nconst TaskListItem: React.FC<Props> = ({ value, index, onChange, onDelete, validate }) => {\n  const [{ dragging }, drag, preview] = useDrag<DragObject, unknown, CollectedProps>({\n    item: {\n      type: 'TaskListItem',\n      value,\n      index,\n    },\n    isDragging: (monitor) => {\n      const item: DragObject = monitor.getItem()\n\n      return value.isIdenticalTo(item.value)\n    },\n    collect: (monitor) => ({\n      dragging: monitor.isDragging(),\n    }),\n  })\n\n  const { dir } = useContext(IntlProviderContext)\n\n  const className = useMemo(() => classnames(classes.TaskListItemContainer, {\n    [classes.Ltr]: dir === 'ltr',\n    [classes.Rtl]: dir === 'rtl',\n    [classes.Dragging]: dragging,\n  }), [dir, dragging])\n\n  const handleContentChange = useCallback<React.ChangeEventHandler<HTMLInputElement>>((event) => {\n    onChange({\n      content: event.target.value,\n    })\n  }, [onChange])\n\n  const handleDoneChange = useCallback((event: React.ChangeEvent<HTMLInputElement>, _checked: boolean) => {\n    onChange({\n      done: event.target.checked,\n    })\n  }, [onChange])\n\n  const { formatMessage, locale } = useIntl()\n\n  const errors = useMemo(() => validate(value), [value, validate])\n  const hasError = useMemo(() => Object.values(errors).some((error) => error !== undefined), [errors])\n\n  const helperText = useMemo(() => {\n    if (errors.content === undefined) {\n      return null\n    }\n\n    if (isOneOf(...Object.keys(messages))(errors.content.key)) {\n      const text = formatMessage(messages[errors.content.key], errors.content.values)\n\n      switch (locale) {\n        case 'en': return Case.sentence(text)\n        case 'ja':\n        case 'he': return text\n        default: throw new Error // TODO\n      }\n    }\n\n    return null // TODO\n  }, [locale, formatMessage, errors.content])\n\n  return (\n    <div ref={ preview }>\n      <ListItem\n        classes={ {\n          container: className,\n          secondaryAction: classes.ListItemSecondaryAction,\n        } }\n      >\n        <ListItemIcon>\n          <div ref={ drag }>\n            <DragHandleIcon />\n          </div>\n        </ListItemIcon>\n        <ListItemIcon>\n          <Checkbox checked={ value.done } onChange={ handleDoneChange } />\n        </ListItemIcon>\n        <TextField\n          fullWidth\n          value={ value.content }\n          onChange={ handleContentChange }\n          disabled={ value.done }\n          error={ hasError }\n          helperText={ helperText }\n        />\n        <ListItemSecondaryAction>\n          <DeleteTaskButton onClick={ onDelete } />\n        </ListItemSecondaryAction>\n      </ListItem>\n    </div>\n  )\n}\n\nexport default TaskListItem\n","import React, { useRef } from 'react'\nimport { useDrop } from 'react-dnd'\n\nimport { DragObject, Props as TaskListItemProps } from '~/components/Reminder/TaskListItem'\nimport { shouldBePresent } from '~/lib/asserters/commonAsserters'\n\nexport interface Props {\n  children?: React.ReactElement<TaskListItemProps, React.ComponentType<TaskListItemProps>>\n  index: number\n\n  moveTask(sourceIndex: number, targetIndex: number): void\n}\n\nconst TaskListItemDropTarget: React.FC<Props> = ({ children, index, moveTask }) => {\n  const div = useRef<HTMLDivElement>(null)\n\n  const [, drop] = useDrop<DragObject, unknown, unknown>({\n    accept: 'TaskListItem',\n    hover(item, monitor) {\n      shouldBePresent(div.current)\n\n      if (item.index === index) {\n        return\n      }\n\n      const clientOffset = monitor.getClientOffset()\n\n      shouldBePresent(clientOffset)\n\n      const boundingClientRect = div.current.getBoundingClientRect()\n      const pointerY = clientOffset.y - boundingClientRect.top\n      const middleY = (boundingClientRect.bottom - boundingClientRect.top) / 2\n\n      // downwards\n      if (item.index < index && pointerY < middleY) {\n        return\n      }\n\n      // upwards\n      if (item.index > index && pointerY > middleY) {\n        return\n      }\n\n      moveTask(item.index, index)\n\n      // tslint:disable-next-line:no-object-mutation\n      item.index = index\n    },\n  })\n\n  drop(div)\n\n  return (\n    <div ref={ div }>\n      { children }\n    </div>\n  )\n}\n\nexport default TaskListItemDropTarget\n","import { List } from 'immutable'\nimport React, { useCallback, useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport Task, { TaskParams } from '~/domain/entity/Task'\nimport TaskId from '~/domain/vo/TaskId'\nimport curry from '~/lib/curry'\nimport { asBoolean, asObject, leftOnly, named } from '~/lib/validators/commonValidators'\nimport { asBoundedLengthString } from '~/lib/validators/stringValidators'\nimport { State } from '~/redux'\nimport { addTaskAsync, changeTaskContentAsync, deleteTaskAsync, getTasksAsync, markTaskAsDoneAsync, markTaskAsUndoneAsync, moveTask } from '~/redux/modules/reminder'\nimport AddTaskButton from './AddTaskButton'\nimport TaskList from './TaskList'\nimport TaskListItem from './TaskListItem'\nimport TaskListItemDropTarget from './TaskListItemDropTarget'\n\ninterface StateProps {\n  tasks: List<Task>\n}\n\ninterface DispatchProps {\n  getTasks(): void\n  addTask(): void\n  changeTaskContent(taskId: TaskId, content: string): void\n  markTaskAsDone(taskId: TaskId): void\n  markTaskAsUndone(taskId: TaskId): void\n  deleteTask(taskId: TaskId): void\n  moveTask(source: number, dest: number): void\n}\n\ntype Props =\n  & StateProps\n  & DispatchProps\n\nconst validate = asObject('a Task for presentation', (input) => ({\n  content: leftOnly(named('content', asBoundedLengthString({\n    upperBound: 140,\n  })))(input.content),\n  done: leftOnly(asBoolean)(input.done),\n}))\n\nconst Reminder: React.FC<Props> = ({ tasks, getTasks, addTask, changeTaskContent, markTaskAsDone, markTaskAsUndone, deleteTask, moveTask }) => {\n  useEffect(() => {\n    getTasks()\n  }, [getTasks])\n\n  const changeTask = useCallback((taskId: TaskId, { content, done }: Partial<Alt.Omit<TaskParams, 'id'>>) => {\n    if (content !== undefined) {\n      changeTaskContent(taskId, content)\n    }\n\n    if (done !== undefined) {\n      if (done) {\n        markTaskAsDone(taskId)\n      } else {\n        markTaskAsUndone(taskId)\n      }\n    }\n  }, [changeTaskContent, markTaskAsDone, markTaskAsUndone])\n\n  return (\n    <>\n      <TaskList>\n        {\n          tasks.map((task, index) => (\n            <TaskListItemDropTarget\n              key={ index }\n              index={ index }\n              moveTask={ moveTask }\n            >\n              <TaskListItem\n                key={ task.id.value }\n                value={ task }\n                index={ index }\n                onChange={ curry(changeTask)(task.id) }\n                onDelete={ curry(deleteTask)(task.id) }\n                validate={ validate }\n              />\n            </TaskListItemDropTarget>\n          )).toArray()\n        }\n      </TaskList>\n      <AddTaskButton addTask={ addTask } />\n    </>\n  )\n}\n\n// connect\n\nconst mapStateToProps = ({ reminder: { tasks } }: State): StateProps => ({\n  tasks,\n})\n\nconst mapDispatchToProps: DispatchProps = {\n  getTasks: getTasksAsync,\n  addTask: addTaskAsync,\n  changeTaskContent: changeTaskContentAsync,\n  markTaskAsDone: markTaskAsDoneAsync,\n  markTaskAsUndone: markTaskAsUndoneAsync,\n  deleteTask: deleteTaskAsync,\n  moveTask,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Reminder)\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  reminder: 'reminder',\n})\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { useIntl } from 'react-intl'\n\nimport Reminder from '~/components/Reminder'\nimport { createPage } from '~/templates/PageTemplate'\nimport messages from './messages'\n\nconst ReminderPage: React.FC = () => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <>\n      <Helmet title={ formatMessage(messages.reminder) } />\n      <Reminder />\n    </>\n  )\n}\n\nexport default createPage(ReminderPage)\n"],"sourceRoot":""}