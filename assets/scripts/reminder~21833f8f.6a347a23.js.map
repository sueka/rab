{"version":3,"sources":["webpack:///./src/lib/identity.ts","webpack:///./src/lib/guards/commonGuards.ts","webpack:///./src/components/Nav/classes.css","webpack:///./src/lib/languageNameSolver/index.ts","webpack:///./src/components/LocaleSelect/messages.ts","webpack:///./src/components/LocaleSelect/index.tsx","webpack:///./src/lib/components/Link/index.tsx","webpack:///./src/lib/components/MenuItemLink/index.tsx","webpack:///./src/components/Nav/messages.ts","webpack:///./src/components/Nav/index.tsx","webpack:///./src/lib/components/ErrorBoundary/index.ts","webpack:///./src/templates/PageTemplate/index.tsx","webpack:///./src/lib/validators/stringValidators.ts","webpack:///./src/components/Reminder/TaskListItem/classes.css","webpack:///./src/lib/curry.ts","webpack:///./src/components/Reminder/AddTaskButton/messages.ts","webpack:///./src/components/Reminder/AddTaskButton/index.tsx","webpack:///./src/components/Reminder/TaskList/index.tsx","webpack:///./src/components/Reminder/TaskListItem/DeleteTaskButton/index.tsx","webpack:///./src/components/Reminder/TaskListItem/messages.ts","webpack:///./src/components/Reminder/TaskListItem/index.tsx","webpack:///./src/components/Reminder/index.tsx","webpack:///./src/components/App/ReminderPage/messages.ts","webpack:///./src/components/App/ReminderPage/index.tsx"],"names":["identity","it","isOneOf","options","input","some","option","optional","isT","undefined","isObject","Object","values","every","isTag","tag","tagNativeNameMap","getNativeNameByTag","defineMessages","languages","LocaleSelect","classes","FormControlProps","locale","selectLocale","useState","labelWidth","setLabelWidth","inputId","useMemo","v4","theme","useTheme","variant","props","MuiFormControl","rootClassName","classnames","root","className","labelClassName","label","inputClassName","selectIconClassName","selectIcon","inputUnderlineClassName","inputUnderline","inputLabel","useCallback","node","offsetWidth","handleChange","event","target","value","useContext","IntlProviderContext","availableLocales","messages","icon","standard","underline","outlined","filled","map","availableLocale","i","mapStateToProps","localeSelector","mapDispatchToProps","connect","isTypographyColor","RouterLinkWithRef","React","forwardRef","ref","Link","color","restProps","console","warn","typed","Component","MenuItemLink","menuItem","to","button","innerRef","menuItemProps","LinkWithRef","linkProps","link","home","chess","counter","info","reminder","Nav","anchorEl","setAnchorEl","openMenu","currentTarget","closeMenu","Spacer","LocaleSelectLabel","LocaleSelectInput","LocaleSelectSelectIcon","LocaleSelectInputUnderline","ErrorBoundary","state","hasError","renderError","children","error","getDerivedStateFromError","PageTemplate","Error","String","TypeError","createPage","Body","asBoundedLengthString","lowerBound","Infinity","upperBound","inputAsString","asString","length","ValidationError","asUrl","isUrl","curry","f","x","xs","add","AddTaskButton","addTask","TaskList","TaskListItem","onClick","asBoundedLengthStringErrorMessage","id","index","onChange","onDelete","moveTask","validate","useRef","useDrag","item","type","collect","monitor","dragging","isDragging","drag","useDrop","accept","hover","targetIndex","drop","TaskListItemContainer","Dragging","handleContentChange","content","handleDoneChange","_checked","done","checked","useIntl","formatMessage","errors","helperText","keys","key","Case","sentence","container","secondaryAction","ListItemSecondaryAction","asObject","leftOnly","named","asBoolean","Reminder","tasks","changeTaskContent","markTaskAsDone","markTaskAsUndone","deleteTask","changeTask","taskId","task","addTaskAsync","changeTaskContentAsync","markTaskAsDoneAsync","markTaskAsUndoneAsync","deleteTaskAsync","ReminderPage"],"mappings":"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","file":"assets/scripts/reminder~21833f8f.6a347a23.js","sourcesContent":["const identity = <T extends U, U>(it: T): U => it\n\nexport default identity\n","import identity from '~/lib/identity'\n\nexport const isOneOf = <T extends readonly Json[]>(...options: T) => (input: unknown): input is T[number] => options.some((option) => option === input)\n\nexport const optional = <A extends unknown, T extends A>(isT: (input: A) => input is T) => (input: A | undefined): input is T | undefined => {\n  if (input === undefined) {\n    return true\n  }\n\n  return isT(input)\n}\n\nexport const isObject = <A extends B, T extends A, B = A>(isT: (input: B) => Record<keyof A, boolean>) => (input: A): input is T => {\n  return Object.values<boolean>(isT(input)).every(identity)\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spacer\":\"src-components-Nav-classes__Spacer--36ovl\",\"LocaleSelectLabel\":\"src-components-Nav-classes__LocaleSelectLabel--3h3DV\",\"LocaleSelectInput\":\"src-components-Nav-classes__LocaleSelectInput--3oNu1\",\"LocaleSelectSelectIcon\":\"src-components-Nav-classes__LocaleSelectSelectIcon--2AyFk\",\"LocaleSelectInputUnderline\":\"src-components-Nav-classes__LocaleSelectInputUnderline--2WFrx\"};\n    if(module.hot) {\n      // 1584030947212\n      var cssReload = require(\"/home/runner/work/react-app-prototype/react-app-prototype/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"hmr\":true,\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  ","import tagNativeNameMap from './__data__/tagNativeNameMap.json'\n\nexport type Tag = keyof typeof tagNativeNameMap\n\nexport function isTag(tag: unknown): tag is Tag {\n  return typeof tag === 'string' && tag in tagNativeNameMap\n}\n\nexport function getNativeNameByTag(tag: Tag) {\n  return tagNativeNameMap[tag]\n}\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  languages: 'Languages',\n})\n","import classnames from 'classnames'\nimport React, { useCallback, useContext, useMemo, useState } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { connect } from 'react-redux'\nimport { v4 } from 'uuid'\n\nimport FilledInput from '@material-ui/core/FilledInput'\nimport FormControl, { FormControlProps } from '@material-ui/core/FormControl'\nimport Input from '@material-ui/core/Input'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport OutlinedInput from '@material-ui/core/OutlinedInput'\nimport Select, { SelectProps } from '@material-ui/core/Select'\nimport { useTheme } from '@material-ui/core/styles'\n\nimport IntlProviderContext from '~/lib/contexts/IntlProviderContext'\nimport { Tag, getNativeNameByTag, isTag } from '~/lib/languageNameSolver'\nimport { State } from '~/redux'\nimport { selectLocale } from '~/redux/modules/localeSelector'\nimport messages from './messages'\n\ninterface OwnProps {\n  classes?: {\n    root?: string\n    label?: string\n    input?: string\n    selectIcon?: string\n    inputUnderline?: string\n  } | null\n  FormControlProps?: FormControlProps | null\n}\n\ninterface StateProps {\n  locale: Tag\n}\n\ninterface DispatchProps {\n  selectLocale(locale: Tag): void\n}\n\ntype Props =\n  & OwnProps\n  & StateProps\n  & DispatchProps\n\nexport /* for testing */ const LocaleSelect: React.FunctionComponent<Props> = ({ classes, FormControlProps, locale, selectLocale }) => {\n  const [labelWidth, setLabelWidth] = useState<number>(0)\n  const inputId = useMemo(v4, [])\n  const theme = useTheme()\n\n  // NOTE: Fortunately, FormControl is nothing but FormControl.\n  const variant = useMemo(() => FormControlProps?.variant ?? theme?.props?.MuiFormControl?.variant ?? 'standard', [FormControlProps?.variant, theme?.props?.MuiFormControl?.variant])\n\n  const rootClassName = useMemo(() => classnames(classes?.root, FormControlProps?.className), [classes?.root, FormControlProps?.className])\n  const labelClassName = useMemo(() => classnames(classes?.label), [classes?.label])\n  const inputClassName = useMemo(() => classnames(classes?.input), [classes?.input])\n  const selectIconClassName = useMemo(() => classnames(classes?.selectIcon), [classes?.selectIcon])\n  const inputUnderlineClassName = useMemo(() => classnames(classes?.inputUnderline), [classes?.inputUnderline])\n\n  const inputLabel = useCallback((node: HTMLLabelElement | null) => { // TODO: type\n    if (node !== null) {\n      setLabelWidth(node.offsetWidth)\n    }\n  }, [])\n\n  const handleChange = useCallback<NonNullable<SelectProps['onChange']>>((event) => {\n    if (isTag(event.target.value)) {\n      selectLocale(event.target.value)\n    }\n  }, [])\n\n  const { availableLocales } = useContext(IntlProviderContext)\n\n  return (\n    <FormControl\n      { ...FormControlProps }\n      className={ rootClassName } // NOTE: override FormControlProps.className\n    >\n      <InputLabel className={ labelClassName } ref={ inputLabel } htmlFor={ inputId }>\n        <FormattedMessage { ...messages.languages } />\n      </InputLabel>\n      <Select\n        classes={ {\n          icon: selectIconClassName,\n        } }\n        native\n        labelWidth={ labelWidth }\n        value={ locale }\n        onChange={ handleChange }\n        id={ inputId }\n        inputProps={ { 'data-testid': 'localeSelect' } }\n        input={ {\n          standard: (\n            <Input\n              className={ inputClassName }\n              classes={ {\n                underline: inputUnderlineClassName,\n              } }\n            />\n          ),\n          outlined: <OutlinedInput className={ inputClassName } labelWidth={ labelWidth } />,\n          filled: <FilledInput className={ inputClassName } />,\n        }[variant] }\n      >\n        { availableLocales?.map((availableLocale, i) => (\n          <option key={ i } value={ availableLocale }>{ getNativeNameByTag(availableLocale) }</option>\n        )) }\n      </Select>\n    </FormControl>\n  )\n}\n\n// connect\n\nconst mapStateToProps = ({ localeSelector: { locale } }: State): StateProps => ({\n  locale,\n})\n\nconst mapDispatchToProps: DispatchProps = {\n  selectLocale,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LocaleSelect)\n","import React from 'react'\nimport { Link as RouterLink, LinkProps as RouterLinkProps } from 'react-router-dom'\n\nimport MuiLink, { LinkProps as MuiLinkProps } from '@material-ui/core/Link'\n\nimport { isOneOf, optional } from '~/lib/guards/commonGuards'\nimport typed from '~/lib/typed'\n\nexport type Props =\n  & RouterLinkProps\n  & Alt.Omit<MuiLinkProps, 'color' | 'ref'>\n\nconst isTypographyColor = optional(isOneOf('initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error'))\n\n// TODO: delete this; See also https://material-ui.com/guides/composition/#link\nconst RouterLinkWithRef = React.forwardRef<HTMLAnchorElement, RouterLinkProps>((props, ref) => (\n  <RouterLink innerRef={ ref } { ...props } />\n))\n\nexport default class Link extends React.Component<Props> {\n  public render() {\n    const { color, ...restProps } = this.props\n\n    if (!isTypographyColor(color)) {\n      console.warn(typed<[string]>`${ color } is not a Material-UI Typography color.`) // tslint:disable-line:no-console\n\n      return (\n        <MuiLink component={ RouterLinkWithRef } { ...restProps } />\n      )\n    }\n\n    return (\n      <MuiLink component={ RouterLinkWithRef } color={ color } { ...restProps } />\n    )\n  }\n}\n","import * as React from 'react'\n\nimport MenuItem, { MenuItemProps } from '@material-ui/core/MenuItem'\n\nimport Link, { Props as LinkProps } from '~/lib/components/Link'\n\ntype Props = MenuItemProps<typeof Link, { button?: true }>\n\nconst MenuItemLink: React.FunctionComponent<Props> = React.forwardRef<Link, React.PropsWithoutRef<Props>>(({ to, button, innerRef, ...menuItemProps }, menuItem) => {\n  // See https://material-ui.com/guides/composition/#link\n  const LinkWithRef = React.forwardRef<Link, LinkProps>((linkProps, link) => (\n    <Link ref={ link } innerRef={ innerRef } color=\"inherit\" underline=\"none\" { ...linkProps } />\n  ))\n\n  return (\n    <MenuItem button component={ LinkWithRef } to={ to } ref={ menuItem } { ...menuItemProps } />\n  )\n})\n\nexport default MenuItemLink\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  home: 'home',\n  chess: 'chess',\n  counter: 'counter',\n  info: 'info',\n  reminder: 'reminder',\n})\n","// import classnames from 'classnames'\nimport React, { useCallback, useState } from 'react'\nimport { FormattedMessage } from 'react-intl'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Menu from '@material-ui/core/Menu'\nimport Toolbar from '@material-ui/core/Toolbar'\n// import { createStyles, makeStyles } from '@material-ui/core/styles'\nimport MenuIcon from '@material-ui/icons/Menu'\n\nimport LocaleSelect from '~/components/LocaleSelect' // TODO\nimport MenuItemLink from '~/lib/components/MenuItemLink'\nimport classes from './classes.css'\nimport messages from './messages'\n\nconst Nav: React.FunctionComponent = () => {\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null)\n\n  const openMenu = useCallback<React.MouseEventHandler<HTMLButtonElement>>((event) => {\n    setAnchorEl(event.currentTarget)\n  }, [])\n\n  const closeMenu = useCallback(() => {\n    setAnchorEl(null)\n  }, [])\n\n  return (\n    <>\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" onClick={ openMenu }>\n            <MenuIcon />\n          </IconButton>\n          <div className={ classes.Spacer } />\n          <LocaleSelect\n            classes={ {\n              label: classes.LocaleSelectLabel,\n              input: classes.LocaleSelectInput,\n              selectIcon: classes.LocaleSelectSelectIcon,\n              inputUnderline: classes.LocaleSelectInputUnderline,\n            } }\n            FormControlProps={ {\n              variant: 'filled',\n            } }\n          />\n        </Toolbar>\n      </AppBar>\n      <Menu open={ anchorEl !== null } anchorEl={ anchorEl } onClose={ closeMenu }>\n        <MenuItemLink to=\"/\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.home } />\n        </MenuItemLink>\n        <MenuItemLink to=\"/chess\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.chess } />\n        </MenuItemLink>\n        <MenuItemLink to=\"/counter\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.counter } />\n        </MenuItemLink>\n        <MenuItemLink to=\"/info\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.info } />\n        </MenuItemLink>\n        <MenuItemLink to=\"/reminder\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.reminder } />\n        </MenuItemLink>\n      </Menu>\n    </>\n  )\n}\n\nexport default Nav\n","import React from 'react'\n\ninterface Props {\n  /**\n   * @param children that throws {error}\n   */\n  renderError(error: unknown, children: React.ReactNode): React.ReactNode\n}\n\ninterface State {\n  hasError: boolean\n  error?: unknown\n}\n\nclass ErrorBoundary extends React.Component<Props, State> {\n\n  // NOTE: https://github.com/DefinitelyTyped/DefinitelyTyped/blob/826ce0f1ce1d1887d199986283630d6f63075ad5/types/react/index.d.ts#L419 にも関わらず、初期化されていない state は null であるため、初期化を強制するためにプロパティ宣言を行う。\n  public state: Readonly<State> = {\n    hasError: false,\n  }\n\n  public static getDerivedStateFromError = (error: unknown) => ({\n    hasError: true,\n    error,\n  })\n\n  public render() {\n    const { renderError, children } = this.props\n    const { hasError, error } = this.state\n\n    if (hasError) {\n      return renderError(error, children)\n    }\n\n    return children\n  }\n}\n\nexport default ErrorBoundary\n","import React, { useCallback } from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\n\nimport Nav from '~/components/Nav'\nimport ErrorBoundary from '~/lib/components/ErrorBoundary'\nimport typed from '~/lib/typed'\n\ninterface PageTemplateProps {\n  children: React.ReactElement<BodyProps, React.ComponentType<BodyProps>>\n}\n\ntype BodyProps = PageProps\n\ntype PageProps =\n  & RouteComponentProps\n\nconst PageTemplate: React.FunctionComponent<PageTemplateProps> = ({ children }) => {\n  const renderError = useCallback((error: unknown) => {\n    if (error instanceof Error) {\n      return typed<[string]>`${ String(error) }`\n    }\n\n    throw new TypeError(typed<[string]>`${ String(error) } is not an error.`)\n  }, [])\n\n  return (\n    <>\n      <Nav />\n      <ErrorBoundary renderError={ renderError }>\n        { children }\n      </ErrorBoundary>\n    </>\n  )\n}\n\nexport const createPage: (Body: React.FunctionComponent<BodyProps>) => React.FunctionComponent<PageProps> = (Body) => (props) => (\n  <PageTemplate>\n    <Body { ...props } />\n  </PageTemplate>\n)\n\nexport default PageTemplate\n","import assert from 'assert'\n\nimport { isUrl } from '~/lib/guards/stringGuards'\nimport typed from '~/lib/typed'\nimport ValidationError from './ValidationError'\nimport { asString } from './commonValidators'\n\nexport const asBoundedLengthString = ({\n  lowerBound = -Infinity,\n  upperBound = Infinity,\n}: {\n  lowerBound?: number\n  upperBound?: number\n}) => (input: unknown) => {\n  assert(lowerBound <= upperBound)\n\n  const inputAsString = asString(input)\n\n  if (lowerBound <= inputAsString.length && inputAsString.length <= upperBound) {\n    return inputAsString\n  }\n\n  throw new ValidationError(\n    typed<[string, number, number]>`${ inputAsString } is not between ${ lowerBound } and ${ upperBound } characters.`,\n    'asBoundedLengthStringErrorMessage',\n    {\n      input: inputAsString.length,\n      lowerBound,\n      upperBound,\n    }\n  )\n}\n\nexport function asUrl(input: unknown): string.Url {\n  const inputAsString = asString(input)\n\n  if (!isUrl(inputAsString)) {\n    throw new ValidationError(typed<[string]>`${ inputAsString } is not a URL.`)\n  }\n\n  return inputAsString\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskListItemContainer\":\"src-components-Reminder-TaskListItem-classes__TaskListItemContainer--3F5ef\",\"Dragging\":\"src-components-Reminder-TaskListItem-classes__Dragging--1TtFC\",\"ListItemSecondaryAction\":\"src-components-Reminder-TaskListItem-classes__ListItemSecondaryAction--3QycB\"};\n    if(module.hot) {\n      // 1584030947219\n      var cssReload = require(\"/home/runner/work/react-app-prototype/react-app-prototype/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"hmr\":true,\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  ","const curry = <T0, Ts extends unknown[], U>(f: (x: T0, ...xs: Ts) => U) => (x: T0) => (...xs: Ts): U => f(x, ...xs)\n\nexport default curry\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  add: 'add',\n})\n","import React from 'react'\nimport { FormattedMessage } from 'react-intl'\n\nimport Button from '@material-ui/core/Button'\n\nimport messages from './messages'\n\nexport interface Props {\n  addTask(): void\n}\n\nconst AddTaskButton: React.FunctionComponent<Props> = ({ addTask }) => (\n  <Button onClick={ addTask } variant=\"contained\" color=\"secondary\">\n    <FormattedMessage { ...messages.add } />\n  </Button>\n)\n\nexport default AddTaskButton\n","import React from 'react'\n\nimport List from '@material-ui/core/List'\n\nimport { Props as TaskListItemProps } from '~/components/Reminder/TaskListItem'\n\nexport interface Props {\n  children?: React.ReactElement<TaskListItemProps, React.ComponentType<TaskListItemProps>> | Array<React.ReactElement<TaskListItemProps, React.ComponentType<TaskListItemProps>>>\n}\n\nconst TaskList: React.FunctionComponent<Props> = ({ children }) => (\n  <List>\n    { children }\n  </List>\n)\n\nexport default TaskList\n","import React from 'react'\n\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\nexport interface Props {\n  onClick(): void\n}\n\nconst TaskListItem: React.FunctionComponent<Props> = ({ onClick }) => (\n  <IconButton onClick={ onClick }>\n    <DeleteIcon />\n  </IconButton>\n)\n\nexport default TaskListItem\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  asBoundedLengthStringErrorMessage: '{ name } must be 0-{ upperBound } characters.',\n})\n","import Case from 'case'\nimport classnames from 'classnames'\nimport React, { useCallback, useMemo, useRef } from 'react'\nimport { DragObjectWithType, useDrag, useDrop } from 'react-dnd'\nimport { useIntl } from 'react-intl'\n\nimport Checkbox from '@material-ui/core/Checkbox'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport TextField from '@material-ui/core/TextField'\n\nimport Task from '~/domain/entity/Task'\nimport TaskId from '~/domain/vo/TaskId'\nimport { isOneOf } from '~/lib/guards/commonGuards'\nimport ValidationError from '~/lib/validators/ValidationError'\nimport DeleteTaskButton from './DeleteTaskButton'\nimport classes from './classes.css'\nimport messages from './messages'\n\nexport interface Props {\n  id: TaskId\n  value: Pick<Task, 'content' | 'done'>\n  index: number\n\n  onChange(value: Partial<Task>): void\n  onDelete(): void\n  moveTask(sourceIndex: number, targetIndex: number): void\n  validate(input: Pick<Task, 'content' | 'done'>): Partial<Record<'content' | 'done', ValidationError>>\n}\n\ninterface CollectedProps {\n  dragging: boolean\n}\n\ninterface DragObject extends DragObjectWithType {\n  id: TaskId\n  index: number\n}\n\nconst TaskListItem: React.FunctionComponent<Props> = ({ id, value, index, onChange, onDelete, moveTask, validate }) => {\n  const ref = useRef(null)\n\n  const [{ dragging }, drag] = useDrag<DragObject, unknown, CollectedProps>({\n    item: {\n      type: 'TaskListItem',\n      id,\n      index,\n    },\n    collect: (monitor) => ({\n      dragging: monitor.isDragging(),\n    }),\n  })\n\n  const [, drop] = useDrop<DragObject, unknown, unknown>({\n    accept: 'TaskListItem',\n    hover(item) {\n      const targetIndex = index\n\n      if (item.index === targetIndex) {\n        return\n      }\n\n      moveTask(item.index, targetIndex)\n\n      // tslint:disable-next-line:no-object-mutation\n      item.index = targetIndex\n    },\n  })\n\n  drop(drag(ref))\n\n  const className = useMemo(() => classnames(classes.TaskListItemContainer, {\n    [classes.Dragging]: dragging,\n  }), [dragging])\n\n  const handleContentChange = useCallback<React.ChangeEventHandler<HTMLInputElement>>((event) => {\n    onChange({\n      content: event.target.value,\n    })\n  }, [onChange])\n\n  const handleDoneChange = useCallback((event: React.ChangeEvent<HTMLInputElement>, _checked: boolean) => {\n    onChange({\n      done: event.target.checked,\n    })\n  }, [onChange])\n\n  const { formatMessage } = useIntl()\n\n  const errors = useMemo(() => validate(value), [value, validate])\n\n  const helperText = useMemo(() => {\n    if (errors.content === undefined) {\n      return null\n    }\n\n    if (isOneOf(...Object.keys(messages))(errors.content.key)) {\n      return Case.sentence(formatMessage(messages[errors.content.key], errors.content.values))\n    }\n\n    return null // TODO\n  }, [errors.content])\n\n  return (\n    <div ref={ ref }>\n      <ListItem\n        classes={ {\n          container: className,\n          secondaryAction: classes.ListItemSecondaryAction,\n        } }\n      >\n        <ListItemIcon>\n          <Checkbox checked={ value.done } onChange={ handleDoneChange } />\n        </ListItemIcon>\n        <TextField\n          fullWidth\n          value={ value.content }\n          onChange={ handleContentChange }\n          disabled={ value.done }\n          error={ errors.content !== undefined }\n          helperText={ helperText }\n        />\n        <ListItemSecondaryAction>\n          <DeleteTaskButton onClick={ onDelete } />\n        </ListItemSecondaryAction>\n      </ListItem>\n    </div>\n  )\n}\n\nexport default TaskListItem\n","import React, { useCallback } from 'react'\nimport { connect } from 'react-redux'\n\nimport Task from '~/domain/entity/Task'\nimport TaskId from '~/domain/vo/TaskId'\nimport curry from '~/lib/curry'\nimport { asBoolean, asObject, leftOnly, named } from '~/lib/validators/commonValidators'\nimport { asBoundedLengthString } from '~/lib/validators/stringValidators'\nimport { State } from '~/redux'\nimport { addTaskAsync, changeTaskContentAsync, deleteTaskAsync, markTaskAsDoneAsync, markTaskAsUndoneAsync, moveTask } from '~/redux/modules/reminder'\nimport AddTaskButton from './AddTaskButton'\nimport TaskList from './TaskList'\nimport TaskListItem from './TaskListItem'\n\ninterface StateProps {\n  tasks: Task[]\n}\n\ninterface DispatchProps {\n  addTask(): void\n  changeTaskContent(taskId: TaskId, content: string): void\n  markTaskAsDone(taskId: TaskId): void\n  markTaskAsUndone(taskId: TaskId): void\n  deleteTask(taskId: TaskId): void\n  moveTask(source: number, dest: number): void\n}\n\ntype Props =\n  & StateProps\n  & DispatchProps\n\nconst validate = asObject('a Task for presentation', (input) => ({\n  content: leftOnly(named('content', asBoundedLengthString({\n    upperBound: 140,\n  })))(input.content),\n  done: leftOnly(asBoolean)(input.done),\n}))\n\nconst Reminder: React.FunctionComponent<Props> = ({ tasks, addTask, changeTaskContent, markTaskAsDone, markTaskAsUndone, deleteTask, moveTask }) => {\n  const changeTask = useCallback((taskId, { content, done }) => {\n    if (content !== undefined) {\n      changeTaskContent(taskId, content)\n    }\n\n    if (done !== undefined) {\n      if (done) {\n        markTaskAsDone(taskId)\n      } else {\n        markTaskAsUndone(taskId)\n      }\n    }\n  }, [changeTaskContent, markTaskAsDone, markTaskAsUndone])\n\n  return (\n    <>\n      <TaskList>\n        {\n          tasks.map((task, index) => (\n            <TaskListItem\n              key={ task.id.value }\n              id={ task.id }\n              value={ task }\n              validate={ validate }\n              onChange={ curry(changeTask)(task.id) }\n              onDelete={ curry(deleteTask)(task.id) }\n              { ...{ index, moveTask } }\n            />\n          ))\n        }\n      </TaskList>\n      <AddTaskButton addTask={ addTask } />\n    </>\n  )\n}\n\n// connect\n\nconst mapStateToProps = ({ reminder: { tasks } }: State): StateProps => ({\n  tasks,\n})\n\nconst mapDispatchToProps: DispatchProps = {\n  addTask: addTaskAsync,\n  changeTaskContent: changeTaskContentAsync,\n  markTaskAsDone: markTaskAsDoneAsync,\n  markTaskAsUndone: markTaskAsUndoneAsync,\n  deleteTask: deleteTaskAsync,\n  moveTask,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Reminder)\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  reminder: 'reminder',\n})\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { useIntl } from 'react-intl'\n\nimport Reminder from '~/components/Reminder'\nimport { createPage } from '~/templates/PageTemplate'\nimport messages from './messages'\n\nconst ReminderPage: React.FunctionComponent = () => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <>\n      <Helmet title={ formatMessage(messages.reminder) } />\n      <Reminder />\n    </>\n  )\n}\n\nexport default createPage(ReminderPage)\n"],"sourceRoot":""}