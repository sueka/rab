{"version":3,"file":"assets/scripts/reminder.6c8b993f.js","mappings":"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","sources":["webpack://rap/./node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","webpack://rap/./node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","webpack://rap/./node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","webpack://rap/./node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","webpack://rap/./node_modules/@material-ui/core/esm/internal/SwitchBase.js","webpack://rap/./node_modules/@material-ui/icons/DragHandle.js","webpack://rap/./src/curry.ts","webpack://rap/./src/components/Reminder/AddTaskButton/messages.ts","webpack://rap/./src/components/Reminder/AddTaskButton/index.tsx","webpack://rap/./src/components/Reminder/TaskList/index.tsx","webpack://rap/./src/components/Reminder/TaskListItem/classes.css?3117","webpack://rap/./src/components/Reminder/TaskListItem/messages.ts","webpack://rap/./src/components/Reminder/TaskListItem/index.tsx","webpack://rap/./src/components/Reminder/TaskListItemDropTarget/index.tsx","webpack://rap/./src/components/Reminder/index.tsx","webpack://rap/./src/components/App/ReminderPage/messages.ts","webpack://rap/./src/components/App/ReminderPage/index.tsx","webpack://rap/./src/validators/stringValidators.ts","webpack://rap/./src/guards/stringGuards.ts","webpack://rap/./src/components/Reminder/TaskListItem/classes.css"],"sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { alpha } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      iconProp = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIconProp = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  var icon = indeterminate ? indeterminateIconProp : iconProp;\n  var indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size === \"small\" ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size === \"small\" ? size : indeterminateIcon.props.fontSize\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 9H4v2h16V9zM4 15h16v-2H4v2z\"\n}), 'DragHandle');\n\nexports.default = _default;","type CurryFunction = <T0, Ts extends unknown[], U>(f: (x: T0, ...xs: Ts) => U) => (x: T0) => (...xs: Ts) => U\n\nconst curry: CurryFunction = (f) => (x) => (...xs) => f(x, ...xs)\n\nexport default curry\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  add: 'Add',\n})\n","import Button from '@material-ui/core/Button'\nimport React from 'react'\nimport { FormattedMessage } from 'react-intl'\n\nimport messages from './messages'\n\nexport interface Props {\n  addTask(): void\n}\n\nconst AddTaskButton: React.FC<Props> = ({ addTask }) => (\n  <Button onClick={ addTask } variant=\"contained\" color=\"secondary\">\n    <FormattedMessage { ...messages.add } />\n  </Button>\n)\n\nexport default AddTaskButton\n","import List from '@material-ui/core/List'\nimport React from 'react'\n\nimport { Props as TaskListItemDropTargetProps } from '~/components/Reminder/TaskListItemDropTarget'\n\nexport interface Props {\n  children?: React.ReactElement<TaskListItemDropTargetProps, React.ComponentType<TaskListItemDropTargetProps>> | React.ReactElement<TaskListItemDropTargetProps, React.ComponentType<TaskListItemDropTargetProps>>[]\n}\n\nconst TaskList: React.FC<Props> = ({ children }) => (\n  <List>\n    { children }\n  </List>\n)\n\nexport default TaskList\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js!./classes.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js!./classes.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  enterInUpperBoundCharactersOrLess: 'Enter in { upperBound } characters or less.',\n})\n","import Checkbox from '@material-ui/core/Checkbox'\nimport IconButton from '@material-ui/core/IconButton'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport TextField from '@material-ui/core/TextField'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport DragHandleIcon from '@material-ui/icons/DragHandle'\nimport classnames from 'classnames'\nimport React, { useCallback, useMemo } from 'react'\nimport { useDrag } from 'react-dnd'\nimport { useIntl } from 'react-intl'\n\nimport Task, { TaskParams } from '~/domain/entity/Task'\nimport classes from './classes.css'\nimport messages from './messages'\n\nexport interface Props {\n  value: Task\n  index: number\n\n  onChange(value: Partial<TaskParams>): void\n  onDelete(): void\n  validate(input: Task): Partial<Record<keyof Task, Error>>\n}\n\ninterface CollectedProps {\n  dragging: boolean\n}\n\nexport interface DragObject {\n  value: Task\n  index: number\n}\n\nconst TaskListItem: React.FC<Props> = ({ value, index, onChange, onDelete, validate }) => {\n  const [{ dragging }, drag, preview] = useDrag<DragObject, unknown, CollectedProps>({\n    type: 'TaskListItem',\n    item: {\n      value,\n      index,\n    },\n    isDragging: (monitor) => {\n      const item: DragObject = monitor.getItem()\n\n      return value.isIdenticalTo(item.value)\n    },\n    collect: (monitor) => ({\n      dragging: monitor.isDragging(),\n    }),\n  })\n\n  const className = useMemo(() => classnames(classes.TaskListItemContainer, {\n    [classes.Dragging]: dragging,\n  }), [dragging])\n\n  const handleContentChange = useCallback<React.ChangeEventHandler<HTMLInputElement>>((event) => {\n    onChange({\n      content: event.target.value,\n    })\n  }, [onChange])\n\n  const handleDoneChange = useCallback((event: React.ChangeEvent<HTMLInputElement>, _checked: boolean) => {\n    onChange({\n      done: event.target.checked,\n    })\n  }, [onChange])\n\n  const { formatMessage } = useIntl()\n\n  const errors = useMemo(() => validate(value), [value, validate])\n  const hasError = useMemo(() => Object.values<Error | undefined>(errors).some((error) => error !== undefined), [errors]) // TODO: Remove the type annotation\n\n  const helperText = useMemo(() => {\n    if (errors.content === undefined) {\n      return null\n    }\n\n    const result = /.* is not between -Infinity and (?<upperBound>\\d+) characters\\./.exec(errors.content.message)\n\n    if (result !== null && result.groups?.['upperBound'] !== undefined) {\n      return formatMessage(messages.enterInUpperBoundCharactersOrLess, result.groups)\n    }\n\n    return null // TODO\n  }, [formatMessage, errors.content])\n\n  return (\n    <div ref={ preview }>\n      <ListItem\n        classes={ {\n          container: className,\n        } }\n      >\n        <ListItemIcon>\n          <div ref={ drag }>\n            <DragHandleIcon />\n          </div>\n        </ListItemIcon>\n        <ListItemIcon>\n          <Checkbox\n            color=\"primary\" // NOTE: 選択コントロールには secondary を使うべきとされている (https://material.io/design/color/the-color-system.html) が、これは強調のためであって、リマインダーのチェックボックスは項目を強調するためのものではない。\n            checked={ value.done }\n            onChange={ handleDoneChange }\n          />\n        </ListItemIcon>\n        <TextField\n          variant=\"standard\"\n          fullWidth\n          value={ value.content }\n          onChange={ handleContentChange }\n          disabled={ value.done }\n          error={ hasError }\n          helperText={ helperText }\n        />\n        <ListItemSecondaryAction>\n          <IconButton onClick={ onDelete } edge=\"end\">\n            <DeleteIcon />\n          </IconButton>\n        </ListItemSecondaryAction>\n      </ListItem>\n    </div>\n  )\n}\n\nexport default TaskListItem\n","import React, { useRef } from 'react'\nimport { useDrop } from 'react-dnd'\n\nimport { shouldBePresent } from '~/asserters/commonAsserters'\nimport { DragObject, Props as TaskListItemProps } from '~/components/Reminder/TaskListItem'\n\nexport interface Props {\n  children?: React.ReactElement<TaskListItemProps, React.ComponentType<TaskListItemProps>>\n  index: number\n\n  moveTask(sourceIndex: number, targetIndex: number): void\n}\n\nconst TaskListItemDropTarget: React.FC<Props> = ({ children, index, moveTask }) => {\n  const div = useRef<HTMLDivElement>(null)\n\n  const [, drop] = useDrop<DragObject, unknown, unknown>({\n    accept: 'TaskListItem',\n    hover(item, monitor) {\n      shouldBePresent(div.current)\n\n      if (item.index === index) {\n        return\n      }\n\n      const clientOffset = monitor.getClientOffset()\n\n      shouldBePresent(clientOffset)\n\n      const boundingClientRect = div.current.getBoundingClientRect()\n      const pointerY = clientOffset.y - boundingClientRect.top\n      const middleY = (boundingClientRect.bottom - boundingClientRect.top) / 2\n\n      // downwards\n      if (item.index < index && pointerY < middleY) {\n        return\n      }\n\n      // upwards\n      if (item.index > index && pointerY > middleY) {\n        return\n      }\n\n      moveTask(item.index, index)\n\n      item.index = index\n    },\n  })\n\n  drop(div)\n\n  return (\n    <div ref={ div }>\n      { children }\n    </div>\n  )\n}\n\nexport default TaskListItemDropTarget\n","import { List } from 'immutable'\nimport React, { useCallback, useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport curry from '~/curry'\nimport Task, { TaskParams } from '~/domain/entity/Task'\nimport TaskId from '~/domain/vo/TaskId'\nimport { State } from '~/redux'\nimport { addTaskAsync, changeTaskContentAsync, deleteTaskAsync, getTasksAsync, markTaskAsDoneAsync, markTaskAsUndoneAsync, moveTask } from '~/redux/modules/reminder'\nimport { asBoolean, asObject, leftOnly } from '~/validators/commonValidators'\nimport { asBoundedLengthString } from '~/validators/stringValidators'\nimport AddTaskButton from './AddTaskButton'\nimport TaskList from './TaskList'\nimport TaskListItem from './TaskListItem'\nimport TaskListItemDropTarget from './TaskListItemDropTarget'\n\ninterface StateProps {\n  tasks: List<Task>\n}\n\ninterface DispatchProps {\n  getTasks(): void\n  addTask(): void\n  changeTaskContent(taskId: TaskId, content: string): void\n  markTaskAsDone(taskId: TaskId): void\n  markTaskAsUndone(taskId: TaskId): void\n  deleteTask(taskId: TaskId): void\n  moveTask(source: number, dest: number): void\n}\n\ntype Props =\n  & StateProps\n  & DispatchProps\n\n/**\n * @throws `Error` if {input} is nullish.\n */\nconst validate = asObject((input) => ({\n  content: leftOnly(asBoundedLengthString({ upperBound: 140 }))(input.content),\n  done: leftOnly(asBoolean)(input.done),\n}))\n\nconst Reminder: React.FC<Props> = ({ tasks, getTasks, addTask, changeTaskContent, markTaskAsDone, markTaskAsUndone, deleteTask, moveTask }) => {\n  useEffect(() => {\n    getTasks()\n  }, [getTasks])\n\n  const changeTask = useCallback((taskId: TaskId, { content, done }: Partial<Alt.Omit<TaskParams, 'id'>>) => {\n    if (content !== undefined) {\n      changeTaskContent(taskId, content)\n    }\n\n    if (done !== undefined) {\n      if (done) {\n        markTaskAsDone(taskId)\n      } else {\n        markTaskAsUndone(taskId)\n      }\n    }\n  }, [changeTaskContent, markTaskAsDone, markTaskAsUndone])\n\n  return (\n    <>\n      <TaskList>\n        {\n          tasks.map((task, index) => (\n            <TaskListItemDropTarget\n              key={ index }\n              index={ index }\n              moveTask={ moveTask }\n            >\n              <TaskListItem\n                key={ task.id.value }\n                value={ task }\n                index={ index }\n                onChange={ curry(changeTask)(task.id) }\n                onDelete={ curry(deleteTask)(task.id) }\n                validate={ validate }\n              />\n            </TaskListItemDropTarget>\n          )).toArray()\n        }\n      </TaskList>\n      <AddTaskButton addTask={ addTask } />\n    </>\n  )\n}\n\n// connect\n\nconst mapStateToProps = ({ reminder: { tasks } }: State): StateProps => ({\n  tasks,\n})\n\nconst mapDispatchToProps: DispatchProps = {\n  getTasks: getTasksAsync,\n  addTask: addTaskAsync,\n  changeTaskContent: changeTaskContentAsync,\n  markTaskAsDone: markTaskAsDoneAsync,\n  markTaskAsUndone: markTaskAsUndoneAsync,\n  deleteTask: deleteTaskAsync,\n  moveTask,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Reminder)\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  reminder: 'Reminder',\n})\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { useIntl } from 'react-intl'\n\nimport { createPage } from '~/components/PageTemplate'\nimport Reminder from '~/components/Reminder'\nimport messages from './messages'\n\nconst ReminderPage: React.FC = () => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <>\n      <Helmet title={ formatMessage(messages.reminder) } />\n      <Reminder />\n    </>\n  )\n}\n\nexport default createPage(ReminderPage)\n","import assert from 'assert'\n\nimport { isUrl, seemsLikeGtmContainerId } from '~/guards/stringGuards'\nimport typed from '~/typed'\nimport { asString } from './commonValidators'\n\nexport const asBoundedLengthString = ({\n  lowerBound = -Infinity,\n  upperBound = Infinity,\n}: {\n  lowerBound?: number\n  upperBound?: number\n}) => (input: unknown) => {\n  assert(lowerBound <= upperBound)\n\n  const inputAsString = asString(input)\n\n  if (lowerBound <= inputAsString.length && inputAsString.length <= upperBound) {\n    return inputAsString\n  }\n\n  throw new Error(typed<[string, number, number]>`${ inputAsString } is not between ${ lowerBound } and ${ upperBound } characters.`)\n}\n\nexport function asUrl(input: unknown): string.Url {\n  const inputAsString = asString(input)\n\n  if (!isUrl(inputAsString)) {\n    throw new Error(typed<[string]>`${ inputAsString } is not a URL.`)\n  }\n\n  return inputAsString\n}\n\nexport function asGtmContainerIdLike(input: unknown): `GTM-${string}` {\n  const inputAsString = asString(input)\n\n  if (!seemsLikeGtmContainerId(inputAsString)) {\n    throw new Error('It does not seem like a GTM container ID.')\n  }\n\n  return inputAsString\n}\n","export function isUrl(input: string): input is string.Url {\n  try {\n    new URL(input)\n\n    return true\n  } catch (error: unknown) {\n    return false\n  }\n}\n\nexport function seemsLikeGtmContainerId(input: string): input is `GTM-${string}` {\n  return /^GTM-.*$/.test(input)\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-components-Reminder-TaskListItem-classes__TaskListItemContainer--qlbWZ.src-components-Reminder-TaskListItem-classes__Dragging--YsS0x {\\n  opacity: 0;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/Reminder/TaskListItem/classes.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,UAAU;AACZ\",\"sourcesContent\":[\".TaskListItemContainer.Dragging {\\n  opacity: 0;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"TaskListItemContainer\": \"src-components-Reminder-TaskListItem-classes__TaskListItemContainer--qlbWZ\",\n\t\"Dragging\": \"src-components-Reminder-TaskListItem-classes__Dragging--YsS0x\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["createSvgIcon","d","defaultCheckedIcon","CheckBox","defaultIcon","CheckBoxOutlineBlank","defaultIndeterminateIcon","IndeterminateCheckBox","Checkbox","props","ref","_props$checkedIcon","checkedIcon","classes","_props$color","color","_props$icon","icon","iconProp","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","inputProps","_props$size","size","other","SwitchBase","type","root","concat","capitalize","checked","disabled","fontSize","undefined","withStyles","theme","palette","text","secondary","colorPrimary","primary","main","backgroundColor","action","hoverOpacity","colorSecondary","name","autoFocus","checkedProp","className","defaultChecked","disabledProp","id","inputRef","onBlur","onChange","onFocus","readOnly","required","tabIndex","value","_useControlled","controlled","default","Boolean","state","_useControlled2","setCheckedState","muiFormControl","hasLabelFor","component","role","event","input","newChecked","target","padding","cursor","position","opacity","width","height","top","left","margin","zIndex","_interopRequireDefault","_interopRequireWildcard","exports","React","_default","createElement","f","x","xs","defineMessages","add","addTask","Button","onClick","variant","messages","children","List","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","enterInUpperBoundCharactersOrLess","index","onDelete","validate","dragging","drag","preview","useDrag","item","isDragging","monitor","getItem","isIdenticalTo","collect","useMemo","classnames","handleContentChange","useCallback","content","handleDoneChange","_checked","done","formatMessage","useIntl","errors","hasError","Object","values","some","error","helperText","result","exec","message","groups","ListItem","container","ListItemIcon","DragHandle","TextField","fullWidth","ListItemSecondaryAction","IconButton","edge","Delete","moveTask","div","useRef","drop","useDrop","accept","hover","shouldBePresent","current","clientOffset","getClientOffset","boundingClientRect","getBoundingClientRect","pointerY","y","middleY","bottom","asObject","leftOnly","asBoundedLengthString","upperBound","asBoolean","mapDispatchToProps","getTasks","getTasksAsync","addTaskAsync","changeTaskContent","changeTaskContentAsync","markTaskAsDone","markTaskAsDoneAsync","markTaskAsUndone","markTaskAsUndoneAsync","deleteTask","deleteTaskAsync","connect","reminder","tasks","useEffect","changeTask","taskId","map","task","key","curry","toArray","createPage","Helmet","title","lowerBound","Infinity","inputAsString","asString","length","Error","typed","asUrl","URL","isUrl","asGtmContainerIdLike","test","seemsLikeGtmContainerId","___CSS_LOADER_EXPORT___","push","module","locals"],"sourceRoot":""}