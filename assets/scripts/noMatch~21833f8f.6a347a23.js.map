{"version":3,"sources":["webpack:///./src/lib/identity.ts","webpack:///./src/lib/guards/commonGuards.ts","webpack:///./src/components/Nav/classes.css","webpack:///./src/lib/languageNameSolver/index.ts","webpack:///./src/components/LocaleSelect/messages.ts","webpack:///./src/components/LocaleSelect/index.tsx","webpack:///./src/lib/components/Link/index.tsx","webpack:///./src/lib/components/MenuItemLink/index.tsx","webpack:///./src/components/Nav/messages.ts","webpack:///./src/components/Nav/index.tsx","webpack:///./src/lib/components/ErrorBoundary/index.ts","webpack:///./src/templates/PageTemplate/index.tsx","webpack:///./src/components/App/NoMatch/index.tsx"],"names":["identity","it","isOneOf","options","input","some","option","optional","isT","undefined","isObject","Object","values","every","isTag","tag","tagNativeNameMap","getNativeNameByTag","defineMessages","languages","LocaleSelect","classes","FormControlProps","locale","selectLocale","useState","labelWidth","setLabelWidth","inputId","useMemo","v4","theme","useTheme","variant","props","MuiFormControl","rootClassName","classnames","root","className","labelClassName","label","inputClassName","selectIconClassName","selectIcon","inputUnderlineClassName","inputUnderline","inputLabel","useCallback","node","offsetWidth","handleChange","event","target","value","useContext","IntlProviderContext","availableLocales","messages","icon","standard","underline","outlined","filled","map","availableLocale","i","mapStateToProps","localeSelector","mapDispatchToProps","connect","isTypographyColor","RouterLinkWithRef","React","forwardRef","ref","Link","color","restProps","console","warn","typed","Component","MenuItemLink","menuItem","to","button","innerRef","menuItemProps","LinkWithRef","linkProps","link","home","chess","counter","info","reminder","Nav","anchorEl","setAnchorEl","openMenu","currentTarget","closeMenu","Spacer","LocaleSelectLabel","LocaleSelectInput","LocaleSelectSelectIcon","LocaleSelectInputUnderline","ErrorBoundary","state","hasError","renderError","children","error","getDerivedStateFromError","PageTemplate","Error","String","TypeError","createPage","Body","NoMatch","pathname","location"],"mappings":"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","file":"assets/scripts/noMatch~21833f8f.6a347a23.js","sourcesContent":["const identity = <T extends U, U>(it: T): U => it\n\nexport default identity\n","import identity from '~/lib/identity'\n\nexport const isOneOf = <T extends readonly Json[]>(...options: T) => (input: unknown): input is T[number] => options.some((option) => option === input)\n\nexport const optional = <A extends unknown, T extends A>(isT: (input: A) => input is T) => (input: A | undefined): input is T | undefined => {\n  if (input === undefined) {\n    return true\n  }\n\n  return isT(input)\n}\n\nexport const isObject = <A extends B, T extends A, B = A>(isT: (input: B) => Record<keyof A, boolean>) => (input: A): input is T => {\n  return Object.values<boolean>(isT(input)).every(identity)\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spacer\":\"src-components-Nav-classes__Spacer--36ovl\",\"LocaleSelectLabel\":\"src-components-Nav-classes__LocaleSelectLabel--3h3DV\",\"LocaleSelectInput\":\"src-components-Nav-classes__LocaleSelectInput--3oNu1\",\"LocaleSelectSelectIcon\":\"src-components-Nav-classes__LocaleSelectSelectIcon--2AyFk\",\"LocaleSelectInputUnderline\":\"src-components-Nav-classes__LocaleSelectInputUnderline--2WFrx\"};\n    if(module.hot) {\n      // 1584030947212\n      var cssReload = require(\"/home/runner/work/react-app-prototype/react-app-prototype/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"hmr\":true,\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  ","import tagNativeNameMap from './__data__/tagNativeNameMap.json'\n\nexport type Tag = keyof typeof tagNativeNameMap\n\nexport function isTag(tag: unknown): tag is Tag {\n  return typeof tag === 'string' && tag in tagNativeNameMap\n}\n\nexport function getNativeNameByTag(tag: Tag) {\n  return tagNativeNameMap[tag]\n}\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  languages: 'Languages',\n})\n","import classnames from 'classnames'\nimport React, { useCallback, useContext, useMemo, useState } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { connect } from 'react-redux'\nimport { v4 } from 'uuid'\n\nimport FilledInput from '@material-ui/core/FilledInput'\nimport FormControl, { FormControlProps } from '@material-ui/core/FormControl'\nimport Input from '@material-ui/core/Input'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport OutlinedInput from '@material-ui/core/OutlinedInput'\nimport Select, { SelectProps } from '@material-ui/core/Select'\nimport { useTheme } from '@material-ui/core/styles'\n\nimport IntlProviderContext from '~/lib/contexts/IntlProviderContext'\nimport { Tag, getNativeNameByTag, isTag } from '~/lib/languageNameSolver'\nimport { State } from '~/redux'\nimport { selectLocale } from '~/redux/modules/localeSelector'\nimport messages from './messages'\n\ninterface OwnProps {\n  classes?: {\n    root?: string\n    label?: string\n    input?: string\n    selectIcon?: string\n    inputUnderline?: string\n  } | null\n  FormControlProps?: FormControlProps | null\n}\n\ninterface StateProps {\n  locale: Tag\n}\n\ninterface DispatchProps {\n  selectLocale(locale: Tag): void\n}\n\ntype Props =\n  & OwnProps\n  & StateProps\n  & DispatchProps\n\nexport /* for testing */ const LocaleSelect: React.FunctionComponent<Props> = ({ classes, FormControlProps, locale, selectLocale }) => {\n  const [labelWidth, setLabelWidth] = useState<number>(0)\n  const inputId = useMemo(v4, [])\n  const theme = useTheme()\n\n  // NOTE: Fortunately, FormControl is nothing but FormControl.\n  const variant = useMemo(() => FormControlProps?.variant ?? theme?.props?.MuiFormControl?.variant ?? 'standard', [FormControlProps?.variant, theme?.props?.MuiFormControl?.variant])\n\n  const rootClassName = useMemo(() => classnames(classes?.root, FormControlProps?.className), [classes?.root, FormControlProps?.className])\n  const labelClassName = useMemo(() => classnames(classes?.label), [classes?.label])\n  const inputClassName = useMemo(() => classnames(classes?.input), [classes?.input])\n  const selectIconClassName = useMemo(() => classnames(classes?.selectIcon), [classes?.selectIcon])\n  const inputUnderlineClassName = useMemo(() => classnames(classes?.inputUnderline), [classes?.inputUnderline])\n\n  const inputLabel = useCallback((node: HTMLLabelElement | null) => { // TODO: type\n    if (node !== null) {\n      setLabelWidth(node.offsetWidth)\n    }\n  }, [])\n\n  const handleChange = useCallback<NonNullable<SelectProps['onChange']>>((event) => {\n    if (isTag(event.target.value)) {\n      selectLocale(event.target.value)\n    }\n  }, [])\n\n  const { availableLocales } = useContext(IntlProviderContext)\n\n  return (\n    <FormControl\n      { ...FormControlProps }\n      className={ rootClassName } // NOTE: override FormControlProps.className\n    >\n      <InputLabel className={ labelClassName } ref={ inputLabel } htmlFor={ inputId }>\n        <FormattedMessage { ...messages.languages } />\n      </InputLabel>\n      <Select\n        classes={ {\n          icon: selectIconClassName,\n        } }\n        native\n        labelWidth={ labelWidth }\n        value={ locale }\n        onChange={ handleChange }\n        id={ inputId }\n        inputProps={ { 'data-testid': 'localeSelect' } }\n        input={ {\n          standard: (\n            <Input\n              className={ inputClassName }\n              classes={ {\n                underline: inputUnderlineClassName,\n              } }\n            />\n          ),\n          outlined: <OutlinedInput className={ inputClassName } labelWidth={ labelWidth } />,\n          filled: <FilledInput className={ inputClassName } />,\n        }[variant] }\n      >\n        { availableLocales?.map((availableLocale, i) => (\n          <option key={ i } value={ availableLocale }>{ getNativeNameByTag(availableLocale) }</option>\n        )) }\n      </Select>\n    </FormControl>\n  )\n}\n\n// connect\n\nconst mapStateToProps = ({ localeSelector: { locale } }: State): StateProps => ({\n  locale,\n})\n\nconst mapDispatchToProps: DispatchProps = {\n  selectLocale,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LocaleSelect)\n","import React from 'react'\nimport { Link as RouterLink, LinkProps as RouterLinkProps } from 'react-router-dom'\n\nimport MuiLink, { LinkProps as MuiLinkProps } from '@material-ui/core/Link'\n\nimport { isOneOf, optional } from '~/lib/guards/commonGuards'\nimport typed from '~/lib/typed'\n\nexport type Props =\n  & RouterLinkProps\n  & Alt.Omit<MuiLinkProps, 'color' | 'ref'>\n\nconst isTypographyColor = optional(isOneOf('initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error'))\n\n// TODO: delete this; See also https://material-ui.com/guides/composition/#link\nconst RouterLinkWithRef = React.forwardRef<HTMLAnchorElement, RouterLinkProps>((props, ref) => (\n  <RouterLink innerRef={ ref } { ...props } />\n))\n\nexport default class Link extends React.Component<Props> {\n  public render() {\n    const { color, ...restProps } = this.props\n\n    if (!isTypographyColor(color)) {\n      console.warn(typed<[string]>`${ color } is not a Material-UI Typography color.`) // tslint:disable-line:no-console\n\n      return (\n        <MuiLink component={ RouterLinkWithRef } { ...restProps } />\n      )\n    }\n\n    return (\n      <MuiLink component={ RouterLinkWithRef } color={ color } { ...restProps } />\n    )\n  }\n}\n","import * as React from 'react'\n\nimport MenuItem, { MenuItemProps } from '@material-ui/core/MenuItem'\n\nimport Link, { Props as LinkProps } from '~/lib/components/Link'\n\ntype Props = MenuItemProps<typeof Link, { button?: true }>\n\nconst MenuItemLink: React.FunctionComponent<Props> = React.forwardRef<Link, React.PropsWithoutRef<Props>>(({ to, button, innerRef, ...menuItemProps }, menuItem) => {\n  // See https://material-ui.com/guides/composition/#link\n  const LinkWithRef = React.forwardRef<Link, LinkProps>((linkProps, link) => (\n    <Link ref={ link } innerRef={ innerRef } color=\"inherit\" underline=\"none\" { ...linkProps } />\n  ))\n\n  return (\n    <MenuItem button component={ LinkWithRef } to={ to } ref={ menuItem } { ...menuItemProps } />\n  )\n})\n\nexport default MenuItemLink\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  home: 'home',\n  chess: 'chess',\n  counter: 'counter',\n  info: 'info',\n  reminder: 'reminder',\n})\n","// import classnames from 'classnames'\nimport React, { useCallback, useState } from 'react'\nimport { FormattedMessage } from 'react-intl'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Menu from '@material-ui/core/Menu'\nimport Toolbar from '@material-ui/core/Toolbar'\n// import { createStyles, makeStyles } from '@material-ui/core/styles'\nimport MenuIcon from '@material-ui/icons/Menu'\n\nimport LocaleSelect from '~/components/LocaleSelect' // TODO\nimport MenuItemLink from '~/lib/components/MenuItemLink'\nimport classes from './classes.css'\nimport messages from './messages'\n\nconst Nav: React.FunctionComponent = () => {\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null)\n\n  const openMenu = useCallback<React.MouseEventHandler<HTMLButtonElement>>((event) => {\n    setAnchorEl(event.currentTarget)\n  }, [])\n\n  const closeMenu = useCallback(() => {\n    setAnchorEl(null)\n  }, [])\n\n  return (\n    <>\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" onClick={ openMenu }>\n            <MenuIcon />\n          </IconButton>\n          <div className={ classes.Spacer } />\n          <LocaleSelect\n            classes={ {\n              label: classes.LocaleSelectLabel,\n              input: classes.LocaleSelectInput,\n              selectIcon: classes.LocaleSelectSelectIcon,\n              inputUnderline: classes.LocaleSelectInputUnderline,\n            } }\n            FormControlProps={ {\n              variant: 'filled',\n            } }\n          />\n        </Toolbar>\n      </AppBar>\n      <Menu open={ anchorEl !== null } anchorEl={ anchorEl } onClose={ closeMenu }>\n        <MenuItemLink to=\"/\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.home } />\n        </MenuItemLink>\n        <MenuItemLink to=\"/chess\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.chess } />\n        </MenuItemLink>\n        <MenuItemLink to=\"/counter\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.counter } />\n        </MenuItemLink>\n        <MenuItemLink to=\"/info\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.info } />\n        </MenuItemLink>\n        <MenuItemLink to=\"/reminder\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.reminder } />\n        </MenuItemLink>\n      </Menu>\n    </>\n  )\n}\n\nexport default Nav\n","import React from 'react'\n\ninterface Props {\n  /**\n   * @param children that throws {error}\n   */\n  renderError(error: unknown, children: React.ReactNode): React.ReactNode\n}\n\ninterface State {\n  hasError: boolean\n  error?: unknown\n}\n\nclass ErrorBoundary extends React.Component<Props, State> {\n\n  // NOTE: https://github.com/DefinitelyTyped/DefinitelyTyped/blob/826ce0f1ce1d1887d199986283630d6f63075ad5/types/react/index.d.ts#L419 にも関わらず、初期化されていない state は null であるため、初期化を強制するためにプロパティ宣言を行う。\n  public state: Readonly<State> = {\n    hasError: false,\n  }\n\n  public static getDerivedStateFromError = (error: unknown) => ({\n    hasError: true,\n    error,\n  })\n\n  public render() {\n    const { renderError, children } = this.props\n    const { hasError, error } = this.state\n\n    if (hasError) {\n      return renderError(error, children)\n    }\n\n    return children\n  }\n}\n\nexport default ErrorBoundary\n","import React, { useCallback } from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\n\nimport Nav from '~/components/Nav'\nimport ErrorBoundary from '~/lib/components/ErrorBoundary'\nimport typed from '~/lib/typed'\n\ninterface PageTemplateProps {\n  children: React.ReactElement<BodyProps, React.ComponentType<BodyProps>>\n}\n\ntype BodyProps = PageProps\n\ntype PageProps =\n  & RouteComponentProps\n\nconst PageTemplate: React.FunctionComponent<PageTemplateProps> = ({ children }) => {\n  const renderError = useCallback((error: unknown) => {\n    if (error instanceof Error) {\n      return typed<[string]>`${ String(error) }`\n    }\n\n    throw new TypeError(typed<[string]>`${ String(error) } is not an error.`)\n  }, [])\n\n  return (\n    <>\n      <Nav />\n      <ErrorBoundary renderError={ renderError }>\n        { children }\n      </ErrorBoundary>\n    </>\n  )\n}\n\nexport const createPage: (Body: React.FunctionComponent<BodyProps>) => React.FunctionComponent<PageProps> = (Body) => (props) => (\n  <PageTemplate>\n    <Body { ...props } />\n  </PageTemplate>\n)\n\nexport default PageTemplate\n","import React from 'react'\nimport { RouteComponentProps } from 'react-router'\n\nimport typed from '~/lib/typed'\nimport { createPage } from '~/templates/PageTemplate'\n\ntype Props =\n  & RouteComponentProps\n\nconst NoMatch: React.FunctionComponent<Props> = ({ location: { pathname } }) => {\n  throw new Error(typed<[string]>`No route matches ${ pathname }.`)\n}\n\nexport default createPage(NoMatch)\n"],"sourceRoot":""}