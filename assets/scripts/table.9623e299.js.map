{"version":3,"sources":["webpack://rap/./node_modules/@material-ui/core/esm/Table/TableContext.js","webpack://rap/./node_modules/@material-ui/core/esm/Table/Table.js","webpack://rap/./node_modules/@material-ui/core/esm/Table/Tablelvl2Context.js","webpack://rap/./node_modules/@material-ui/core/esm/TableBody/TableBody.js","webpack://rap/./node_modules/@material-ui/core/esm/TableCell/TableCell.js","webpack://rap/./node_modules/@material-ui/core/esm/TableContainer/TableContainer.js","webpack://rap/./node_modules/@material-ui/core/esm/TableHead/TableHead.js","webpack://rap/./node_modules/@material-ui/core/esm/TableRow/TableRow.js","webpack://rap/./src/components/DataTable/index.tsx","webpack://rap/./src/validators/protocolBuffersWellKnownTypesValidators.ts","webpack://rap/./src/validators/googleSheetsApiResourceValidators.ts","webpack://rap/./src/components/FossLicenseComparisonTable/index.tsx","webpack://rap/./src/hooks/useFetch.ts","webpack://rap/./src/components/App/TablePage/messages.ts","webpack://rap/./src/components/App/TablePage/index.tsx"],"names":["defaultComponent","Table","props","ref","classes","className","_props$component","component","Component","_props$padding","padding","_props$size","size","_props$stickyHeader","stickyHeader","other","table","value","role","root","withStyles","theme","display","width","borderCollapse","borderSpacing","typography","body2","spacing","color","palette","text","secondary","textAlign","captionSide","name","tablelvl2","variant","TableBody","TableCell","_props$align","align","paddingProp","scopeProp","scope","sizeProp","sortDirection","variantProp","isHeadCell","ariaSort","concat","capitalize","verticalAlign","borderBottom","type","divider","head","primary","lineHeight","pxToRem","fontWeight","fontWeightMedium","body","footer","fontSize","sizeSmall","paddingRight","paddingLeft","paddingCheckbox","paddingNone","alignLeft","alignCenter","alignRight","flexDirection","alignJustify","position","top","left","zIndex","backgroundColor","background","default","TableContainer","overflowX","TableHead","TableRow","_props$hover","hover","_props$selected","selected","outline","action","main","selectedOpacity","columns","rows","Paper","map","column","i","key","label","field","row","Object","entries","_field","j","asValue","asJson","asListValue","listOf","asDimension","asUnionOf","asValueRange","optional","asObject","input","range","asString","majorDimension","values","isStringOrNumber","config","useInjection","response","init","fetchPromise","setFetchPromise","useState","setResponse","error","setError","state","setState","useEffect","fetch","shouldBePresent","then","catch","reason","Error","TypeError","useFetch","generatePath","typed","get","spreadsheetId","sheetName","apiKey","setColumns","setRows","sheets","json","undefined","every","Array","isArray","firstRowValues","rowValues","columnValues","cell","fromEntries","zipIterables","defineMessages","createPage","formatMessage","useIntl","Helmet","title","messages","Suspense","fallback","CircularProgress"],"mappings":"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","file":"assets/scripts/table.9623e299.js","sourcesContent":["import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar TableContext = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  TableContext.displayName = 'TableContext';\n}\n\nexport default TableContext;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport TableContext from './TableContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'table',\n      width: '100%',\n      borderCollapse: 'collapse',\n      borderSpacing: 0,\n      '& caption': _extends({}, theme.typography.body2, {\n        padding: theme.spacing(2),\n        color: theme.palette.text.secondary,\n        textAlign: 'left',\n        captionSide: 'bottom'\n      })\n    },\n\n    /* Styles applied to the root element if `stickyHeader={true}`. */\n    stickyHeader: {\n      borderCollapse: 'separate'\n    }\n  };\n};\nvar defaultComponent = 'table';\nvar Table = /*#__PURE__*/React.forwardRef(function Table(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      _props$padding = props.padding,\n      padding = _props$padding === void 0 ? 'default' : _props$padding,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$stickyHeader = props.stickyHeader,\n      stickyHeader = _props$stickyHeader === void 0 ? false : _props$stickyHeader,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"padding\", \"size\", \"stickyHeader\"]);\n\n  var table = React.useMemo(function () {\n    return {\n      padding: padding,\n      size: size,\n      stickyHeader: stickyHeader\n    };\n  }, [padding, size, stickyHeader]);\n  return /*#__PURE__*/React.createElement(TableContext.Provider, {\n    value: table\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    role: Component === defaultComponent ? null : 'table',\n    ref: ref,\n    className: clsx(classes.root, className, stickyHeader && classes.stickyHeader)\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes = {\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   */\n  padding: PropTypes.oneOf(['default', 'checkbox', 'none']),\n\n  /**\n   * Allows TableCells to inherit size of the Table.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * Set the header sticky.\n   *\n   * ⚠️ It doesn't work with IE 11.\n   */\n  stickyHeader: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTable'\n})(Table);","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar Tablelvl2Context = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  Tablelvl2Context.displayName = 'Tablelvl2Context';\n}\n\nexport default Tablelvl2Context;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-row-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'body'\n};\nvar defaultComponent = 'tbody';\nvar TableBody = /*#__PURE__*/React.forwardRef(function TableBody(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : 'rowgroup'\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableBody.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableBody'\n})(TableBody);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport { darken, fade, lighten } from '../styles/colorManipulator';\nimport TableContext from '../Table/TableContext';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, {\n      display: 'table-cell',\n      verticalAlign: 'inherit',\n      // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n      // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n      borderBottom: \"1px solid\\n    \".concat(theme.palette.type === 'light' ? lighten(fade(theme.palette.divider, 1), 0.88) : darken(fade(theme.palette.divider, 1), 0.68)),\n      textAlign: 'left',\n      padding: 16\n    }),\n\n    /* Styles applied to the root element if `variant=\"head\"` or `context.table.head`. */\n    head: {\n      color: theme.palette.text.primary,\n      lineHeight: theme.typography.pxToRem(24),\n      fontWeight: theme.typography.fontWeightMedium\n    },\n\n    /* Styles applied to the root element if `variant=\"body\"` or `context.table.body`. */\n    body: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `variant=\"footer\"` or `context.table.footer`. */\n    footer: {\n      color: theme.palette.text.secondary,\n      lineHeight: theme.typography.pxToRem(21),\n      fontSize: theme.typography.pxToRem(12)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: '6px 24px 6px 16px',\n      '&:last-child': {\n        paddingRight: 16\n      },\n      '&$paddingCheckbox': {\n        width: 24,\n        // prevent the checkbox column from growing\n        padding: '0 12px 0 16px',\n        '&:last-child': {\n          paddingLeft: 12,\n          paddingRight: 16\n        },\n        '& > *': {\n          padding: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"checkbox\"`. */\n    paddingCheckbox: {\n      width: 48,\n      // prevent the checkbox column from growing\n      padding: '0 0 0 4px',\n      '&:last-child': {\n        paddingLeft: 0,\n        paddingRight: 4\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"none\"`. */\n    paddingNone: {\n      padding: 0,\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right',\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `context.table.stickyHeader={true}`. */\n    stickyHeader: {\n      position: 'sticky',\n      top: 0,\n      left: 0,\n      zIndex: 2,\n      backgroundColor: theme.palette.background.default\n    }\n  };\n};\n/**\n * The component renders a `<th>` element when the parent context is a header\n * or otherwise a `<td>` element.\n */\n\nvar TableCell = /*#__PURE__*/React.forwardRef(function TableCell(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      component = props.component,\n      paddingProp = props.padding,\n      scopeProp = props.scope,\n      sizeProp = props.size,\n      sortDirection = props.sortDirection,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"component\", \"padding\", \"scope\", \"size\", \"sortDirection\", \"variant\"]);\n\n  var table = React.useContext(TableContext);\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  var isHeadCell = tablelvl2 && tablelvl2.variant === 'head';\n  var role;\n  var Component;\n\n  if (component) {\n    Component = component;\n    role = isHeadCell ? 'columnheader' : 'cell';\n  } else {\n    Component = isHeadCell ? 'th' : 'td';\n  }\n\n  var scope = scopeProp;\n\n  if (!scope && isHeadCell) {\n    scope = 'col';\n  }\n\n  var padding = paddingProp || (table && table.padding ? table.padding : 'default');\n  var size = sizeProp || (table && table.size ? table.size : 'medium');\n  var variant = variantProp || tablelvl2 && tablelvl2.variant;\n  var ariaSort = null;\n\n  if (sortDirection) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, classes[variant], className, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], padding !== 'default' && classes[\"padding\".concat(capitalize(padding))], size !== 'medium' && classes[\"size\".concat(capitalize(size))], variant === 'head' && table && table.stickyHeader && classes.stickyHeader),\n    \"aria-sort\": ariaSort,\n    role: role,\n    scope: scope\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Set the text-align on the table cell content.\n   *\n   * Monetary or generally number fields **should be right aligned** as that allows\n   * you to add them up quickly in your head without having to worry about decimals.\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n\n  /**\n   * The table cell contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Sets the padding applied to the cell.\n   * By default, the Table parent component set the value (`default`).\n   */\n  padding: PropTypes.oneOf(['checkbox', 'default', 'none']),\n\n  /**\n   * Set scope attribute.\n   */\n  scope: PropTypes.string,\n\n  /**\n   * Specify the size of the cell.\n   * By default, the Table parent component set the value (`medium`).\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * Set aria-sort direction.\n   */\n  sortDirection: PropTypes.oneOf(['asc', 'desc', false]),\n\n  /**\n   * Specify the cell type.\n   * By default, the TableHead, TableBody or TableFooter parent component set the value.\n   */\n  variant: PropTypes.oneOf(['body', 'footer', 'head'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableCell'\n})(TableCell);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    width: '100%',\n    overflowX: 'auto'\n  }\n};\nvar TableContainer = /*#__PURE__*/React.forwardRef(function TableContainer(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes = {\n  /**\n   * The table itself, normally `<Table />`\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableContainer'\n})(TableContainer);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-header-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'head'\n};\nvar defaultComponent = 'thead';\nvar TableHead = /*#__PURE__*/React.forwardRef(function TableHead(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : 'rowgroup'\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableHead'\n})(TableHead);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: 'inherit',\n      display: 'table-row',\n      verticalAlign: 'middle',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0,\n      '&$hover:hover': {\n        backgroundColor: theme.palette.action.hover\n      },\n      '&$selected, &$selected:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.selectedOpacity)\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Pseudo-class applied to the root element if `hover={true}`. */\n    hover: {},\n\n    /* Styles applied to the root element if table variant=\"head\". */\n    head: {},\n\n    /* Styles applied to the root element if table variant=\"footer\". */\n    footer: {}\n  };\n};\nvar defaultComponent = 'tr';\n/**\n * Will automatically set dynamic row height\n * based on the material table element parent (head, body, etc).\n */\n\nvar TableRow = /*#__PURE__*/React.forwardRef(function TableRow(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      _props$hover = props.hover,\n      hover = _props$hover === void 0 ? false : _props$hover,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"hover\", \"selected\"]);\n\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className, tablelvl2 && {\n      'head': classes.head,\n      'footer': classes.footer\n    }[tablelvl2.variant], hover && classes.hover, selected && classes.selected),\n    role: Component === defaultComponent ? null : 'row'\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableRow.propTypes = {\n  /**\n   * Should be valid <tr> children such as `TableCell`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the table row will shade on hover.\n   */\n  hover: PropTypes.bool,\n\n  /**\n   * If `true`, the table row will have the selected shading.\n   */\n  selected: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableRow'\n})(TableRow);","import Paper from '@material-ui/core/Paper'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport React from 'react'\n\ninterface Props {\n  columns: Column[]\n  rows: Row[]\n}\n\nexport interface Column {\n  field: Field\n  label?: string\n}\n\nexport type Row = {\n  [key in Field]: React.ReactNode\n}\n\ntype Field = string | number\n\nconst DataTable: React.FC<Props> = ({ columns, rows }) => (\n  <TableContainer component={ Paper }>\n    <Table>\n      <TableHead>\n        <TableRow>\n          { columns.map((column, i) => (\n            <TableCell key={ i }>\n              { column.label ?? column.field }\n            </TableCell>\n          )) }\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        { rows.map((row, i) => (\n          <TableRow hover key={ i }>\n            { Object.entries(row).map(([_field, value], j) => (\n              <TableCell key={ j }>\n                { value }\n              </TableCell>\n            )) }\n          </TableRow>\n        )) }\n      </TableBody>\n    </Table>\n  </TableContainer>\n)\n\nexport default DataTable\n","import { asJson, listOf } from './commonValidators'\n\nconst asValue = asJson\nexport const asListValue = listOf(asValue)\n","import { asObject, asString, asUnionOf, optional } from './commonValidators'\nimport { asListValue } from './protocolBuffersWellKnownTypesValidators'\n\nconst asDimension = asUnionOf('DIMENSION_UNSPECIFIED', 'COLUMNS', 'ROWS')\n\nexport const asValueRange = optional(asObject<GoogleSheetsApi.ValueRange>((input) => ({\n  range: asString(input.range),\n  majorDimension: asDimension(input.majorDimension),\n  values: asListValue(input.values),\n})))\n","import { useInjection } from 'inversify-react'\nimport React, { useEffect, useState } from 'react'\nimport { generatePath } from 'react-router'\n\nimport DataTable, { Column, Row } from '~/components/DataTable'\nimport ConfigRegistry from '~/config/ConfigRegistry'\nimport zipIterables from '~/extensions/Iterable/zipIterables'\nimport useFetch from '~/hooks/useFetch'\nimport typed from '~/typed'\nimport { asValueRange } from '~/validators/googleSheetsApiResourceValidators'\n\n// TODO: remove\nfunction isStringOrNumber(input: unknown): input is string | number {\n  switch (typeof input) {\n    case 'string':\n    case 'number': return true\n    default: return false\n  }\n}\n\nconst FossLicenseComparisonTable: React.FC = () => {\n  const config = useInjection<ConfigRegistry>('EnvVarConfig')\n\n  const response = useFetch(generatePath(typed<[string]>`${ config.get('SHEETS_API_URL') }/spreadsheets/:spreadsheetId/values/:sheetName\\\\?key=:apiKey`, {\n    spreadsheetId: config.get('GOOGLE_SHEETS_FOSS_COMPARISON_TABLE_SHEET_ID'),\n    sheetName: config.get('GOOGLE_SHEETS_FOSS_COMPARISON_TABLE_SHEET_SHEET_NAME'),\n    apiKey: config.get('GOOGLE_CLOUD_APIS_GOOGLE_SHEETS_API_KEY'),\n  }))\n\n  const [columns, setColumns] = useState<Column[] | null>(null)\n  const [rows, setRows] = useState<Row[] | null>(null)\n\n  useEffect(() => {\n    // tslint:disable-next-line:semicolon\n    ;(async () => {\n      const sheets = asValueRange(await response?.json())\n\n      if (sheets === undefined) {\n        return\n      }\n\n      if (sheets?.majorDimension !== 'ROWS') {\n        throw new Error('Dimension unsupported.')\n      }\n\n      if (!sheets.values.every<JsonArray>(Array.isArray)) {\n        throw new Error('Less than 2 dimensions found.')\n      }\n\n      if (!sheets.values.every((row): row is (string | number)[] => row.every(isStringOrNumber))) {\n        throw new Error('Neither string nor number value found.')\n      }\n\n      const [firstRowValues, ...rowValues] = sheets.values\n\n      const columnValues = firstRowValues.map((cell) => ({\n        field: cell, // TODO: unique\n      }))\n\n      setColumns(columnValues)\n      setRows(rowValues.map((row) => Object.fromEntries(zipIterables(firstRowValues, row))))\n    })()\n  }, [response])\n\n  if (columns === null || rows === null) {\n    return null\n  }\n\n  return (\n    <DataTable\n      columns={ columns }\n      rows={ rows }\n    />\n  )\n}\n\nexport default FossLicenseComparisonTable\n","import { useEffect, useState } from 'react'\n\nimport { shouldBePresent } from '~/asserters/commonAsserters'\nimport fetch, { NoAnyResponse } from '~/fetch'\n\n// TODO: remove?\ntype PromiseState =\n  | 'pending'\n  | 'fulfilled'\n  | 'rejected'\n\n/**\n * A hook to suspend a fetch result.\n *\n * @throws `Promise<void>` while pending.\n * @throws `Error` if rejected.\n */\nexport default function useFetch(input: RequestInfo, init?: RequestInit) {\n  const [fetchPromise, setFetchPromise] = useState<Promise<NoAnyResponse> | null>(null)\n  const [response, setResponse] = useState<NoAnyResponse | null>(null)\n  const [error, setError] = useState<Error | null>(null)\n  const [state, setState] = useState<PromiseState | null>(null)\n\n  useEffect(() => {\n    setFetchPromise(fetch(input, init))\n    setState('pending')\n  }, [input, init])\n\n  switch (state) {\n    case 'pending':\n      shouldBePresent(fetchPromise)\n\n      throw fetchPromise.then((value) => {\n        setResponse(value)\n        setState('fulfilled')\n      }).catch((reason) => {\n        if (!(reason instanceof Error)) {\n          throw new TypeError('Non-error reason caught.')\n        }\n\n        setError(reason)\n        setState('rejected')\n      })\n    case null:\n    case 'fulfilled': return response\n    case 'rejected': throw error\n  }\n}\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  table: 'Table',\n})\n","import CircularProgress from '@material-ui/core/CircularProgress'\nimport React, { Suspense } from 'react'\nimport { Helmet } from 'react-helmet'\nimport { useIntl } from 'react-intl'\n\nimport FossLicenseComparisonTable from '~/components/FossLicenseComparisonTable'\nimport { createPage } from '~/components/PageTemplate'\nimport messages from './messages'\n\nconst TablePage: React.FC = () => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <>\n      <Helmet title={ formatMessage(messages.table) } />\n      <Suspense fallback={ <CircularProgress /> }>\n        <FossLicenseComparisonTable />\n      </Suspense>\n    </>\n  )\n}\n\nexport default createPage(TablePage)\n"],"sourceRoot":""}