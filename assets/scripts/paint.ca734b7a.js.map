{"version":3,"sources":["webpack://rap/./src/domain/vo/Color.ts","webpack://rap/./src/utils/canvas/floodFill.ts","webpack://rap/./src/components/Paint/Canvas/classes.css?1804","webpack://rap/./src/components/Paint/Canvas/index.tsx","webpack://rap/./src/components/Paint/Toolbox/index.tsx","webpack://rap/./src/components/Paint/messages.ts","webpack://rap/./src/components/Paint/index.tsx","webpack://rap/./src/components/App/PaintPage/messages.ts","webpack://rap/./src/components/App/PaintPage/index.tsx","webpack://rap/./src/components/Paint/Canvas/classes.css"],"names":["Color","red","green","blue","alpha","result","this","hashCode","HashableEq","getColor","context","x","y","getImageData","data","floodFill","targetPoint","width","height","shouldBePresent","queue","targetColor","push","length","currentPoint","shift","currentColor","equals","fillRect","delay","options","useStyles","makeStyles","Canvas","forwardRef","forwardedRef","lineWidth","tool","useState","drawing","setDrawing","previousPoint","setPreviousPoint","ownRef","useRef","ref","useRefsMerged","jssClasses","canvasClassName","useMemo","classnames","classes","dpr","useScreen","useEffect","current","resetTransform","scale","handlePointerDown","useCallback","event","shouldBeNullable","nativeEvent","offsetX","offsetY","handlePointerMove","pressure","lineJoin","beginPath","moveTo","lineTo","stroke","handlePointerUp","handlePointerLeave","handleClick","className","onPointerDown","onPointerMove","onPointerUp","onPointerLeave","onClick","value","onChange","ToggleButtonGroup","orientation","exclusive","ToggleButton","Create","disabled","FormatColorFill","defineMessages","clear","brushSize","isCanvasLineCap","isOneOf","isTool","setContext","lineCap","setLineCap","setLineWidth","setTool","canvas","node","getContext","clearRect","handleToolChange","_event","handlePenCapRadioChange","target","handleLineWidthSliderChange","Array","isArray","Error","Button","messages","FormControl","FormLabel","RadioGroup","name","FormControlLabel","label","control","Radio","Box","m","List","ListItem","ListItemText","Typography","gutterBottom","Slider","min","paint","createPage","formatMessage","useIntl","Helmet","title","___CSS_LOADER_EXPORT___","module","id","locals"],"mappings":"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","file":"assets/scripts/paint.ca734b7a.js","sourcesContent":["import HashableEq from '~/lib/trait/HashableEq'\n\n// TODO: Remove\ninterface RgbaColor {\n  red: number\n  green: number\n  blue: number\n  alpha: number\n}\n\nexport default interface Color extends RgbaColor {} // tslint:disable-line:no-empty-interface\n\nexport default class Color extends HashableEq implements Class.ValueObject<RgbaColor> {\n  constructor({ red, green, blue, alpha }: RgbaColor) {\n    super()\n\n    this.red = red\n    this.green = green\n    this.blue = blue\n    this.alpha = alpha\n  }\n\n  public hashCode() {\n    // tslint:disable-next-line:no-let\n    let result = 0\n\n    result = 31 * result + this.red.hashCode()\n    result = 31 * result + this.green.hashCode()\n    result = 31 * result + this.blue.hashCode()\n    result = 31 * result + this.alpha.hashCode()\n\n    return result\n  }\n}\n","import Color from '~/domain/vo/Color'\nimport { shouldBePresent } from '~/lib/asserters/commonAsserters'\nimport delay from '~/lib/delay'\n\nexport /* for testing */ function getColor({ x, y }: Canvas.Point, context: CanvasRenderingContext2D): Color {\n  const { data: [red, green, blue, alpha] } = context.getImageData(x, y, 1, 1)\n\n  return new Color({\n    red,\n    green,\n    blue,\n    alpha,\n  })\n}\n\nexport default async function floodFill(targetPoint: Canvas.Point, width: number, height: number, context: CanvasRenderingContext2D) {\n  shouldBePresent(context)\n\n  const queue: Canvas.Point[] = [] // TODO\n  const targetColor = getColor(targetPoint, context)\n\n  // tslint:disable-next-line:no-array-mutation\n  queue.push(targetPoint)\n\n  // tslint:disable-next-line:no-loop-statement\n  while (queue.length !== 0) {\n    const currentPoint = queue.shift() // tslint:disable-line:no-array-mutation\n\n    shouldBePresent(currentPoint)\n\n    const currentColor = getColor(currentPoint, context)\n\n    if (!targetColor.equals(currentColor)) {\n      continue\n    }\n\n    context.fillRect(currentPoint.x, currentPoint.y, 1, 1)\n\n    if (currentPoint.x > 0) {\n      // tslint:disable-next-line:no-array-mutation\n      queue.push({ x: currentPoint.x - 1, y: currentPoint.y })\n    }\n\n    if (currentPoint.y > 0) {\n      // tslint:disable-next-line:no-array-mutation\n      queue.push({ x: currentPoint.x, y: currentPoint.y - 1 })\n    }\n\n    if (currentPoint.x < width - 1) {\n      // tslint:disable-next-line:no-array-mutation\n      queue.push({ x: currentPoint.x + 1, y: currentPoint.y })\n    }\n\n    if (currentPoint.y < height - 1) {\n      // tslint:disable-next-line:no-array-mutation\n      queue.push({ x: currentPoint.x, y: currentPoint.y + 1 })\n    }\n\n    await delay(30)\n  }\n}\n","import api from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js!./classes.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { Theme, makeStyles } from '@material-ui/core/styles'\nimport classnames from 'classnames'\nimport React, { forwardRef, useCallback, useEffect, useMemo, useRef, useState } from 'react'\n\nimport { shouldBeNullable, shouldBePresent } from '~/lib/asserters/commonAsserters'\nimport useRefsMerged from '~/lib/hooks/useRefsMerged'\nimport useScreen from '~/lib/hooks/useScreen'\nimport floodFill from '~/utils/canvas/floodFill'\nimport classes from './classes.css'\n\ninterface Props {\n  width: number\n  height: number\n  lineWidth: number\n  context: CanvasRenderingContext2D | null | undefined\n  tool: Canvas.Tool\n}\n\ninterface StyleProps {\n  width: number\n  height: number\n}\n\nconst useStyles = makeStyles<Theme, StyleProps, 'Canvas'>({\n  Canvas: ({ width, height }) => ({\n    width,\n    height,\n  }),\n})\n\nconst Canvas = forwardRef<HTMLCanvasElement, Props>(({ width, height, lineWidth, context, tool }, forwardedRef) => {\n  const [drawing, setDrawing] = useState(false)\n  const [previousPoint, setPreviousPoint] = useState<Canvas.Point | null>(null)\n\n  const ownRef = useRef<HTMLCanvasElement>(null)\n  const ref = useRefsMerged(forwardedRef, ownRef)\n\n  const jssClasses = useStyles({ width,  height })\n  const canvasClassName = useMemo(() => classnames(jssClasses.Canvas, classes.Canvas), [jssClasses.Canvas])\n\n  const { dpr } = useScreen()\n\n  useEffect(() => {\n    if (context == null || ownRef.current === null || dpr === null) {\n      return\n    }\n\n    /* tslint:disable:no-object-mutation */\n    ownRef.current.width = dpr * width\n    ownRef.current.height = dpr * height\n    /* tslint:enable:no-object-mutation */\n\n    context.resetTransform()\n    context.scale(dpr, dpr)\n  }, [width, height, context, ownRef, dpr])\n\n  const handlePointerDown = useCallback<React.PointerEventHandler<HTMLCanvasElement>>((event) => {\n    if (tool !== 'pen') {\n      return\n    }\n\n    shouldBeNullable(previousPoint)\n\n    setDrawing(true)\n\n    setPreviousPoint({\n      x: event.nativeEvent.offsetX,\n      y: event.nativeEvent.offsetY,\n    })\n  }, [tool, previousPoint])\n\n  const handlePointerMove = useCallback<React.PointerEventHandler<HTMLCanvasElement>>((event) => {\n    if (!drawing) {\n      return\n    }\n\n    shouldBePresent(context)\n    shouldBePresent(previousPoint)\n\n    /* tslint:disable:no-object-mutation */\n    context.lineWidth = lineWidth * (event.pressure !== 0 ? event.pressure : 1)\n    context.lineJoin = 'round'\n    /* tslint:enable:no-object-mutation */\n\n    context.beginPath()\n    context.moveTo(previousPoint.x, previousPoint.y)\n    context.lineTo(event.nativeEvent.offsetX, event.nativeEvent.offsetY)\n    context.stroke()\n\n    setPreviousPoint({\n      x: event.nativeEvent.offsetX,\n      y: event.nativeEvent.offsetY,\n    })\n  }, [lineWidth, context, drawing, previousPoint])\n\n  const handlePointerUp = useCallback(() => {\n    setDrawing(false)\n    setPreviousPoint(null)\n  }, [])\n\n  const handlePointerLeave = useCallback(() => {\n    setDrawing(false)\n    setPreviousPoint(null)\n  }, [])\n\n  const handleClick = useCallback<React.MouseEventHandler<HTMLCanvasElement>>(async (event) => {\n    if (tool !== 'bucket') {\n      return\n    }\n\n    shouldBePresent(context)\n\n    await floodFill({ x: event.nativeEvent.offsetX, y: event.nativeEvent.offsetY }, width, height, context)\n  }, [width, height, context, tool])\n\n  return (\n    <canvas\n      ref={ ref }\n      className={ canvasClassName }\n      width={ width }\n      height={ height }\n      onPointerDown={ handlePointerDown }\n      onPointerMove={ handlePointerMove }\n      onPointerUp={ handlePointerUp }\n      onPointerLeave={ handlePointerLeave }\n      onClick={ handleClick }\n    />\n  )\n})\n\nexport default Canvas\n","import CreateIcon from '@material-ui/icons/Create'\nimport FormatColorFillIcon from '@material-ui/icons/FormatColorFill'\nimport ToggleButton from '@material-ui/lab/ToggleButton'\nimport ToggleButtonGroup, { ToggleButtonGroupProps } from '@material-ui/lab/ToggleButtonGroup'\nimport React from 'react'\n\n// TODO: Remove\ntype Tool =\n  | 'pen'\n  | 'bucket'\n\nexport interface Props {\n  value: Tool\n  onChange: NonNullable<ToggleButtonGroupProps['onChange']>\n}\n\nconst Toolbox: React.FC<Props> = ({ value, onChange }) => (\n  <ToggleButtonGroup orientation=\"vertical\" exclusive value={ value } onChange={ onChange }>\n    <ToggleButton value=\"pen\">\n      <CreateIcon />\n    </ToggleButton>\n    <ToggleButton value=\"bucket\" disabled>\n      <FormatColorFillIcon />\n    </ToggleButton>\n  </ToggleButtonGroup>\n)\n\nexport default Toolbox\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  clear: 'Clear',\n  brushSize: 'Brush size',\n})\n","import Box from '@material-ui/core/Box'\nimport Button from '@material-ui/core/Button'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport Slider from '@material-ui/core/Slider'\nimport Typography from '@material-ui/core/Typography'\nimport React, { useCallback, useEffect, useState } from 'react'\nimport { FormattedMessage } from 'react-intl'\n\nimport { isOneOf } from '~/lib/guards/commonGuards'\nimport useScreen from '~/lib/hooks/useScreen'\nimport Canvas from './Canvas'\nimport Toolbox, { Props as ToolboxProps } from './Toolbox'\nimport messages from './messages'\n\n// TODO: Remove\ntype Tool =\n  | 'pen'\n  | 'bucket'\n\nconst isCanvasLineCap = isOneOf('butt', 'round', 'square')\nconst isTool = isOneOf('pen', 'bucket')\n\nconst WIDTH = 320\nconst HEIGHT = 320\n\nconst Paint: React.FC = () => {\n  const [context, setContext] = useState<CanvasRenderingContext2D | null>()\n  const [lineCap, setLineCap] = useState<CanvasLineCap>('round')\n  const [lineWidth, setLineWidth] = useState<number>(10)\n  const [tool, setTool] = useState<Tool>('pen')\n  const { dpr } = useScreen()\n\n  const canvas = useCallback<React.RefCallback<HTMLCanvasElement>>((node) => {\n    setContext(node?.getContext('2d'))\n  }, [])\n\n  const handleClick = useCallback<React.MouseEventHandler<HTMLButtonElement>>(() => {\n    context?.clearRect(0, 0, WIDTH, HEIGHT)\n  }, [context])\n\n  const handleToolChange = useCallback<ToolboxProps['onChange']>((_event, value) => {\n    if (!isTool(value)) {\n      return\n    }\n\n    setTool(value)\n  }, [])\n\n  const handlePenCapRadioChange = useCallback<React.ChangeEventHandler<HTMLInputElement>>((event) => {\n    if (isCanvasLineCap(event.target.value)) {\n      setLineCap(event.target.value)\n    }\n  }, [])\n\n  const handleLineWidthSliderChange = useCallback<Required<React.PropsOf<typeof Slider>>['onChange']>((_event, value) => {\n    if (Array.isArray(value)) {\n      throw new Error\n    }\n\n    setLineWidth(value)\n  }, [])\n\n  useEffect(() => {\n    if (context == null) {\n      return\n    }\n\n    // tslint:disable-next-line:no-object-mutation\n    context.lineCap = lineCap\n  }, [context, lineCap])\n\n  return (\n    <>\n      <Canvas width={ WIDTH } height={ HEIGHT } lineWidth={ lineWidth } ref={ canvas } context={ context } tool={ tool } />\n      <Button onClick={ handleClick }>\n        <FormattedMessage { ...messages.clear } />\n      </Button>\n      <Toolbox value={ tool } onChange={ handleToolChange } />\n      <FormControl disabled={ tool !== 'pen' }>\n        <FormLabel>line cap</FormLabel>\n        <RadioGroup name=\"lineCap\" value={ lineCap } onChange={ handlePenCapRadioChange }>\n          <FormControlLabel value=\"butt\" label=\"butt\" control={ <Radio /> } />\n          <FormControlLabel value=\"round\" label=\"round\" control={ <Radio /> } />\n          <FormControlLabel value=\"square\" label=\"square\" control={ <Radio /> } />\n        </RadioGroup>\n      </FormControl>\n      <Box m={ 1 }>\n        <List>\n          <ListItem>\n            <ListItemText>\n              <Typography gutterBottom><FormattedMessage { ...messages.brushSize } /></Typography>\n              <Slider min={ 1 / (dpr ?? 1) } value={ lineWidth } onChange={ handleLineWidthSliderChange } />\n            </ListItemText>\n          </ListItem>\n        </List>\n      </Box>\n    </>\n  )\n}\n\nexport default Paint\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  paint: 'Paint',\n})\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { useIntl } from 'react-intl'\n\nimport { createPage } from '~/components/PageTemplate'\nimport Paint from '~/components/Paint'\nimport messages from './messages'\n\nconst PaintPage: React.FC = () => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <>\n      <Helmet title={ formatMessage(messages.paint) } />\n      <Paint />\n    </>\n  )\n}\n\nexport default createPage(PaintPage)\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-components-Paint-Canvas-classes__Canvas--10YIO {\\n  background-color: white; /* TODO */\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/Paint/Canvas/classes.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,uBAAuB,EAAE,SAAS;AACpC\",\"sourcesContent\":[\".Canvas {\\n  background-color: white; /* TODO */\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"Canvas\": \"src-components-Paint-Canvas-classes__Canvas--10YIO\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n"],"sourceRoot":""}