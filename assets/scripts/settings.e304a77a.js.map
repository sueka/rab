{"version":3,"file":"assets/scripts/settings.e304a77a.js","mappings":"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","sources":["webpack://rap/./src/atoms/fullScreenState.ts","webpack://rap/./src/components/App/SettingsPage/classes.css?465d","webpack://rap/./src/components/App/SettingsPage/messages.ts","webpack://rap/./src/components/App/SettingsPage/index.tsx","webpack://rap/./src/components/Banner/index.tsx","webpack://rap/./src/components/ObtainCookieConsentBanner/messages.ts","webpack://rap/./src/globalVariables/cookieDialogKey.ts","webpack://rap/./src/globalVariables/reloadNotToAcceptCookiesBannerKey.ts","webpack://rap/./src/hooks/useBanner.ts","webpack://rap/./src/components/App/SettingsPage/classes.css"],"sourcesContent":["import { atom } from 'recoil'\n\nconst fullScreenState = atom({\n  key: 'fullScreenState',\n  default: document.fullscreenElement !== null,\n  effects_UNSTABLE: [\n    ({ onSet }) => {\n      onSet((newFullScreen) => {\n        // TODO: Delete the next line\n        // tslint:disable-next-line:strict-type-predicates\n        if (typeof newFullScreen !== 'boolean') {\n          throw new Error\n        }\n\n        if (newFullScreen) {\n          document.documentElement.requestFullscreen()\n        } else {\n          document.exitFullscreen()\n        }\n      })\n    },\n  ],\n})\n\nexport default fullScreenState\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js!./classes.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js!./classes.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  settings: 'Settings',\n  general: 'General',\n  language: 'Language',\n  appearance: 'Appearance',\n  theme: 'Theme',\n  useLightTheme: 'Use light theme',\n  useDarkTheme: 'Use dark theme',\n  useDeviceTheme: 'Use device theme',\n  fullScreen: 'Full screen',\n  securityAndPrivacy: 'Security and privacy',\n  acceptCookies: 'Accept cookies',\n  aPageReloadIsRequiredForTheConfigurationChangesToTakeEffect: 'A page reload is required for the configuration changes to take effect.',\n  reload: 'Reload',\n  dontReload: 'Don\\'t reload',\n})\n","import Avatar from '@material-ui/core/Avatar'\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListSubheader from '@material-ui/core/ListSubheader'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport Switch from '@material-ui/core/Switch'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Brightness4Icon from '@material-ui/icons/Brightness4'\nimport Brightness7Icon from '@material-ui/icons/Brightness7'\nimport BrightnessAutoIcon from '@material-ui/icons/BrightnessAuto'\nimport SecurityIcon from '@material-ui/icons/Security'\nimport { useInjection } from 'inversify-react'\nimport React, { useCallback, useContext, useEffect } from 'react'\nimport Helmet from 'react-helmet'\nimport { FormattedMessage, useIntl } from 'react-intl'\nimport { useRecoilState } from 'recoil'\nimport { v4 } from 'uuid'\n\nimport { shouldBePresent } from '~/asserters/commonAsserters'\nimport appearanceThemeState from '~/atoms/appearanceThemeState'\nimport cookieConsentObtainedState from '~/atoms/cookieConsentObtainedState'\nimport fullScreenState from '~/atoms/fullScreenState'\nimport Banner from '~/components/Banner'\nimport LocaleSelect from '~/components/LocaleSelect'\nimport obtainedCookieConsentBannerMessages from '~/components/ObtainCookieConsentBanner/messages' // TODO: Move\nimport { createPage } from '~/components/PageTemplate'\nimport ConfigRegistry from '~/config/ConfigRegistry'\nimport DefaultDarkContext from '~/contexts/DefaultDarkContext'\nimport cookieDialogKey from '~/globalVariables/cookieDialogKey'\nimport reloadNotToAcceptCookiesBannerKey from '~/globalVariables/reloadNotToAcceptCookiesBannerKey'\nimport useBanner from '~/hooks/useBanner'\nimport useGtm from '~/hooks/useGtm'\nimport classes from './classes.css'\nimport messages from './messages'\n\nconst languageSettingId = v4()\nconst themeSettingId = v4()\nconst fullscreenSettingId = v4()\nconst acceptCookiesSettingId = v4()\n\nconst SettingsPage: React.FC = () => {\n  const { formatMessage } = useIntl()\n  const config = useInjection<ConfigRegistry>('EnvVarConfig')\n  const gtmContainerId = config.get('GTM_CONTAINER_ID')\n  const gtm = useGtm()\n  const banner = useBanner()\n\n  const [appearanceTheme, setAppearanceTheme] = useRecoilState(appearanceThemeState)\n  const [fullScreen, setFullScreen] = useRecoilState(fullScreenState)\n  const [cookieConsentObtained, setCookieConsentObtained] = useRecoilState(cookieConsentObtainedState)\n  const { defaultDark } = useContext(DefaultDarkContext)\n\n  shouldBePresent(defaultDark)\n\n  const handleFullscreenchange = useCallback(() => {\n    setFullScreen(document.fullscreenElement !== null)\n  }, [])\n\n  useEffect(() => {\n    document.addEventListener('webkitfullscreenchange', handleFullscreenchange)\n    document.addEventListener('fullscreenchange', handleFullscreenchange)\n\n    return () => {\n      document.removeEventListener('webkitfullscreenchange', handleFullscreenchange)\n      document.removeEventListener('fullscreenchange', handleFullscreenchange)\n    }\n  }, [handleFullscreenchange])\n\n  const handleAppearanceThemeChange = useCallback((_event, theme: string) => {\n    if (theme === 'light' || theme === 'dark' || theme === 'device') {\n      setAppearanceTheme(theme)\n    }\n  }, [])\n\n  const handleFullScreenChange = useCallback((_event, checked) => {\n    setFullScreen(checked)\n  }, [])\n\n  const handleReload = useCallback(() => {\n    location.reload()\n  }, [])\n\n  const handleDontReload = useCallback(() => {\n    banner.hide({ key: reloadNotToAcceptCookiesBannerKey })\n  }, [banner])\n\n  const handleAcceptCookiesChange = useCallback((_event, checked) => {\n    setCookieConsentObtained(checked)\n\n    if (checked) {\n      if (gtmContainerId !== undefined) {\n        gtm.install(gtmContainerId)\n      }\n\n      banner.hide({\n        key: cookieDialogKey,\n        safe: true,\n      })\n\n      banner.hide({\n        key: reloadNotToAcceptCookiesBannerKey,\n        safe: true,\n      })\n    } else {\n      banner.show(<Banner\n        leading={ <Avatar>\n          <SecurityIcon />\n        </Avatar> }\n        text={ <FormattedMessage { ...messages.aPageReloadIsRequiredForTheConfigurationChangesToTakeEffect } /> }\n        actions={ <>\n          <Button variant=\"text\" color=\"primary\" onClick={ handleReload }>\n            <FormattedMessage { ...messages.reload } />\n          </Button>\n          <Button variant=\"text\" color=\"primary\" onClick={ handleDontReload }>\n            <FormattedMessage { ...messages.dontReload } />\n          </Button>\n        </> }\n      />, {\n        key: reloadNotToAcceptCookiesBannerKey,\n      })\n    }\n  }, [gtm, gtmContainerId, banner, handleReload, handleDontReload])\n\n  return (\n    <>\n      <Helmet title={ formatMessage(messages.settings) } />\n      <Grid container>\n        <Grid item xs={ 12 } sm={ 6 } md={ 4 } lg={ 3 } xl={ 2 }>\n          <List\n            subheader={ <ListSubheader>\n              <FormattedMessage { ...messages.general } />\n            </ListSubheader> }\n          >\n            <ListItem\n              classes={ {\n                secondaryAction: classes.ListItemSecondaryActionIsLocaleSelect,\n              } }\n            >\n              <ListItemText\n                primary={ <FormattedMessage { ...messages.language } /> }\n                id={ languageSettingId }\n              />\n              <ListItemSecondaryAction>\n                <LocaleSelect\n                  hiddenLabel\n                  FormControlProps={ {\n                    variant: 'standard',\n                    color: 'secondary',\n                    'aria-labelledby': languageSettingId,\n                  } }\n                />\n              </ListItemSecondaryAction>\n            </ListItem>\n          </List>\n        </Grid>\n        <Grid item xs={ 12 } sm={ 6 } md={ 4 } lg={ 3 } xl={ 2 }>\n          <List\n            subheader={ <ListSubheader>\n              <FormattedMessage { ...messages.appearance } />\n            </ListSubheader> }\n          >\n            <ListItem\n              classes={ {\n                secondaryAction: classes.ListItemSecondaryActionIsRadioGroup3,\n              } }\n            >\n              <ListItemText\n                primary={ <FormattedMessage { ...messages.theme } /> }\n                id={ themeSettingId }\n              />\n              <ListItemSecondaryAction>\n                <RadioGroup\n                  row\n                  name=\"theme\"\n                  value={ appearanceTheme }\n                  onChange={ handleAppearanceThemeChange }\n                  aria-labelledby={ themeSettingId }\n                >\n                  <Tooltip arrow title={ <FormattedMessage { ...messages.useLightTheme } /> }>\n                    <Radio\n                      icon={ <Brightness7Icon /> }\n                      checkedIcon={ <Brightness7Icon /> }\n                      value=\"light\"\n                    />\n                  </Tooltip>\n                  <Tooltip arrow title={ <FormattedMessage { ...messages.useDarkTheme } /> }>\n                    <Radio\n                      icon={ <Brightness4Icon /> }\n                      checkedIcon={ <Brightness4Icon /> }\n                      value=\"dark\"\n                    />\n                  </Tooltip>\n                  <Tooltip arrow title={ <FormattedMessage { ...messages.useDeviceTheme } /> }>\n                    <Radio\n                      icon={ <BrightnessAutoIcon /> }\n                      checkedIcon={ <BrightnessAutoIcon /> }\n                      value=\"device\"\n                    />\n                  </Tooltip>\n                </RadioGroup>\n              </ListItemSecondaryAction>\n            </ListItem>\n            <ListItem\n              disabled={ !document.fullscreenEnabled }\n              classes={ {\n                secondaryAction: classes.ListItemSecondaryActionIsSwitch,\n              } }\n            >\n              <ListItemText\n                primary={ <FormattedMessage { ...messages.fullScreen } /> }\n                id={ fullscreenSettingId }\n              />\n              <ListItemSecondaryAction>\n                <Switch\n                  checked={ fullScreen }\n                  onChange={ handleFullScreenChange }\n                  disabled={ !document.fullscreenEnabled }\n                  aria-labelledby={ fullscreenSettingId }\n                />\n              </ListItemSecondaryAction>\n            </ListItem>\n          </List>\n        </Grid>\n        <Grid item xs={ 12 } sm={ 6 } md={ 4 } lg={ 3 } xl={ 2 }>\n          <List\n            subheader={ <ListSubheader>\n              <FormattedMessage { ...messages.securityAndPrivacy } />\n            </ListSubheader> }\n          >\n            <ListItem\n              classes={ {\n                secondaryAction: classes.ListItemSecondaryActionIsSwitch,\n              } }\n            >\n              <ListItemText\n                primary={ <FormattedMessage { ...messages.acceptCookies } /> }\n                secondary={ <FormattedMessage { ...obtainedCookieConsentBannerMessages.weUseCookiesToAnalyzeOurTraffic } /> }\n                id={ acceptCookiesSettingId }\n              />\n              <ListItemSecondaryAction>\n                <Switch\n                  checked={ cookieConsentObtained }\n                  onChange={ handleAcceptCookiesChange }\n                  disabled={ gtmContainerId === undefined }\n                  aria-labelledby={ acceptCookiesSettingId }\n                />\n              </ListItemSecondaryAction>\n            </ListItem>\n          </List>\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n\nexport default createPage(SettingsPage)\n","import { AvatarProps } from '@material-ui/core/Avatar'\nimport Box from '@material-ui/core/Box'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Bowser from 'bowser'\nimport React from 'react'\n\nimport Spacer from '~/components/Spacer'\n\nexport interface Props {\n  leading?: React.ReactElement<AvatarProps, React.ComponentType<AvatarProps>>\n  text: React.ReactNode\n  actions: React.ReactNode\n}\n\n// TODO: Remove\n// TODO: Detect UA changes?\nconst browser = Bowser.getParser(navigator.userAgent)\n\nconst isMobile = browser.is('Mobile')\n\n/**\n * An implementation of https://material.io/components/banners.\n *\n * NOTE: Not support the no leading, mobile, one-line version.\n */\nconst Banner: React.FC<Props> = ({ leading, text, actions }) => (\n  <Paper square elevation={ 0 }>\n    <Box\n      display=\"flex\"\n      flexWrap=\"nowrap\"\n      alignItems={ isMobile ? 'flex-start' : 'center' }\n    >\n      { leading !== undefined && (\n        <Box\n          my={ isMobile ? 3 : 2 }\n          ml={ 2 }\n        >\n          { leading }\n        </Box>\n      ) }\n      <Box\n        alignSelf=\"stretch\"\n        display=\"flex\"\n        flexGrow={ 1 }\n        alignItems={ isMobile ? 'flex-start' : 'center' }\n        flexWrap={ isMobile ? 'wrap' : undefined }\n        gridColumnGap={ (isMobile ? 36 : 90) - 16 }\n        gridRowGap={ isMobile ? (leading !== undefined ? 20 : 12) - 10 : undefined }\n      >\n        <Box\n          mt={ isMobile ? 3 : 2 }\n          mb={ isMobile ? undefined : 2 }\n          ml={ isMobile ? 2 : 3 }\n          mr={ 1 }\n        >\n          <Typography variant=\"body2\">{ text }</Typography>{ /* TODO: Align to baseline */ }\n        </Box>\n        <Box\n          alignSelf=\"flex-end\"\n          display=\"flex\"\n          flexGrow={ 1 }\n        >\n          <Spacer />\n          <Box\n            mt={ isMobile ? 1.25 : 1 }\n            mx={ 1 }\n            mb={ 1 }\n            display=\"flex\"\n            gridColumnGap={ 8 }\n          >\n            { actions }\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  </Paper>\n)\n\nexport default Banner\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  weUseCookiesToAnalyzeOurTraffic: 'We use cookies to analyze our traffic.',\n  agree: 'Agree',\n  cancel: 'Cancel',\n})\n","import { v4 } from 'uuid'\n\nconst cookieDialogKey = v4()\n\nexport default cookieDialogKey\n","import { v4 } from 'uuid'\n\nconst reloadNotToAcceptCookiesBannerKey = v4()\n\nexport default reloadNotToAcceptCookiesBannerKey\n","import { useRecoilCallback } from 'recoil'\nimport { v4 } from 'uuid'\n\nimport bannersState from '~/atoms/bannersState'\nimport { Props as BannerProps } from '~/components/Banner'\nimport currentBannerState from '~/selectors/currentBannerState'\n\ntype BannerElement = React.ReactElement<BannerProps, React.ComponentType<BannerProps>>\n\ninterface ShowOptions {\n  key?: string\n  replaceable?: boolean\n}\n\ninterface HideOptions {\n  key?: string\n  safe?: boolean // no failures if true\n}\n\nconst useBanner = () => {\n  const show = useRecoilCallback(({ set }) => (banner: BannerElement, options?: ShowOptions) => {\n    const key = options?.key ?? v4()\n    const replaceable = options?.replaceable ?? false\n\n    set(currentBannerState, {\n      banner,\n      key,\n      replaceable,\n    })\n\n    return key\n  })\n\n  const hide = useRecoilCallback(({ set }) => (options?: HideOptions) => {\n    const key = options?.key\n    const safe = options?.safe ?? false\n\n    if (key === undefined) {\n      set(currentBannerState, (currentBanner) => {\n        if (currentBanner === null && !safe) {\n          throw new Error('No banner found.')\n        }\n\n        return null\n      })\n    } else {\n      set(bannersState, (banners) => {\n        const i = banners.findIndex((banner) => banner.key === key)\n\n        if (i === -1 && !safe) {\n          throw new Error('No banner found.')\n        }\n\n        if (i !== -1) {\n          return [\n            ...banners.slice(0, i),\n            ...banners.slice(i + 1),\n          ]\n        }\n\n        return banners\n      })\n    }\n  })\n\n  return { show, hide }\n}\n\nexport default useBanner\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-components-App-SettingsPage-classes__ListItemSecondaryActionIsLocaleSelect--ZS3mx {\\n  padding-inline-end: 104.46666667px; /* 元々の値 (48px) + LocaleSelect の最大幅 (locale: English) (98.46666667px) - Checkbox の幅 (42px) */\\n}\\n\\n.src-components-App-SettingsPage-classes__ListItemSecondaryActionIsRadioGroup3--bASGr {\\n  padding-inline-end: 132px; /* 元々の値 (48px) + RadioGroup>Radio*3 の幅 (126px) - Checkbox の幅 (42px) */\\n}\\n\\n.src-components-App-SettingsPage-classes__ListItemSecondaryActionIsSwitch--QKCGG {\\n  padding-inline-end: 64px; /* 元々の値 (48px) + Switch の幅 (58px) - Checkbox の幅 (42px) */\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/App/SettingsPage/classes.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,kCAAkC,EAAE,2FAA2F;AACjI;;AAEA;EACE,yBAAyB,EAAE,qEAAqE;AAClG;;AAEA;EACE,wBAAwB,EAAE,wDAAwD;AACpF\",\"sourcesContent\":[\".ListItemSecondaryActionIsLocaleSelect {\\n  padding-inline-end: 104.46666667px; /* 元々の値 (48px) + LocaleSelect の最大幅 (locale: English) (98.46666667px) - Checkbox の幅 (42px) */\\n}\\n\\n.ListItemSecondaryActionIsRadioGroup3 {\\n  padding-inline-end: 132px; /* 元々の値 (48px) + RadioGroup>Radio*3 の幅 (126px) - Checkbox の幅 (42px) */\\n}\\n\\n.ListItemSecondaryActionIsSwitch {\\n  padding-inline-end: 64px; /* 元々の値 (48px) + Switch の幅 (58px) - Checkbox の幅 (42px) */\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"ListItemSecondaryActionIsLocaleSelect\": \"src-components-App-SettingsPage-classes__ListItemSecondaryActionIsLocaleSelect--ZS3mx\",\n\t\"ListItemSecondaryActionIsRadioGroup3\": \"src-components-App-SettingsPage-classes__ListItemSecondaryActionIsRadioGroup3--bASGr\",\n\t\"ListItemSecondaryActionIsSwitch\": \"src-components-App-SettingsPage-classes__ListItemSecondaryActionIsSwitch--QKCGG\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["atom","key","default","document","fullscreenElement","effects_UNSTABLE","onSet","newFullScreen","Error","documentElement","requestFullscreen","exitFullscreen","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","undefined","defineMessages","settings","general","language","appearance","theme","useLightTheme","useDarkTheme","useDeviceTheme","fullScreen","securityAndPrivacy","acceptCookies","aPageReloadIsRequiredForTheConfigurationChangesToTakeEffect","reload","dontReload","languageSettingId","v4","themeSettingId","fullscreenSettingId","acceptCookiesSettingId","createPage","formatMessage","useIntl","gtmContainerId","useInjection","get","gtm","useGtm","banner","useBanner","appearanceTheme","setAppearanceTheme","useRecoilState","appearanceThemeState","setFullScreen","fullScreenState","cookieConsentObtained","setCookieConsentObtained","cookieConsentObtainedState","defaultDark","useContext","DefaultDarkContext","shouldBePresent","handleFullscreenchange","useCallback","useEffect","addEventListener","removeEventListener","handleAppearanceThemeChange","_event","handleFullScreenChange","checked","handleReload","location","handleDontReload","hide","reloadNotToAcceptCookiesBannerKey","handleAcceptCookiesChange","install","cookieDialogKey","safe","show","Banner","leading","Avatar","Security","text","messages","actions","Button","variant","color","onClick","Helmet","title","Grid","container","item","xs","sm","md","lg","xl","List","subheader","ListSubheader","ListItem","classes","secondaryAction","ListItemText","primary","id","ListItemSecondaryAction","LocaleSelect","hiddenLabel","FormControlProps","RadioGroup","row","name","value","onChange","Tooltip","arrow","Radio","icon","Brightness7","checkedIcon","Brightness4","BrightnessAuto","disabled","fullscreenEnabled","Switch","secondary","obtainedCookieConsentBannerMessages","isMobile","Bowser","navigator","userAgent","is","square","elevation","display","flexWrap","alignItems","my","ml","alignSelf","flexGrow","gridColumnGap","gridRowGap","mt","mb","mr","mx","weUseCookiesToAnalyzeOurTraffic","agree","cancel","useRecoilCallback","set","replaceable","currentBannerState","currentBanner","bannersState","banners","i","findIndex","slice","___CSS_LOADER_EXPORT___","push","module","locals"],"sourceRoot":""}