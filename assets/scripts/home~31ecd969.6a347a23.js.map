{"version":3,"sources":["webpack:///./node_modules/react-intl/lib/components/createFormattedComponent.js","webpack:///./node_modules/react-intl/lib/index.js","webpack:///./src/lib/identity.ts","webpack:///./src/lib/guards/commonGuards.ts","webpack:///./src/components/Nav/classes.css","webpack:///./src/lib/languageNameSolver/index.ts","webpack:///./src/components/LocaleSelect/messages.ts","webpack:///./src/components/LocaleSelect/index.tsx","webpack:///./src/lib/components/Link/index.tsx","webpack:///./src/lib/components/MenuItemLink/index.tsx","webpack:///./src/components/Nav/messages.ts","webpack:///./src/components/Nav/index.tsx","webpack:///./src/lib/components/ErrorBoundary/index.ts","webpack:///./src/templates/PageTemplate/index.tsx","webpack:///./node_modules/react-intl/lib/components/useIntl.js","webpack:///./node_modules/@material-ui/core/esm/Button/Button.js","webpack:///./src/lib/components/FormattedTimeOfDay/index.tsx","webpack:///./src/components/CurrentTimeOfDay/index.tsx","webpack:///./src/components/SetClockButton/messages.ts","webpack:///./src/components/SetClockButton/index.tsx","webpack:///./src/components/Today/index.tsx","webpack:///./src/components/App/HomePage/messages.ts","webpack:///./src/components/App/HomePage/index.tsx"],"names":["identity","it","isOneOf","options","input","some","option","optional","isT","undefined","isObject","Object","values","every","isTag","tag","tagNativeNameMap","getNativeNameByTag","defineMessages","languages","LocaleSelect","classes","FormControlProps","locale","selectLocale","useState","labelWidth","setLabelWidth","inputId","useMemo","v4","theme","useTheme","variant","props","MuiFormControl","rootClassName","classnames","root","className","labelClassName","label","inputClassName","selectIconClassName","selectIcon","inputUnderlineClassName","inputUnderline","inputLabel","useCallback","node","offsetWidth","handleChange","event","target","value","useContext","IntlProviderContext","availableLocales","messages","icon","standard","underline","outlined","filled","map","availableLocale","i","mapStateToProps","localeSelector","mapDispatchToProps","connect","isTypographyColor","RouterLinkWithRef","React","forwardRef","ref","Link","color","restProps","console","warn","typed","Component","MenuItemLink","menuItem","to","button","innerRef","menuItemProps","LinkWithRef","linkProps","link","home","chess","counter","info","reminder","Nav","anchorEl","setAnchorEl","openMenu","currentTarget","closeMenu","Spacer","LocaleSelectLabel","LocaleSelectInput","LocaleSelectSelectIcon","LocaleSelectInputUnderline","ErrorBoundary","state","hasError","renderError","children","error","getDerivedStateFromError","PageTemplate","Error","String","TypeError","createPage","Body","FormattedTimeOfDay","CurrentTimeOfDay","now","io","setTheClock","SetClockButton","updateNow","Today","helloWorld","HomePage","useIntl","formatMessage"],"mappings":"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D,QACE,8BAAC,IAAD,EAAWA,KAAX,CADF,CADoH;AAAA,GAAV;AAAA,CAArG;AAMQiF,oFAAf,E;;;;;;;;ACzCA;AAAA;AAAA;AAAA;AAAA;AAAmC;AACI;AACS;AACjC;AACf,iBAAiB,wDAAU,CAAC,2DAAO;AACnC,IAAI,2EAAoB;AACxB;AACA;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0F;AAChC;AAChC;AACS;AACX;AACsB;AACI;AACX;AACM;AACtC;AACP;AACA;AACA,UAAU,0FAAQ,GAAG;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,yBAAyB,6EAAI;AAC7B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,yBAAyB,6EAAI;AAC7B;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,yBAAyB,6EAAI;AAC7B;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,kCAAkC,6EAAI;AACtC;AACA;AACA,yBAAyB,6EAAI;AAC7B;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,kCAAkC,6EAAI;AACtC;AACA;AACA,yBAAyB,6EAAI;AAC7B;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL,gEAAgE,KAAK;AACrE;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL;AACA,oBAAoB;;AAEpB,8DAA8D,KAAK;AACnE,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,iBAAiB;;AAEjB;AACA,iBAAiB;;AAEjB,yDAAyD,KAAK;AAC9D;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,4CAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,0GAAwB;;AAEtC,mCAAmC,4CAAK;AACxC,eAAe,4DAAI,8CAA8C,yEAAU;AAC3E,GAAG;AACH,+BAA+B,4CAAK;AACpC,eAAe,4DAAI,4CAA4C,yEAAU;AACzE,GAAG;AACH,SAAS,4CAAK,eAAe,2DAAU,EAAE,0FAAQ;AACjD,eAAe,4DAAI,kJAAkJ,yEAAU,2EAA2E,yEAAU,gCAAgC,yEAAU;AAC9S;AACA;AACA;AACA,2BAA2B,4DAAI;AAC/B;AACA;AACA,GAAG,UAAU,4CAAK;AAClB;AACA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","file":"assets/scripts/home~31ecd969.6a347a23.js","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { invariantIntlContext } from '../utils';\nimport { Context } from './injectIntl';\nvar DisplayName;\n(function (DisplayName) {\n    DisplayName[\"formatDate\"] = \"FormattedDate\";\n    DisplayName[\"formatTime\"] = \"FormattedTime\";\n    DisplayName[\"formatNumber\"] = \"FormattedNumber\";\n    DisplayName[\"formatList\"] = \"FormattedList\";\n    // Note that this DisplayName is the locale display name, not to be confused with\n    // the name of the enum, which is for React component display name in dev tools.\n    DisplayName[\"formatDisplayName\"] = \"FormattedDisplayName\";\n})(DisplayName || (DisplayName = {}));\nvar DisplayNameParts;\n(function (DisplayNameParts) {\n    DisplayNameParts[\"formatDate\"] = \"FormattedDateParts\";\n    DisplayNameParts[\"formatTime\"] = \"FormattedTimeParts\";\n    DisplayNameParts[\"formatNumber\"] = \"FormattedNumberParts\";\n    DisplayNameParts[\"formatList\"] = \"FormattedListParts\";\n})(DisplayNameParts || (DisplayNameParts = {}));\nexport const FormattedNumberParts = props => (React.createElement(Context.Consumer, null, (intl) => {\n    invariantIntlContext(intl);\n    const { value, children } = props, formatProps = __rest(props, [\"value\", \"children\"]);\n    return children(intl.formatNumberToParts(value, formatProps));\n}));\nFormattedNumberParts.displayName = 'FormattedNumberParts';\nexport function createFormattedDateTimePartsComponent(name) {\n    const ComponentParts = props => (React.createElement(Context.Consumer, null, (intl) => {\n        invariantIntlContext(intl);\n        const { value, children } = props, formatProps = __rest(props, [\"value\", \"children\"]);\n        const date = typeof value === 'string' ? new Date(value || 0) : value;\n        const formattedParts = name === 'formatDate'\n            ? intl.formatDateToParts(date, formatProps)\n            : intl.formatTimeToParts(date, formatProps);\n        return children(formattedParts);\n    }));\n    ComponentParts.displayName = DisplayNameParts[name];\n    return ComponentParts;\n}\nexport function createFormattedComponent(name) {\n    const Component = props => (React.createElement(Context.Consumer, null, (intl) => {\n        invariantIntlContext(intl);\n        const { value, children } = props, formatProps = __rest(props, [\"value\", \"children\"]);\n        // TODO: fix TS type definition for localeMatcher upstream\n        const formattedValue = intl[name](value, formatProps);\n        if (typeof children === 'function') {\n            return children(formattedValue);\n        }\n        const Text = intl.textComponent || React.Fragment;\n        return React.createElement(Text, null, formattedValue);\n    }));\n    Component.displayName = DisplayName[name];\n    return Component;\n}\n","export { defineMessages } from '@formatjs/macro';\nimport { createFormattedComponent, createFormattedDateTimePartsComponent, } from './components/createFormattedComponent';\nexport { default as injectIntl, Provider as RawIntlProvider, Context as IntlContext, } from './components/injectIntl';\nexport { default as useIntl } from './components/useIntl';\nexport { default as IntlProvider, createIntl } from './components/provider';\n// IMPORTANT: Explicit here to prevent api-extractor from outputing `import('./types').CustomFormatConfig`\nexport const FormattedDate = createFormattedComponent('formatDate');\nexport const FormattedTime = createFormattedComponent('formatTime');\nexport const FormattedNumber = createFormattedComponent('formatNumber');\nexport const FormattedList = createFormattedComponent('formatList');\nexport const FormattedDisplayName = createFormattedComponent('formatDisplayName');\nexport const FormattedDateParts = createFormattedDateTimePartsComponent('formatDate');\nexport const FormattedTimeParts = createFormattedDateTimePartsComponent('formatTime');\nexport { FormattedNumberParts } from './components/createFormattedComponent';\nexport { default as FormattedRelativeTime } from './components/relative';\nexport { default as FormattedPlural } from './components/plural';\nexport { default as FormattedMessage } from './components/message';\nexport { default as FormattedHTMLMessage } from './components/html-message';\nexport { createIntlCache } from './utils';\n","const identity = <T extends U, U>(it: T): U => it\n\nexport default identity\n","import identity from '~/lib/identity'\n\nexport const isOneOf = <T extends readonly Json[]>(...options: T) => (input: unknown): input is T[number] => options.some((option) => option === input)\n\nexport const optional = <A extends unknown, T extends A>(isT: (input: A) => input is T) => (input: A | undefined): input is T | undefined => {\n  if (input === undefined) {\n    return true\n  }\n\n  return isT(input)\n}\n\nexport const isObject = <A extends B, T extends A, B = A>(isT: (input: B) => Record<keyof A, boolean>) => (input: A): input is T => {\n  return Object.values<boolean>(isT(input)).every(identity)\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spacer\":\"src-components-Nav-classes__Spacer--36ovl\",\"LocaleSelectLabel\":\"src-components-Nav-classes__LocaleSelectLabel--3h3DV\",\"LocaleSelectInput\":\"src-components-Nav-classes__LocaleSelectInput--3oNu1\",\"LocaleSelectSelectIcon\":\"src-components-Nav-classes__LocaleSelectSelectIcon--2AyFk\",\"LocaleSelectInputUnderline\":\"src-components-Nav-classes__LocaleSelectInputUnderline--2WFrx\"};\n    if(module.hot) {\n      // 1584030947212\n      var cssReload = require(\"/home/runner/work/react-app-prototype/react-app-prototype/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"hmr\":true,\"locals\":true});\n      module.hot.dispose(cssReload);\n      \n    }\n  ","import tagNativeNameMap from './__data__/tagNativeNameMap.json'\n\nexport type Tag = keyof typeof tagNativeNameMap\n\nexport function isTag(tag: unknown): tag is Tag {\n  return typeof tag === 'string' && tag in tagNativeNameMap\n}\n\nexport function getNativeNameByTag(tag: Tag) {\n  return tagNativeNameMap[tag]\n}\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  languages: 'Languages',\n})\n","import classnames from 'classnames'\nimport React, { useCallback, useContext, useMemo, useState } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { connect } from 'react-redux'\nimport { v4 } from 'uuid'\n\nimport FilledInput from '@material-ui/core/FilledInput'\nimport FormControl, { FormControlProps } from '@material-ui/core/FormControl'\nimport Input from '@material-ui/core/Input'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport OutlinedInput from '@material-ui/core/OutlinedInput'\nimport Select, { SelectProps } from '@material-ui/core/Select'\nimport { useTheme } from '@material-ui/core/styles'\n\nimport IntlProviderContext from '~/lib/contexts/IntlProviderContext'\nimport { Tag, getNativeNameByTag, isTag } from '~/lib/languageNameSolver'\nimport { State } from '~/redux'\nimport { selectLocale } from '~/redux/modules/localeSelector'\nimport messages from './messages'\n\ninterface OwnProps {\n  classes?: {\n    root?: string\n    label?: string\n    input?: string\n    selectIcon?: string\n    inputUnderline?: string\n  } | null\n  FormControlProps?: FormControlProps | null\n}\n\ninterface StateProps {\n  locale: Tag\n}\n\ninterface DispatchProps {\n  selectLocale(locale: Tag): void\n}\n\ntype Props =\n  & OwnProps\n  & StateProps\n  & DispatchProps\n\nexport /* for testing */ const LocaleSelect: React.FunctionComponent<Props> = ({ classes, FormControlProps, locale, selectLocale }) => {\n  const [labelWidth, setLabelWidth] = useState<number>(0)\n  const inputId = useMemo(v4, [])\n  const theme = useTheme()\n\n  // NOTE: Fortunately, FormControl is nothing but FormControl.\n  const variant = useMemo(() => FormControlProps?.variant ?? theme?.props?.MuiFormControl?.variant ?? 'standard', [FormControlProps?.variant, theme?.props?.MuiFormControl?.variant])\n\n  const rootClassName = useMemo(() => classnames(classes?.root, FormControlProps?.className), [classes?.root, FormControlProps?.className])\n  const labelClassName = useMemo(() => classnames(classes?.label), [classes?.label])\n  const inputClassName = useMemo(() => classnames(classes?.input), [classes?.input])\n  const selectIconClassName = useMemo(() => classnames(classes?.selectIcon), [classes?.selectIcon])\n  const inputUnderlineClassName = useMemo(() => classnames(classes?.inputUnderline), [classes?.inputUnderline])\n\n  const inputLabel = useCallback((node: HTMLLabelElement | null) => { // TODO: type\n    if (node !== null) {\n      setLabelWidth(node.offsetWidth)\n    }\n  }, [])\n\n  const handleChange = useCallback<NonNullable<SelectProps['onChange']>>((event) => {\n    if (isTag(event.target.value)) {\n      selectLocale(event.target.value)\n    }\n  }, [])\n\n  const { availableLocales } = useContext(IntlProviderContext)\n\n  return (\n    <FormControl\n      { ...FormControlProps }\n      className={ rootClassName } // NOTE: override FormControlProps.className\n    >\n      <InputLabel className={ labelClassName } ref={ inputLabel } htmlFor={ inputId }>\n        <FormattedMessage { ...messages.languages } />\n      </InputLabel>\n      <Select\n        classes={ {\n          icon: selectIconClassName,\n        } }\n        native\n        labelWidth={ labelWidth }\n        value={ locale }\n        onChange={ handleChange }\n        id={ inputId }\n        inputProps={ { 'data-testid': 'localeSelect' } }\n        input={ {\n          standard: (\n            <Input\n              className={ inputClassName }\n              classes={ {\n                underline: inputUnderlineClassName,\n              } }\n            />\n          ),\n          outlined: <OutlinedInput className={ inputClassName } labelWidth={ labelWidth } />,\n          filled: <FilledInput className={ inputClassName } />,\n        }[variant] }\n      >\n        { availableLocales?.map((availableLocale, i) => (\n          <option key={ i } value={ availableLocale }>{ getNativeNameByTag(availableLocale) }</option>\n        )) }\n      </Select>\n    </FormControl>\n  )\n}\n\n// connect\n\nconst mapStateToProps = ({ localeSelector: { locale } }: State): StateProps => ({\n  locale,\n})\n\nconst mapDispatchToProps: DispatchProps = {\n  selectLocale,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LocaleSelect)\n","import React from 'react'\nimport { Link as RouterLink, LinkProps as RouterLinkProps } from 'react-router-dom'\n\nimport MuiLink, { LinkProps as MuiLinkProps } from '@material-ui/core/Link'\n\nimport { isOneOf, optional } from '~/lib/guards/commonGuards'\nimport typed from '~/lib/typed'\n\nexport type Props =\n  & RouterLinkProps\n  & Alt.Omit<MuiLinkProps, 'color' | 'ref'>\n\nconst isTypographyColor = optional(isOneOf('initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error'))\n\n// TODO: delete this; See also https://material-ui.com/guides/composition/#link\nconst RouterLinkWithRef = React.forwardRef<HTMLAnchorElement, RouterLinkProps>((props, ref) => (\n  <RouterLink innerRef={ ref } { ...props } />\n))\n\nexport default class Link extends React.Component<Props> {\n  public render() {\n    const { color, ...restProps } = this.props\n\n    if (!isTypographyColor(color)) {\n      console.warn(typed<[string]>`${ color } is not a Material-UI Typography color.`) // tslint:disable-line:no-console\n\n      return (\n        <MuiLink component={ RouterLinkWithRef } { ...restProps } />\n      )\n    }\n\n    return (\n      <MuiLink component={ RouterLinkWithRef } color={ color } { ...restProps } />\n    )\n  }\n}\n","import * as React from 'react'\n\nimport MenuItem, { MenuItemProps } from '@material-ui/core/MenuItem'\n\nimport Link, { Props as LinkProps } from '~/lib/components/Link'\n\ntype Props = MenuItemProps<typeof Link, { button?: true }>\n\nconst MenuItemLink: React.FunctionComponent<Props> = React.forwardRef<Link, React.PropsWithoutRef<Props>>(({ to, button, innerRef, ...menuItemProps }, menuItem) => {\n  // See https://material-ui.com/guides/composition/#link\n  const LinkWithRef = React.forwardRef<Link, LinkProps>((linkProps, link) => (\n    <Link ref={ link } innerRef={ innerRef } color=\"inherit\" underline=\"none\" { ...linkProps } />\n  ))\n\n  return (\n    <MenuItem button component={ LinkWithRef } to={ to } ref={ menuItem } { ...menuItemProps } />\n  )\n})\n\nexport default MenuItemLink\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  home: 'home',\n  chess: 'chess',\n  counter: 'counter',\n  info: 'info',\n  reminder: 'reminder',\n})\n","// import classnames from 'classnames'\nimport React, { useCallback, useState } from 'react'\nimport { FormattedMessage } from 'react-intl'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Menu from '@material-ui/core/Menu'\nimport Toolbar from '@material-ui/core/Toolbar'\n// import { createStyles, makeStyles } from '@material-ui/core/styles'\nimport MenuIcon from '@material-ui/icons/Menu'\n\nimport LocaleSelect from '~/components/LocaleSelect' // TODO\nimport MenuItemLink from '~/lib/components/MenuItemLink'\nimport classes from './classes.css'\nimport messages from './messages'\n\nconst Nav: React.FunctionComponent = () => {\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null)\n\n  const openMenu = useCallback<React.MouseEventHandler<HTMLButtonElement>>((event) => {\n    setAnchorEl(event.currentTarget)\n  }, [])\n\n  const closeMenu = useCallback(() => {\n    setAnchorEl(null)\n  }, [])\n\n  return (\n    <>\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" onClick={ openMenu }>\n            <MenuIcon />\n          </IconButton>\n          <div className={ classes.Spacer } />\n          <LocaleSelect\n            classes={ {\n              label: classes.LocaleSelectLabel,\n              input: classes.LocaleSelectInput,\n              selectIcon: classes.LocaleSelectSelectIcon,\n              inputUnderline: classes.LocaleSelectInputUnderline,\n            } }\n            FormControlProps={ {\n              variant: 'filled',\n            } }\n          />\n        </Toolbar>\n      </AppBar>\n      <Menu open={ anchorEl !== null } anchorEl={ anchorEl } onClose={ closeMenu }>\n        <MenuItemLink to=\"/\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.home } />\n        </MenuItemLink>\n        <MenuItemLink to=\"/chess\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.chess } />\n        </MenuItemLink>\n        <MenuItemLink to=\"/counter\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.counter } />\n        </MenuItemLink>\n        <MenuItemLink to=\"/info\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.info } />\n        </MenuItemLink>\n        <MenuItemLink to=\"/reminder\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.reminder } />\n        </MenuItemLink>\n      </Menu>\n    </>\n  )\n}\n\nexport default Nav\n","import React from 'react'\n\ninterface Props {\n  /**\n   * @param children that throws {error}\n   */\n  renderError(error: unknown, children: React.ReactNode): React.ReactNode\n}\n\ninterface State {\n  hasError: boolean\n  error?: unknown\n}\n\nclass ErrorBoundary extends React.Component<Props, State> {\n\n  // NOTE: https://github.com/DefinitelyTyped/DefinitelyTyped/blob/826ce0f1ce1d1887d199986283630d6f63075ad5/types/react/index.d.ts#L419 にも関わらず、初期化されていない state は null であるため、初期化を強制するためにプロパティ宣言を行う。\n  public state: Readonly<State> = {\n    hasError: false,\n  }\n\n  public static getDerivedStateFromError = (error: unknown) => ({\n    hasError: true,\n    error,\n  })\n\n  public render() {\n    const { renderError, children } = this.props\n    const { hasError, error } = this.state\n\n    if (hasError) {\n      return renderError(error, children)\n    }\n\n    return children\n  }\n}\n\nexport default ErrorBoundary\n","import React, { useCallback } from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\n\nimport Nav from '~/components/Nav'\nimport ErrorBoundary from '~/lib/components/ErrorBoundary'\nimport typed from '~/lib/typed'\n\ninterface PageTemplateProps {\n  children: React.ReactElement<BodyProps, React.ComponentType<BodyProps>>\n}\n\ntype BodyProps = PageProps\n\ntype PageProps =\n  & RouteComponentProps\n\nconst PageTemplate: React.FunctionComponent<PageTemplateProps> = ({ children }) => {\n  const renderError = useCallback((error: unknown) => {\n    if (error instanceof Error) {\n      return typed<[string]>`${ String(error) }`\n    }\n\n    throw new TypeError(typed<[string]>`${ String(error) } is not an error.`)\n  }, [])\n\n  return (\n    <>\n      <Nav />\n      <ErrorBoundary renderError={ renderError }>\n        { children }\n      </ErrorBoundary>\n    </>\n  )\n}\n\nexport const createPage: (Body: React.FunctionComponent<BodyProps>) => React.FunctionComponent<PageProps> = (Body) => (props) => (\n  <PageTemplate>\n    <Body { ...props } />\n  </PageTemplate>\n)\n\nexport default PageTemplate\n","import { useContext } from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nexport default function useIntl() {\n    const intl = useContext(Context);\n    invariantIntlContext(intl);\n    return intl;\n}\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      minWidth: 64,\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n        duration: theme.transitions.duration.short\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }),\n\n    /* Styles applied to the span element that wraps the children. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      padding: '6px 8px'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"primary\"`. */\n    textPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"secondary\"`. */\n    textSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      padding: '5px 15px',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabledBackground)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(fade(theme.palette.primary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.primary.main),\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(fade(theme.palette.secondary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.secondary.main),\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabled)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      color: theme.palette.getContrastText(theme.palette.grey[300]),\n      backgroundColor: theme.palette.grey[300],\n      boxShadow: theme.shadows[2],\n      '&:hover': {\n        backgroundColor: theme.palette.grey.A100,\n        boxShadow: theme.shadows[4],\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          boxShadow: theme.shadows[2],\n          backgroundColor: theme.palette.grey[300]\n        },\n        '&$disabled': {\n          backgroundColor: theme.palette.action.disabledBackground\n        }\n      },\n      '&$focusVisible': {\n        boxShadow: theme.shadows[6]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[8]\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled,\n        boxShadow: theme.shadows[0],\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"primary\"`. */\n    containedPrimary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"secondary\"`. */\n    containedSecondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `disableElevation={true}`. */\n    disableElevation: {\n      boxShadow: 'none',\n      '&:hover': {\n        boxShadow: 'none'\n      },\n      '&$focusVisible': {\n        boxShadow: 'none'\n      },\n      '&:active': {\n        boxShadow: 'none'\n      },\n      '&$disabled': {\n        boxShadow: 'none'\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit',\n      borderColor: 'currentColor'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"text\"`. */\n    textSizeSmall: {\n      padding: '4px 5px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"text\"`. */\n    textSizeLarge: {\n      padding: '8px 11px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"outlined\"`. */\n    outlinedSizeSmall: {\n      padding: '3px 9px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"outlined\"`. */\n    outlinedSizeLarge: {\n      padding: '7px 21px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"contained\"`. */\n    containedSizeSmall: {\n      padding: '4px 10px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"contained\"`. */\n    containedSizeLarge: {\n      padding: '8px 22px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {},\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the startIcon element if supplied. */\n    startIcon: {\n      display: 'inherit',\n      marginRight: 8,\n      marginLeft: -4,\n      '&$iconSizeSmall': {\n        marginLeft: -2\n      }\n    },\n\n    /* Styles applied to the endIcon element if supplied. */\n    endIcon: {\n      display: 'inherit',\n      marginRight: -4,\n      marginLeft: 8,\n      '&$iconSizeSmall': {\n        marginRight: -2\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"small\"`. */\n    iconSizeSmall: {\n      '& > *:first-child': {\n        fontSize: 18\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"medium\"`. */\n    iconSizeMedium: {\n      '& > *:first-child': {\n        fontSize: 20\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"large\"`. */\n    iconSizeLarge: {\n      '& > *:first-child': {\n        fontSize: 22\n      }\n    }\n  };\n};\nvar Button = React.forwardRef(function Button(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableElevati = props.disableElevation,\n      disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      endIconProp = props.endIcon,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      startIconProp = props.startIcon,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'button' : _props$type,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"endIcon\", \"focusVisibleClassName\", \"fullWidth\", \"size\", \"startIcon\", \"type\", \"variant\"]);\n\n  var startIcon = startIconProp && React.createElement(\"span\", {\n    className: clsx(classes.startIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, startIconProp);\n  var endIcon = endIconProp && React.createElement(\"span\", {\n    className: clsx(classes.endIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, endIconProp);\n  return React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, classes[variant], className, color === 'inherit' ? classes.colorInherit : color !== 'default' && classes[\"\".concat(variant).concat(capitalize(color))], size !== 'medium' && [classes[\"\".concat(variant, \"Size\").concat(capitalize(size))], classes[\"size\".concat(capitalize(size))]], disableElevation && classes.disableElevation, disabled && classes.disabled, fullWidth && classes.fullWidth),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref,\n    type: type\n  }, other), React.createElement(\"span\", {\n    className: classes.label\n  }, startIcon, children, endIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? Button.propTypes = {\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, no elevation is used.\n   */\n  disableElevation: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   * `disableRipple` must also be true.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * Element placed after the children.\n   */\n  endIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * If `true`, the button will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n\n  /**\n   * Element placed before the children.\n   */\n  startIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['text', 'outlined', 'contained'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButton'\n})(Button);","import React from 'react'\nimport { CustomFormatConfig, FormattedTime } from 'react-intl'\n\ntype Props =\n  & Alt.Omit<Intl.DateTimeFormatOptions, /* 'dateStyle' |  */'weekday' | 'era' | 'year' | 'month' | 'day'>\n  & CustomFormatConfig\n  & {\n      value: string | number | Date | undefined\n    }\n\nconst FormattedTimeOfDay: React.FunctionComponent<Props> = (props) => (\n  <FormattedTime\n    { ...props }\n    // dateStyle={ undefined }\n    weekday={ undefined }\n    era={ undefined }\n    year={ undefined }\n    month={ undefined }\n    day={ undefined }\n  />\n)\n\nexport default FormattedTimeOfDay\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Typography from '@material-ui/core/Typography'\n\nimport FormattedTimeOfDay from '~/lib/components/FormattedTimeOfDay'\nimport { State } from '~/redux'\n\ninterface StateProps {\n  now: Date\n}\n\ntype Props =\n  & StateProps\n\nconst CurrentTimeOfDay: React.FunctionComponent<Props> = ({ now }) => (\n  <Typography>\n    <FormattedTimeOfDay value={ now } format=\"medium\" />\n  </Typography>\n)\n\n// connect\n\nconst mapStateToProps = ({ io: { now } }: State): StateProps => ({\n  now,\n})\n\nexport default connect(mapStateToProps)(CurrentTimeOfDay)\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  setTheClock: 'Set the clock',\n})\n","import React from 'react'\nimport { FormattedMessage} from 'react-intl'\nimport { connect } from 'react-redux'\n\nimport Button from '@material-ui/core/Button'\n\nimport { updateNow } from '~/redux/modules/io'\nimport messages from './messages'\n\ninterface DispatchProps {\n  updateNow(): void\n}\n\ntype Props =\n  & DispatchProps\n\nconst SetClockButton: React.FunctionComponent<Props> = ({ updateNow }) => (\n  <Button onClick={ updateNow }>\n    <FormattedMessage { ...messages.setTheClock } />\n  </Button>\n)\n\n// connect\n\nconst mapDispatchToProps: DispatchProps = {\n  updateNow,\n}\n\nexport default connect(null, mapDispatchToProps)(SetClockButton)\n","import React from 'react'\nimport { FormattedDate } from 'react-intl'\nimport { connect } from 'react-redux'\n\nimport Typography from '@material-ui/core/Typography'\n\nimport { State } from '~/redux'\n\ninterface StateProps {\n  now: Date\n}\n\ntype Props =\n  & StateProps\n\nconst Today: React.FunctionComponent<Props> = ({ now }) => (\n  <Typography>\n    <FormattedDate value={ now } format=\"medium\" />\n  </Typography>\n)\n\n// connect\n\nconst mapStateToProps = ({ io: { now } }: State): StateProps => ({\n  now,\n})\n\nexport default connect(mapStateToProps)(Today)\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  home: 'home',\n  helloWorld: 'Hello, world!',\n})\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { FormattedMessage,  FormattedNumber, useIntl } from 'react-intl'\n\nimport Typography from '@material-ui/core/Typography'\n\nimport CurrentTimeOfDay from '~/components/CurrentTimeOfDay'\nimport SetClockButton from '~/components/SetClockButton'\nimport Today from '~/components/Today'\nimport { createPage } from '~/templates/PageTemplate'\nimport messages from './messages'\n\nconst HomePage: React.FunctionComponent = () => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <>\n      <Helmet title={ formatMessage(messages.home) } />\n      <Typography>\n        <FormattedMessage { ...messages.helloWorld } />\n      </Typography>\n      <Typography>\n        <FormattedNumber format=\"usd\" value={ 100 } />\n      </Typography>\n      <Today />\n      <CurrentTimeOfDay />\n      <SetClockButton />\n    </>\n  )\n}\n\nexport default createPage(HomePage)\n"],"sourceRoot":""}