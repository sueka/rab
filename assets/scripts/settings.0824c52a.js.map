{"version":3,"sources":["webpack://react-app-prototype/./src/components/DarkSwitch/classes.css?9ace","webpack://react-app-prototype/./src/components/DarkSwitch/messages.ts","webpack://react-app-prototype/./src/components/DarkSwitch/index.tsx","webpack://react-app-prototype/./src/components/App/SettingsPage/messages.ts","webpack://react-app-prototype/./src/components/App/SettingsPage/index.tsx","webpack://react-app-prototype/./src/components/DarkSwitch/classes.css"],"names":["options","defineMessages","light","dark","useContext","ThemeProviderContext","setDark","Error","handleChange","useCallback","_event","checked","Grid","container","alignItems","component","classes","root","item","Typography","messages","Switch","onChange","settings","createPage","formatMessage","useIntl","Helmet","title","___CSS_LOADER_EXPORT___","push","module","id","locals"],"mappings":"uSAGIA,EAAU,CAEd,OAAiB,OACjB,WAAoB,GAMpB,GAJa,IAAI,IAASA,GAIX,YAAkB,I,WCVjC,GAAeC,QAAe,CAC5BC,MAAO,CAAF,oDAAE,SACPC,KAAM,CAAF,mDAAE,UC4CR,EAtCmB,WAAM,OACGC,gBAAWC,KAA7BF,EADe,EACfA,KAAMG,EADS,EACTA,QAEd,GAAY,MAARH,GAA2B,MAAXG,EAClB,MAAM,IAAIC,MAGZ,IAAMC,GAAeC,kBAAY,SAACC,EAAQC,GACxCL,EAAQK,KACP,CAACL,IAEJ,OACE,gBAACM,EAAA,EAAD,CACEC,WAAS,EACTC,WAAW,SACXC,UAAU,QACVC,QAAU,CACRC,KAAMD,aACNH,UAAWG,wBAGb,gBAACJ,EAAA,EAAD,CAAMM,MAAI,GACR,gBAACC,EAAA,EAAD,CAAYJ,UAAU,QACpB,gBAAC,IAAsBK,EAASlB,SAGpC,gBAACU,EAAA,EAAD,CAAMM,MAAI,GACR,gBAACG,EAAA,EAAD,CAAQV,QAAUR,EAAOmB,SAAWd,KAEtC,gBAACI,EAAA,EAAD,CAAMM,MAAI,GACR,gBAACC,EAAA,EAAD,CAAYJ,UAAU,QACpB,gBAAC,IAAsBK,EAASjB,U,WCvC1C,GAAeF,QAAe,CAC5BsB,SAAU,CAAF,6DAAE,cCgBZ,GAAeC,QAXgB,WAAM,IAC3BC,GAAkBC,SAAlBD,cAER,OACE,gCACE,gBAACE,EAAA,EAAD,CAAQC,MAAQH,EAAcL,cAC9B,gBAAC,EAAD,W,sECXFS,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAOC,GAAI,qNAAsN,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,qDAAqD,MAAQ,GAAG,SAAW,4DAA4D,eAAiB,CAAC,kIAAkI,WAAa,MAElkBH,EAAwBI,OAAS,CAChC,WAAc,uDACd,oBAAuB,iEAExB","file":"assets/scripts/settings.0824c52a.js","sourcesContent":["import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js!./classes.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  light: 'Light',\n  dark: 'Dark',\n})\n","import Grid from '@material-ui/core/Grid'\nimport Switch from '@material-ui/core/Switch'\nimport Typography from '@material-ui/core/Typography'\nimport React, { useCallback, useContext } from 'react'\nimport { FormattedMessage } from 'react-intl'\n\nimport ThemeProviderContext from '~/contexts/ThemeProviderContext'\nimport classes from './classes.css'\nimport messages from './messages'\n\nconst DarkSwitch = () => {\n  const { dark, setDark } = useContext(ThemeProviderContext)\n\n  if (dark == null || setDark == null) {\n    throw new Error //\n  }\n\n  const handleChange = useCallback((_event, checked) => {\n    setDark(checked)\n  }, [setDark])\n\n  return (\n    <Grid\n      container\n      alignItems=\"center\"\n      component=\"label\"\n      classes={ {\n        root: classes.DarkSwitch,\n        container: classes.DarkSwitchContainer,\n      } }\n    >\n      <Grid item>\n        <Typography component=\"span\">\n          <FormattedMessage { ...messages.light } />\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Switch checked={ dark } onChange={ handleChange } />\n      </Grid>\n      <Grid item>\n        <Typography component=\"span\">\n          <FormattedMessage { ...messages.dark } />\n        </Typography>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default DarkSwitch\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  settings: 'Settings',\n})\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { useIntl } from 'react-intl'\n\nimport DarkSwitch from '~/components/DarkSwitch'\nimport { createPage } from '~/templates/PageTemplate'\nimport messages from './messages'\n\nconst SettingsPage: React.FC = () => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <>\n      <Helmet title={ formatMessage(messages.settings) } />\n      <DarkSwitch />\n    </>\n  )\n}\n\nexport default createPage(SettingsPage)\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-components-DarkSwitch-classes__DarkSwitch--2L8DC.src-components-DarkSwitch-classes__DarkSwitchContainer--2phtL {\\n  display: inline-flex; /* TODO: polyfill */\\n  display: inline flex;\\n  width: unset;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/DarkSwitch/classes.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,oBAAoB,EAAE,mBAAmB;EACzC,oBAAoB;EACpB,YAAY;AACd\",\"sourcesContent\":[\".DarkSwitch.DarkSwitchContainer {\\n  display: inline-flex; /* TODO: polyfill */\\n  display: inline flex;\\n  width: unset;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"DarkSwitch\": \"src-components-DarkSwitch-classes__DarkSwitch--2L8DC\",\n\t\"DarkSwitchContainer\": \"src-components-DarkSwitch-classes__DarkSwitchContainer--2phtL\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n"],"sourceRoot":""}