{"version":3,"file":"assets/scripts/qrCodeTools.67fc574f.js","mappings":"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","sources":["webpack://rap/./src/components/QrCodeDecoder/messages.ts","webpack://rap/./src/components/QrCodeDecoder/index.tsx","webpack://rap/./src/components/QrCodeEncoder/messages.ts","webpack://rap/./src/components/QrCodeEncoder/index.tsx","webpack://rap/./src/components/App/QrCodeToolsPage/messages.ts","webpack://rap/./src/components/App/QrCodeToolsPage/index.tsx","webpack://rap/./src/components/FileUpload/classes.css?bd7d","webpack://rap/./src/components/FileUpload/index.tsx","webpack://rap/./src/components/FileUpload/messages.ts","webpack://rap/./src/components/FileUpload/classes.css"],"sourcesContent":["import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  noFileSelected: 'No file selected.',\n  decodingFailed: 'Decoding failed.',\n})\n","import jsQR from 'jsqr'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { FormattedMessage } from 'react-intl'\n\nimport { shouldBePresent } from '~/asserters/commonAsserters'\nimport FileUpload from '~/components/FileUpload'\nimport messages from './messages'\n\nconst QrCodeDecoder: React.FC = () => {\n  const canvas = useMemo(() => document.createElement('canvas'), [])\n  const context = useMemo(() => canvas.getContext('2d'), [canvas])\n  const [files, setFiles] = useState<FileList>()\n  const [decoded, setDecoded] = useState<string>()\n\n  /// files[0] を src に持つ Image を ImageData に変換し、QR コードを生成する\n  const load = useCallback(({ currentTarget: image }) => {\n    shouldBePresent(context)\n\n    const height = image.height\n    const width = image.width\n\n    canvas.height = height\n    canvas.width = width\n\n    context.drawImage(image, 0, 0)\n\n    const imageData = context.getImageData(0, 0, width, height)\n\n    const qrcode = jsQR(imageData.data, width, height, {\n      inversionAttempts: 'dontInvert',\n    })\n\n    setDecoded(() => qrcode?.data)\n  }, [canvas, context])\n\n  const handleChange = useCallback<React.ChangeEventHandler<HTMLInputElement>>((event) => {\n    setFiles(event.target.files ?? undefined)\n\n    /// files[0] を Image に変換する\n    if (event.target.files === null || event.target.files.length === 0) {\n      return // do nothing\n    }\n\n    shouldBePresent(event.target.files[0])\n\n    const file = event.target.files[0]\n    const url = URL.createObjectURL(file)\n    const image = new Image\n\n    image.onload = load\n    image.src = url\n\n    URL.revokeObjectURL(url)\n  }, [load])\n\n  const resultMessage = useMemo(() => {\n    if (files === undefined || files.length === 0) {\n      return <FormattedMessage { ...messages.noFileSelected } />\n    }\n\n    if (decoded === undefined) {\n      return <FormattedMessage { ...messages.decodingFailed } />\n    }\n\n    return decoded\n  }, [files, decoded])\n\n  return (\n    <FileUpload\n      accept=\"image/*\"\n      resultMessage={ resultMessage }\n      onChange={ handleChange }\n    />\n  )\n}\n\nexport default QrCodeDecoder\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  errorCorrectionLevel: 'Error correction level',\n  maskPattern: 'Mask pattern',\n  default: 'Default',\n})\n","import Grid from '@material-ui/core/Grid'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Select, { SelectProps } from '@material-ui/core/Select'\nimport TextField, { TextFieldProps } from '@material-ui/core/TextField'\nimport QRCode, { QRCodeErrorCorrectionLevel, QRCodeMaskPattern } from 'qrcode'\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport { FormattedMessage, useIntl } from 'react-intl'\nimport { v4 } from 'uuid'\n\nimport { shouldBePresent } from '~/asserters/commonAsserters'\nimport { isOneOf } from '~/guards/commonGuards'\nimport messages from './messages'\n\ntype QrCodeEncoderProps = Pick<TextFieldProps, 'defaultValue'>\n\nconst errorCorrectionLevels: QRCodeErrorCorrectionLevel[] = ['L', 'M', 'Q', 'H']\nconst maskPatterns: QRCodeMaskPattern[] = [0, 1, 2, 3, 4, 5, 6, 7]\n\n// TODO: Follow Material Design\nconst QrCodeEncoder: React.FC<QrCodeEncoderProps> = ({ ...textFieldProps }) => {\n  const input = useRef<HTMLInputElement>(null)\n  const canvas = useRef<HTMLCanvasElement>(null)\n  const errorCorrectionLevelSelectId = useMemo(v4, [])\n  const maskPatternSelectId = useMemo(v4, [])\n  const inputLabel = useRef<HTMLLabelElement>(null)\n  const { formatMessage } = useIntl()\n\n  const [errorCorrectionLevel, setErrorCorrectionLevel] = useState<QRCodeErrorCorrectionLevel | undefined>()\n  const [maskPattern, setMaskPattern] = useState<QRCodeMaskPattern | undefined>()\n\n  const handleChange = useCallback<React.ChangeEventHandler<HTMLInputElement>>((event) => {\n    if (event.currentTarget.value !== '') {\n      QRCode.toCanvas(canvas.current, event.currentTarget.value, {\n        errorCorrectionLevel,\n        maskPattern,\n      })\n    }\n  }, [canvas, errorCorrectionLevel, maskPattern])\n\n  const handleErrorCorrectionLevelChange = useCallback<NonNullable<SelectProps['onChange']>>((event) => {\n    if (!isOneOf<(QRCodeErrorCorrectionLevel | 'default')[]>(...errorCorrectionLevels, 'default')(event.target.value)) {\n      throw new Error //\n    }\n\n    const errorCorrectionLevel = event.target.value !== 'default' ? event.target.value : undefined\n\n    setErrorCorrectionLevel(errorCorrectionLevel)\n\n    shouldBePresent(input.current?.value)\n\n    QRCode.toCanvas(canvas.current, input.current?.value, {\n      errorCorrectionLevel,\n      maskPattern,\n    })\n  }, [maskPattern])\n\n  const handleMaskPatternChange = useCallback<NonNullable<SelectProps['onChange']>>((event) => {\n    if (!isOneOf<(`${ QRCodeMaskPattern }` | 'default')[]>(...maskPatterns.map<`${ QRCodeMaskPattern }`>((n) => `${ n }`), 'default')(event.target.value)) {\n      throw new Error //\n    }\n\n    const maskPattern = event.target.value !== 'default' ? Number(event.target.value) : undefined\n\n    setMaskPattern(maskPattern)\n\n    shouldBePresent(input.current?.value)\n\n    QRCode.toCanvas(canvas.current, input.current?.value, {\n      errorCorrectionLevel,\n      maskPattern,\n    })\n  }, [errorCorrectionLevel])\n\n  useEffect(() => {\n    if (input.current?.value) {\n      QRCode.toCanvas(canvas.current, input.current.value)\n    }\n  }, [input, canvas])\n\n  return (\n    <Grid container spacing={ 2 }>\n      <Grid item xs={ 12 } sm={ 5 }>\n        <TextField fullWidth multiline inputRef={ input } onChange={ handleChange } { ...textFieldProps } />\n      </Grid>\n      <Grid item xs={ 12 } sm={ 7 }>\n        <canvas ref={ canvas } />\n      </Grid>\n      <Grid item xs={ 6 } sm={ 3 }>\n        <InputLabel ref={ inputLabel } htmlFor={ errorCorrectionLevelSelectId }>\n          <FormattedMessage { ...messages.errorCorrectionLevel } />\n        </InputLabel>\n        <Select\n          native\n          onChange={ handleErrorCorrectionLevelChange }\n          id={ errorCorrectionLevelSelectId }\n        >\n          <option value=\"default\">{ formatMessage(messages.default) }</option>\n          { errorCorrectionLevels.map((level, i) =>\n            <option key={ i } value={ level }>{ level }</option>\n          ) }\n        </Select>\n      </Grid>\n      <Grid item xs={ 6 } sm={ 3 }>\n        <InputLabel ref={ inputLabel } htmlFor={ maskPatternSelectId }>\n          <FormattedMessage { ...messages.maskPattern } />\n        </InputLabel>\n        <Select\n          native\n          onChange={ handleMaskPatternChange }\n          id={ maskPatternSelectId }\n        >\n          <option value=\"default\">{ formatMessage(messages.default) }</option>\n          { maskPatterns.map((pattern, i) =>\n            <option key={ i } value={ pattern }>{ pattern }</option>\n          ) }\n        </Select>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default QrCodeEncoder\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  qrCodeTools: 'QR code tools',\n  encoder: 'Encoder',\n  decoder: 'Decoder',\n})\n","import Box from '@material-ui/core/Box'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport React from 'react'\nimport Helmet from 'react-helmet'\nimport { FormattedMessage, useIntl } from 'react-intl'\n\nimport { createPage } from '~/components/PageTemplate'\nimport QrCodeDecoder from '~/components/QrCodeDecoder'\nimport QrCodeEncoder from '~/components/QrCodeEncoder'\nimport messages from './messages'\n\nconst QrCodeToolsPage: React.FC = () => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <>\n      <Helmet title={ formatMessage(messages.qrCodeTools) } />\n      <Box>\n        <Box padding={ 2 }>\n          <Grid container spacing={ 2 }>\n            <Grid item xs={ 12 }>\n              <Typography variant=\"h3\">\n                <FormattedMessage { ...messages.encoder } />\n              </Typography>\n            </Grid>\n            <Grid item xs={ 12 }>\n              <QrCodeEncoder defaultValue=\"https://sueka.me\" />\n            </Grid>\n          </Grid>\n        </Box>\n        <Box padding={ 2 }>\n          <Grid container spacing={ 2 }>\n            <Grid item xs={ 12 }>\n              <Typography variant=\"h3\">\n                <FormattedMessage { ...messages.decoder } />\n              </Typography>\n            </Grid>\n            <Grid item xs={ 12 }>\n              <QrCodeDecoder />\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n    </>\n  )\n}\n\nexport default createPage(QrCodeToolsPage)\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js!./classes.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js!./classes.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import Button, { ButtonProps } from '@material-ui/core/Button'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport Bowser from 'bowser'\nimport classnames from 'classnames'\nimport React, { useCallback, useMemo, useRef } from 'react'\nimport { FormattedMessage } from 'react-intl'\n\nimport { shouldBePresent } from '~/asserters/commonAsserters'\nimport cssClasses from './classes.css'\nimport messages from './messages'\n\nexport interface Props extends Alt.Omit<React.InputHTMLAttributes<HTMLInputElement>, 'type' | 'onClick' | 'onChange'> {\n  onClick?: React.MouseEventHandler<HTMLButtonElement>\n  onChange?: React.ChangeEventHandler<HTMLInputElement>\n  buttonLabel?: React.ReactNode\n  resultMessage?: React.ReactNode\n  classes?: {\n    root?: string\n    button?: string\n  }\n  component?: React.ElementType\n\n  /**\n   * Merges className, with mimicking Material-UI.\n   */\n  ButtonProps?: Alt.Omit<ButtonProps, 'disabled' | 'onClick'>\n}\n\n// TODO: Remove?\nconst browser = Bowser.getParser(navigator.userAgent)\n\nconst isSafari = browser.is('Safari')\n\nconst FileUpload: React.FC<Props> = ({\n  className,\n  disabled,\n  multiple,\n  onClick,\n  onChange,\n  buttonLabel = <FormattedMessage { ...messages.browse } />,\n  resultMessage,\n  classes: propClasses,\n  component: Component = FormLabel,\n  ButtonProps,\n  ...restInputProps\n}: Props) => {\n  const rootClassName = useMemo(() => classnames(className, propClasses?.root, cssClasses.FileUpload, {\n    [cssClasses.Safari]: isSafari,\n  }), [className, propClasses?.root])\n  const buttonClassName = useMemo(() => classnames(propClasses?.button, cssClasses.Button, ButtonProps?.className), [propClasses?.button, ButtonProps?.className])\n\n  const input = useRef<HTMLInputElement>(null)\n  const files = input.current?.files ?? null\n\n  const defaultResultMessage = useMemo(() => {\n    if (resultMessage != null) {\n      return // nothing\n    }\n\n    if (files === null || files.length === 0) {\n      return <FormattedMessage { ...messages.noFileSelected } />\n    }\n\n    switch (files.length) {\n      case 1:\n        return files[0]!.name\n      default:\n        return <FormattedMessage { ...messages.nFilesSelected } values={ { n: files.length } } />\n    }\n  }, [resultMessage, files])\n\n  const fireInputClick = useCallback<React.MouseEventHandler<HTMLButtonElement>>(() => {\n    shouldBePresent(input.current)\n\n    input.current.dispatchEvent(new MouseEvent('click')) // FIXME: Element.click()\n  }, [input])\n\n  const handleButtonClick = useCallback<React.MouseEventHandler<HTMLButtonElement>>((event) => {\n    onClick?.(event)\n\n    if (!event.isDefaultPrevented()) {\n      fireInputClick(event)\n    }\n  }, [onClick, fireInputClick])\n\n  return (\n    <Component className={ rootClassName } tabIndex={ isSafari ? -1 : 0 }>\n      <Button\n        disabled={ disabled }\n        onClick={ handleButtonClick }\n        { ...ButtonProps }\n        className={ buttonClassName } // NOTE: Overrides ButtonProps.className\n        tabIndex={ -1 }\n      >\n        { buttonLabel }\n      </Button>\n      { resultMessage ?? defaultResultMessage }\n      <input\n        className={ cssClasses.Input }\n        type=\"file\"\n        disabled={ disabled }\n        multiple={ multiple }\n        onChange={ onChange }\n        ref={ input }\n        { ...restInputProps }\n      />\n    </Component>\n  )\n}\n\nexport default FileUpload\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  browse: 'Browse…',\n  noFileSelected: 'No file selected.',\n  nFilesSelected: '{ n } files selected.',\n})\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-components-FileUpload-classes__FileUpload--zcA60 {\\n  display: inline-block; /* TODO: polyfill */\\n  display: inline flow-root;\\n  cursor: pointer;\\n}\\n\\n.src-components-FileUpload-classes__FileUpload--zcA60.src-components-FileUpload-classes__Safari--xNS3H:focus {\\n  outline: none;\\n}\\n\\n.src-components-FileUpload-classes__Button--_x92h.src-components-FileUpload-classes__Button--_x92h {\\n  text-transform: none;\\n  cursor: unset;\\n}\\n\\n.src-components-FileUpload-classes__Input--HY1r1 {\\n  display: none;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/FileUpload/classes.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,qBAAqB,EAAE,mBAAmB;EAC1C,yBAAyB;EACzB,eAAe;AACjB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,oBAAoB;EACpB,aAAa;AACf;;AAEA;EACE,aAAa;AACf\",\"sourcesContent\":[\".FileUpload {\\n  display: inline-block; /* TODO: polyfill */\\n  display: inline flow-root;\\n  cursor: pointer;\\n}\\n\\n.FileUpload.Safari:focus {\\n  outline: none;\\n}\\n\\n.Button.Button {\\n  text-transform: none;\\n  cursor: unset;\\n}\\n\\n.Input {\\n  display: none;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"FileUpload\": \"src-components-FileUpload-classes__FileUpload--zcA60\",\n\t\"Safari\": \"src-components-FileUpload-classes__Safari--xNS3H\",\n\t\"Button\": \"src-components-FileUpload-classes__Button--_x92h\",\n\t\"Input\": \"src-components-FileUpload-classes__Input--HY1r1\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["defineMessages","noFileSelected","decodingFailed","canvas","useMemo","document","createElement","context","getContext","files","setFiles","useState","decoded","setDecoded","load","useCallback","currentTarget","image","shouldBePresent","height","width","drawImage","imageData","getImageData","qrcode","jsQR","data","inversionAttempts","handleChange","event","target","undefined","length","file","url","URL","createObjectURL","Image","onload","src","revokeObjectURL","resultMessage","messages","FileUpload","accept","onChange","errorCorrectionLevel","maskPattern","default","errorCorrectionLevels","maskPatterns","textFieldProps","input","useRef","errorCorrectionLevelSelectId","v4","maskPatternSelectId","inputLabel","formatMessage","useIntl","setErrorCorrectionLevel","setMaskPattern","value","QRCode","current","handleErrorCorrectionLevelChange","isOneOf","Error","handleMaskPatternChange","map","n","Number","useEffect","Grid","container","spacing","item","xs","sm","TextField","fullWidth","multiline","inputRef","ref","InputLabel","htmlFor","Select","native","id","level","i","key","pattern","qrCodeTools","encoder","decoder","createPage","Helmet","title","Box","padding","Typography","variant","defaultValue","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","isSafari","Bowser","navigator","userAgent","is","className","disabled","multiple","onClick","buttonLabel","classes","propClasses","component","Component","FormLabel","ButtonProps","restInputProps","rootClassName","classnames","root","cssClasses","buttonClassName","button","defaultResultMessage","name","values","fireInputClick","dispatchEvent","MouseEvent","handleButtonClick","isDefaultPrevented","tabIndex","Button","type","browse","nFilesSelected","___CSS_LOADER_EXPORT___","push","module","locals"],"sourceRoot":""}