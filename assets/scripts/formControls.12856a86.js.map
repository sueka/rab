{"version":3,"file":"assets/scripts/formControls.12856a86.js","mappings":"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","sources":["webpack://rap/./src/components/CodeField/classes.css?a617","webpack://rap/./src/components/CodeField/index.tsx","webpack://rap/./src/components/MicSwitch/messages.ts","webpack://rap/./src/components/MicSwitch/index.tsx","webpack://rap/./src/components/App/FormControlsPage/messages.ts","webpack://rap/./src/components/App/FormControlsPage/index.tsx","webpack://rap/./src/components/CopyTextButton/messages.ts","webpack://rap/./src/components/CopyTextButton/index.tsx","webpack://rap/./src/components/FileUpload/classes.css?bd7d","webpack://rap/./src/components/FileUpload/index.tsx","webpack://rap/./src/components/FileUpload/messages.ts","webpack://rap/./src/components/CodeField/classes.css","webpack://rap/./src/components/FileUpload/classes.css"],"sourcesContent":["\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js!./classes.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js!./classes.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import TextField, { TextFieldProps as OriginalTextFieldProps } from '@material-ui/core/TextField'\nimport { makeStyles } from '@material-ui/core/styles'\nimport classnames from 'classnames'\nimport hljs from 'highlight.js'\nimport React, { useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react'\nimport { Helmet } from 'react-helmet'\nimport { useRecoilState } from 'recoil'\n\nimport { shouldBePresent } from '~/asserters/commonAsserters'\nimport DefaultDarkContext from '~/contexts/DefaultDarkContext'\nimport IntlProviderContext from '~/contexts/IntlProviderContext'\nimport useRefsMerged from '~/hooks/useRefsMerged'\nimport darkState from '~/selectors/darkState'\nimport typed from '~/typed'\nimport cssClasses from './classes.css'\n\ntype TextFieldProps =\n  & Alt.Omit<OriginalTextFieldProps,\n      | 'className'\n      | 'fullWidth' // TODO\n      | 'multiline' // TODO\n    >\n  & {\n      value?: string\n    }\n\ntype HighlightTheme = string // TODO\n\ninterface OwnProps {\n  lightTheme?: HighlightTheme\n  darkTheme?: HighlightTheme\n  className?: string\n  preProps?: Alt.Omit<React.InputHTMLAttributes<HTMLPreElement>, 'dangerouslySetInnerHTML'>\n}\n\n/**\n * @param className of the container\n */\ntype Props =\n  & TextFieldProps\n  & OwnProps\n\ninterface StyleProps {\n  direction?: Direction\n  startAdornmentWidth?: number\n  endAdornmentWidth?: number\n}\n\nconst useStyles = makeStyles<never, StyleProps, 'Pre' | 'TextArea'>({\n  Pre: {\n    '&$Pre': {\n      direction: 'ltr',\n      width: ({ startAdornmentWidth, endAdornmentWidth }) => `calc(100% - ${ (startAdornmentWidth ?? 0) + (endAdornmentWidth ?? 0) }px)`,\n\n      // NOTE: ページの direction が \"rtl\" なら starAdornment は右側に配置されるが、この要素の direction は \"ltr\" に固定されるので、 marginInlineStart 等を使うことはできない。\n      marginLeft: ({ direction, startAdornmentWidth, endAdornmentWidth }) => direction === 'rtl' ? endAdornmentWidth : startAdornmentWidth,\n      marginRight: ({ direction, startAdornmentWidth, endAdornmentWidth }) => direction === 'rtl' ? startAdornmentWidth : endAdornmentWidth,\n    },\n  },\n  TextArea: {\n    '&$TextArea': {\n      direction: 'ltr',\n    },\n  },\n}, {\n  flip: false,\n})\n\n// TODO: remove?\n// TODO: null check を抽出する\nfunction getWidth(element: HTMLElement | null | undefined): number | null {\n  if (element == null) {\n    return null\n  }\n\n  const { marginLeft, marginRight } = globalThis.getComputedStyle(element)\n\n  return element.offsetWidth + parseFloat(marginLeft) + parseFloat(marginRight)\n}\n\nconst CodeField: React.FC<Props> = ({\n  lightTheme = 'atom-one-light',\n  darkTheme = 'atom-one-dark',\n  className,\n  InputProps: { classes: InputPropsClasses, ref: InputRefProp, ...RestInputProps } = {},\n  inputProps: { spellCheck, ref: inputRefProp, ...restInputProps } = {},\n  preProps,\n  value,\n  onChange,\n  ...restProps\n}) => {\n  const { inputMultiline, ...InputPropsRestClasses } = InputPropsClasses ?? {}\n\n  const { dir } = useContext(IntlProviderContext)\n  const [dark] = useRecoilState(darkState)\n  const { defaultDark } = useContext(DefaultDarkContext)\n\n  const [hlText, setHlText] = useState<string | null>(null)\n  const [startAdornmentWidth, setStartAdornmentWidth] = useState<number | null>(null)\n  const [endAdornmentWidth, setEndAdornmentWidth] = useState<number | null>(null)\n\n  const jssClasses = useStyles({\n    direction: dir ?? undefined,\n    startAdornmentWidth: startAdornmentWidth ?? undefined,\n    endAdornmentWidth: endAdornmentWidth ?? undefined,\n  })\n\n  const containerClassName = useMemo(() => classnames(className, cssClasses.Container), [className])\n  const InputInputMultilineClassName = useMemo(() => classnames(jssClasses.TextArea, cssClasses.TextArea, inputMultiline), [jssClasses.TextArea, inputMultiline])\n  const preClassName = useMemo(() => classnames(jssClasses.Pre, cssClasses.Pre, preProps?.className), [jssClasses.Pre, preProps?.className])\n\n  const OwnInputRef = useRef<HTMLDivElement>(null)\n  const InputRef = useRefsMerged(InputRefProp ?? null, OwnInputRef)\n\n  const ownInputRef = useRef<HTMLTextAreaElement>(null)\n  const inputRef = useRefsMerged(inputRefProp ?? null, ownInputRef)\n\n  useEffect(() => {\n    const startAdornment = OwnInputRef.current?.querySelector<HTMLElement>(':scope > [class*=\"MuiInputAdornment-positionStart\"]') // TODO\n    const endAdornment = OwnInputRef.current?.querySelector<HTMLElement>(':scope > [class*=\"MuiInputAdornment-positionEnd\"]') // TODO\n\n    setStartAdornmentWidth(getWidth(startAdornment))\n    setEndAdornmentWidth(getWidth(endAdornment))\n  }, [OwnInputRef])\n\n  useEffect(() => {\n    setHlText(hljs.highlightAuto(ownInputRef.current?.value ?? '').value)\n  }, [ownInputRef])\n\n  const handleChange = useCallback<React.ChangeEventHandler<HTMLTextAreaElement>>((event) => {\n    onChange?.(event)\n\n    setHlText(hljs.highlightAuto(\n      (onChange === undefined ? value : undefined) // NOTE: `onChange` が無く、 `value` がある場合、テキストフィールドの内容は変更されない。また、 `onChange` がある場合、このイベントが発火した時の `value` の値は `onChange` 中の setState が完了する前のものなので、 `event.target.value` （または `input.current?.value ?? ''` ）を参照する必要がある。\n      ?? event.target.value\n    ).value)\n  }, [value, onChange])\n\n  shouldBePresent(defaultDark)\n\n  return (\n    <div className={ containerClassName }>\n      <Helmet>\n        <link\n          rel=\"stylesheet\"\n          href={ typed<[HighlightTheme]>`/assets/stylesheets/highlight.js/styles/${ (dark ?? defaultDark) ? darkTheme : lightTheme }.css` }\n        />\n      </Helmet>\n      <pre className={ preClassName } dangerouslySetInnerHTML={ { __html: hlText ?? '' } } />\n      <TextField\n        fullWidth // TODO: false でもうまく動くようにする\n        multiline // TODO: false でもうまく動くようにする\n        value={ value }\n        onChange={ handleChange }\n        InputProps={ {\n          classes: {\n            inputMultiline: InputInputMultilineClassName,\n            ...InputPropsRestClasses,\n          },\n          ref: InputRef,\n          ...RestInputProps,\n        } }\n        inputProps={ {\n          spellCheck: spellCheck ?? false,\n          ref: inputRef,\n          ...restInputProps,\n        } }\n        { ...restProps }\n      />\n    </div>\n  )\n}\n\nexport default CodeField\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  typeWithYourVoice: 'Type with your voice…',\n  stop: 'Stop',\n  speechRecognitionErrorOccurred: 'Speech recognition error occurred: { error }',\n})\n","import Checkbox, { CheckboxProps } from '@material-ui/core/Checkbox'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport MicIcon from '@material-ui/icons/Mic'\nimport MicNoneIcon from '@material-ui/icons/MicNone'\nimport { useSnackbar } from 'notistack'\nimport React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { FormattedMessage, useIntl } from 'react-intl'\nimport { useSelector } from 'react-redux'\n\nimport { State } from '~/redux'\nimport messages from './messages'\n\nexport interface Props {\n  inputFor: React.RefObject<HTMLInputElement>\n  fallback?: React.ReactElement | null\n  onResult(event: SpeechRecognitionEvent, value: string): void\n}\n\nconst MicSwitch: React.FC<Props> = ({ inputFor: input, onResult, fallback }) => {\n  const { formatMessage } = useIntl()\n  const locale = useSelector((state: State) => state.localeSelector.locale)\n  const [listening, setListening] = useState(false)\n  const recognition = useMemo(() => 'SpeechRecognition' in globalThis ? new SpeechRecognition() : null, [])\n  const tooltip = useMemo(() => listening ? formatMessage(messages.stop) : formatMessage(messages.typeWithYourVoice), [listening, formatMessage])\n  const { enqueueSnackbar } = useSnackbar()\n\n  const handleRecognitionStart = useCallback<NonNullable<SpeechRecognition['onstart']>>(() => {\n    setListening(true)\n  }, [])\n\n  const handleRecognitionEnd = useCallback<NonNullable<SpeechRecognition['onend']>>(() => {\n    setListening(false)\n  }, [])\n\n  const handleRecognitionError = useCallback<NonNullable<SpeechRecognition['onerror']>>((event) => {\n    enqueueSnackbar(<FormattedMessage { ...messages.speechRecognitionErrorOccurred } values={ { error: event.error } } />, {\n      variant: 'error',\n    })\n\n    // TODO: recognition が終了しない致命的なエラーがあれば、 recognition.abort() する。\n  }, [enqueueSnackbar])\n\n  const handleRecognitionResult = useCallback<NonNullable<SpeechRecognition['onresult']>>((event) => {\n    // TODO: result.isFinal な result をメモしてパフォーマンスを改善させる。\n    onResult(event, Array.from(event.results).map(result => {\n      if (result[0] === undefined) { // TODO: Replace the condition w/ `result.length === 0`\n        throw new Error('No speech recognition result alternatives found.')\n      }\n\n      return result[0].transcript\n    }).join(''))\n  }, [onResult])\n\n  useEffect(() => () => {\n    recognition?.stop()\n  }, [recognition])\n\n  useEffect(() => {\n    if (recognition === null) {\n      return\n    }\n\n    recognition.continuous = true\n    recognition.interimResults = true\n    recognition.maxAlternatives = 1\n\n    recognition.addEventListener('start', handleRecognitionStart)\n    recognition.addEventListener('end', handleRecognitionEnd)\n    recognition.addEventListener('error', handleRecognitionError)\n    recognition.addEventListener('result', handleRecognitionResult)\n\n    return () => {\n      recognition.removeEventListener('start', handleRecognitionStart)\n      recognition.removeEventListener('end', handleRecognitionEnd)\n      recognition.removeEventListener('error', handleRecognitionError)\n      recognition.removeEventListener('result', handleRecognitionResult)\n    }\n  }, [recognition, handleRecognitionStart, handleRecognitionEnd, handleRecognitionError, handleRecognitionResult])\n\n  // NOTE: locale は recognition やイベントハンドラーと比べると変わりやすい。\n  useEffect(() => {\n    if (recognition === null) {\n      return\n    }\n\n    recognition.stop() // NOTE: recognition の言語を途中で変更することはできないので、 locale が変更されたら停止する。\n\n    recognition.lang = locale\n  }, [recognition, locale])\n\n  const handleMicChange = useCallback<NonNullable<CheckboxProps['onChange']>>((_event, checked) => {\n    if (recognition === null) {\n      return\n    }\n\n    setListening(checked) // NOTE: onrecognitionstart/onrecognitionend でも同じことを行うが、一般に onChange で value を変更しないと状態がおかしくなることがある。\n\n    if (checked) {\n      recognition.start()\n    } else {\n      recognition.stop()\n    }\n  }, [recognition])\n\n  // NOTE: input が render された後の input.current が必要なので、 useMemo ではなく useState + useEffect を使う。\n  const [disabled, setDisabled] = useState(true)\n\n  useEffect(() => {\n    // NOTE: `input.current === null` のときに not disabled だと、レンダリングの途中でクリックすることで、本来は disabled な <input> で onChange が発生させることができる。\n    setDisabled(input.current === null || input.current.disabled)\n  })\n\n  useEffect(() => {\n    if (recognition === null) {\n      return\n    }\n\n    if (disabled) {\n      recognition.abort()\n    }\n  }, [disabled, recognition])\n\n  if (recognition === null && fallback !== undefined) {\n    return fallback\n  }\n\n  return (\n    <Tooltip\n      title={ tooltip }\n      disableFocusListener={ disabled }\n      disableHoverListener={ disabled }\n      disableTouchListener={ disabled }\n    >\n      <span>\n        <Checkbox\n          disabled={ disabled }\n          color=\"default\"\n          icon={ <MicNoneIcon /> }\n          checkedIcon={ <MicIcon /> }\n          checked={ listening }\n          onChange={ handleMicChange }\n        />\n      </span>\n    </Tooltip>\n  )\n}\n\nexport default MicSwitch\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  formControls: 'Form controls',\n})\n","import InputAdornment from '@material-ui/core/InputAdornment'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport TextField from '@material-ui/core/TextField'\nimport { Theme, makeStyles } from '@material-ui/core/styles'\nimport React, { useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react'\nimport Helmet from 'react-helmet'\nimport { FormattedMessage, useIntl } from 'react-intl'\n\nimport CodeField from '~/components/CodeField'\nimport CopyTextButton from '~/components/CopyTextButton'\nimport FileUpload from '~/components/FileUpload'\nimport fileUploadMessages from '~/components/FileUpload/messages' // TODO\nimport MicSwitch, { Props as MicSwitchProps } from '~/components/MicSwitch'\nimport { createPage } from '~/components/PageTemplate'\nimport IntlProviderContext from '~/contexts/IntlProviderContext'\nimport useScreen from '~/hooks/useScreen'\nimport messages from './messages'\nimport { shouldBePresent } from '~/asserters/commonAsserters'\n\nconst CopiableTextField: React.FC = () => {\n  const [text, setText] = useState('')\n  const input = useRef<HTMLInputElement>(null)\n\n  const handleChange = useCallback<React.ChangeEventHandler<HTMLInputElement>>((event) => {\n    setText(event.target.value)\n  }, [])\n\n  return (\n    <TextField\n      label=\"label\"\n      value={ text }\n      onChange={ handleChange }\n      inputRef={ input }\n      InputProps={ {\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <CopyTextButton inputFor={ input } />\n          </InputAdornment>\n        ),\n      } }\n    />\n  )\n}\n\nconst MicIncludedTextField: React.FC = () => {\n  const { dir } = useContext(IntlProviderContext)\n  const [text, setText] = useState('')\n  const input = useRef<HTMLInputElement>(null)\n  const scrollWidth = input.current?.scrollWidth\n  const scrollHeight = input.current?.scrollHeight\n  const offsetWidth = input.current?.offsetWidth\n  const offsetHeight = input.current?.offsetHeight\n\n  const handleChange = useCallback<React.ChangeEventHandler<HTMLInputElement>>((event) => {\n    setText(event.target.value)\n  }, [])\n\n  const handleResult = useCallback<MicSwitchProps['onResult']>((_event, value) => {\n    if (input.current === null) {\n      return\n    }\n\n    setText(value)\n\n    shouldBePresent(scrollWidth)\n    shouldBePresent(scrollHeight)\n    shouldBePresent(offsetWidth)\n    shouldBePresent(offsetHeight)\n\n    input.current.scrollTop = scrollHeight - offsetHeight\n\n    switch (dir) {\n      case 'ltr':\n        input.current.scrollLeft = scrollWidth - offsetWidth\n        break\n      case 'rtl':\n        input.current.scrollLeft = -(scrollWidth - offsetWidth)\n    }\n  }, [\n    dir,\n    input,\n    // To handle resizing, DOM updates, etc:\n    scrollWidth,\n    scrollHeight,\n    offsetWidth,\n    offsetHeight,\n  ])\n\n  return (\n    <TextField\n      label=\"label\"\n      value={ text }\n      onChange={ handleChange }\n      inputRef={ input }\n      InputProps={ {\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <MicSwitch\n              inputFor={ input }\n              onResult={ handleResult }\n              fallback={ null }\n            />\n          </InputAdornment>\n        ),\n      } }\n    />\n  )\n}\n\nconst MicIncludedCopiableTextField: React.FC = () => {\n  const { dir } = useContext(IntlProviderContext)\n  const [text, setText] = useState('')\n  const input = useRef<HTMLInputElement>(null)\n  const scrollWidth = input.current?.scrollWidth\n  const scrollHeight = input.current?.scrollHeight\n  const offsetWidth = input.current?.offsetWidth\n  const offsetHeight = input.current?.offsetHeight\n\n  const handleChange = useCallback<React.ChangeEventHandler<HTMLInputElement>>((event) => {\n    setText(event.target.value)\n  }, [])\n\n  const handleResult = useCallback<MicSwitchProps['onResult']>((_event, value) => {\n    if (input.current === null) {\n      return\n    }\n\n    setText(value)\n\n    shouldBePresent(scrollWidth)\n    shouldBePresent(scrollHeight)\n    shouldBePresent(offsetWidth)\n    shouldBePresent(offsetHeight)\n\n    input.current.scrollTop = scrollHeight - offsetHeight\n\n    switch (dir) {\n      case 'ltr':\n        input.current.scrollLeft = scrollWidth - offsetWidth\n        break\n      case 'rtl':\n        input.current.scrollLeft = -(scrollWidth - offsetWidth)\n    }\n  }, [\n    dir,\n    input,\n    // To handle resizing, DOM updates, etc:\n    scrollWidth,\n    scrollHeight,\n    offsetWidth,\n    offsetHeight,\n  ])\n\n  return (\n    <TextField\n      label=\"label\"\n      value={ text }\n      onChange={ handleChange }\n      inputRef={ input }\n      InputProps={ {\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <MicSwitch\n              inputFor={ input }\n              onResult={ handleResult }\n              fallback={ null }\n            />\n            <CopyTextButton inputFor={ input } />\n          </InputAdornment>\n        ),\n      } }\n    />\n  )\n}\n\ninterface ImageFileProps {\n  file: File\n}\n\ninterface StyleProps {\n  width: number | null\n  height: number | null\n}\n\nconst useStyles = makeStyles<Theme, StyleProps, 'Image'>({\n  Image: {\n    maxWidth: ({ width }) => width !== null ? width / 2 : undefined,\n    maxHeight: ({ height }) => height !== null ? height / 2 : undefined,\n  },\n})\n\nconst ImageFile: React.FC<ImageFileProps> = ({ file }) => {\n  const [src, setSrc] = useState<string | null>(null)\n  const reader = useMemo(() => new FileReader, [])\n  const { width, height } = useScreen()\n  const jssClasses = useStyles({ width, height })\n\n  const handleReaderLoad = useCallback<NonNullable<FileReader['onload']>>((event) => {\n    if (event.target?.result == null) {\n      return\n    }\n\n    if (event.target.result instanceof ArrayBuffer) {\n      throw new Error //\n    }\n\n    setSrc(event.target.result)\n  }, [])\n\n  useEffect(() => {\n    reader.addEventListener('load', handleReaderLoad)\n\n    return () => {\n      reader.removeEventListener('load', handleReaderLoad)\n    }\n  }, [reader, handleReaderLoad])\n\n  useEffect(() => {\n    if (!/^image\\/[0-9A-Za-z][!#$&+-.0-9A-Z^_a-z]*$/.test(file.type)) {\n      throw new Error\n    }\n\n    reader.readAsDataURL(file)\n  }, [file, reader])\n\n  return (\n    <img src={ src ?? undefined } className={ jssClasses.Image } />\n  )\n}\n\nconst FormControlsPage: React.FC = () => {\n  const { formatMessage } = useIntl()\n  const [files, setFiles] = useState<File[] | null>(null)\n\n  const handleFileUploadChange = useCallback<React.ChangeEventHandler<HTMLInputElement>>((event) => {\n    setFiles(event.target.files !== null ? Array.from(event.target.files) : event.target.files)\n  }, [])\n\n  const resultMessage = useMemo(() => {\n    if (files === null || files.length === 0) {\n      return <FormattedMessage { ...fileUploadMessages.noFileSelected } />\n    }\n\n    return Array.from(files).map((file, i) => <ImageFile key={ i } file={ file } />)\n  }, [files])\n\n  const [code, setCode] = useState('')\n\n  const handleCodeFieldChange = useCallback<React.ChangeEventHandler<HTMLTextAreaElement>>((event) => {\n    setCode(event.target?.value)\n  }, [])\n\n  const codeFieldInput = useRef<HTMLInputElement | HTMLTextAreaElement>(null)\n\n  return (\n    <>\n      <Helmet title={ formatMessage(messages.formControls) } />\n      <List>\n        <ListItem>\n          <ListItemText>\n            <FileUpload\n              accept=\"image/*\"\n              multiple\n              resultMessage={ resultMessage }\n              onChange={ handleFileUploadChange }\n            />\n          </ListItemText>\n        </ListItem>\n        <ListItem>\n          <ListItemText>\n            <CopiableTextField />\n          </ListItemText>\n        </ListItem>\n        <ListItem>\n          <ListItemText>\n            <MicIncludedTextField />\n          </ListItemText>\n        </ListItem>\n        <ListItem>\n          <ListItemText>\n            <MicIncludedCopiableTextField />\n          </ListItemText>\n        </ListItem>\n        <ListItem>\n          <ListItemText>\n            <CodeField\n              label=\"code\"\n              value={ code }\n              onChange={ handleCodeFieldChange }\n              InputProps={ {\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <CopyTextButton inputFor={ codeFieldInput } />\n                  </InputAdornment>\n                ),\n              } }\n              inputProps={ {\n                ref: codeFieldInput,\n              } }\n            />\n          </ListItemText>\n        </ListItem>\n      </List>\n    </>\n  )\n}\n\nexport default createPage(FormControlsPage)\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  textCopied: 'Text copied.',\n  copyText: 'Copy text',\n})\n","import IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport FilterNoneIcon from '@material-ui/icons/FilterNone'\nimport copy from 'copy-to-clipboard'\nimport { useSnackbar } from 'notistack'\nimport React, { useCallback, useEffect, useState } from 'react'\nimport { FormattedMessage, useIntl } from 'react-intl'\n\nimport { shouldBePresent } from '~/asserters/commonAsserters'\nimport messages from './messages'\n\ninterface Props {\n  inputFor: React.RefObject<HTMLInputElement | HTMLTextAreaElement>\n}\n\n// TODO: @material-ui/icons/ContentCopy が実装されたら削除する\nconst ContentCopyIcon: React.FC<React.PropsOf<typeof FilterNoneIcon>> = ({ style, ...restProps }) => {\n  if (style === undefined) {\n    return <FilterNoneIcon style={ { transform: 'scaleY(-1)' } } { ...restProps } />\n  }\n\n  const { transform, ...restStyle } = style\n\n  if (transform !== undefined) {\n    throw new Error\n  }\n\n  return <FilterNoneIcon style={ { transform: 'scaleY(-1)', ...restStyle } } { ...restProps } />\n}\n\nconst CopyTextButton: React.FC<Props> = ({ inputFor: input }) => {\n  const { formatMessage } = useIntl()\n  const { enqueueSnackbar } = useSnackbar()\n\n  const handleClick = useCallback(() => {\n    shouldBePresent(input.current)\n\n    if (input.current.value === '') {\n      return\n    }\n\n    copy(input.current.value) // TODO: await navigator.clipboard.writeText(input.current.value)\n\n    enqueueSnackbar(\n      <FormattedMessage { ...messages.textCopied } />\n    )\n  }, [enqueueSnackbar, input])\n\n  // NOTE: input が render された後の input.current が必要なので、 useMemo ではなく useState + useEffect を使う。\n  const [disabled, setDisabled] = useState(true)\n\n  useEffect(() => {\n    setDisabled(input.current === null || input.current.value === '' || input.current.disabled)\n  })\n\n  return (\n    <Tooltip\n      title={ formatMessage(messages.copyText) }\n      disableFocusListener={ disabled }\n      disableHoverListener={ disabled }\n      disableTouchListener={ disabled }\n    >\n      <span>\n        <IconButton onClick={ handleClick } disabled={ disabled }>\n          <ContentCopyIcon />\n        </IconButton>\n      </span>\n    </Tooltip>\n  )\n}\n\nexport default CopyTextButton\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js!./classes.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js!./classes.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import Button, { ButtonProps } from '@material-ui/core/Button'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport Bowser from 'bowser'\nimport classnames from 'classnames'\nimport React, { useCallback, useMemo, useRef } from 'react'\nimport { FormattedMessage } from 'react-intl'\n\nimport { shouldBePresent } from '~/asserters/commonAsserters'\nimport cssClasses from './classes.css'\nimport messages from './messages'\n\nexport interface Props extends Alt.Omit<React.InputHTMLAttributes<HTMLInputElement>, 'type' | 'onClick' | 'onChange'> {\n  onClick?: React.MouseEventHandler<HTMLButtonElement>\n  onChange?: React.ChangeEventHandler<HTMLInputElement>\n  buttonLabel?: React.ReactNode\n  resultMessage?: React.ReactNode\n  classes?: {\n    root?: string\n    button?: string\n  }\n  component?: React.ElementType\n\n  /**\n   * Merges className, with mimicking Material-UI.\n   */\n  ButtonProps?: Alt.Omit<ButtonProps, 'disabled' | 'onClick'>\n}\n\n// TODO: Remove?\nconst browser = Bowser.getParser(navigator.userAgent)\n\nconst isSafari = browser.is('Safari')\n\nconst FileUpload: React.FC<Props> = ({\n  className,\n  disabled,\n  multiple,\n  onClick,\n  onChange,\n  buttonLabel = <FormattedMessage { ...messages.browse } />,\n  resultMessage,\n  classes: propClasses,\n  component: Component = FormLabel,\n  ButtonProps,\n  ...restInputProps\n}: Props) => {\n  const rootClassName = useMemo(() => classnames(className, propClasses?.root, cssClasses.FileUpload, {\n    [cssClasses.Safari]: isSafari,\n  }), [className, propClasses?.root])\n  const buttonClassName = useMemo(() => classnames(propClasses?.button, cssClasses.Button, ButtonProps?.className), [propClasses?.button, ButtonProps?.className])\n\n  const input = useRef<HTMLInputElement>(null)\n  const files = input.current?.files ?? null\n\n  const defaultResultMessage = useMemo(() => {\n    if (resultMessage != null) {\n      return // nothing\n    }\n\n    if (files === null || files.length === 0) {\n      return <FormattedMessage { ...messages.noFileSelected } />\n    }\n\n    switch (files.length) {\n      case 1:\n        return files[0]!.name\n      default:\n        return <FormattedMessage { ...messages.nFilesSelected } values={ { n: files.length } } />\n    }\n  }, [resultMessage, files])\n\n  const fireInputClick = useCallback<React.MouseEventHandler<HTMLButtonElement>>(() => {\n    shouldBePresent(input.current)\n\n    input.current.dispatchEvent(new MouseEvent('click')) // FIXME: Element.click()\n  }, [input])\n\n  const handleButtonClick = useCallback<React.MouseEventHandler<HTMLButtonElement>>((event) => {\n    onClick?.(event)\n\n    if (!event.isDefaultPrevented()) {\n      fireInputClick(event)\n    }\n  }, [onClick, fireInputClick])\n\n  return (\n    <Component className={ rootClassName } tabIndex={ isSafari ? -1 : 0 }>\n      <Button\n        disabled={ disabled }\n        onClick={ handleButtonClick }\n        { ...ButtonProps }\n        className={ buttonClassName } // NOTE: Overrides ButtonProps.className\n        tabIndex={ -1 }\n      >\n        { buttonLabel }\n      </Button>\n      { resultMessage ?? defaultResultMessage }\n      <input\n        className={ cssClasses.Input }\n        type=\"file\"\n        disabled={ disabled }\n        multiple={ multiple }\n        onChange={ onChange }\n        ref={ input }\n        { ...restInputProps }\n      />\n    </Component>\n  )\n}\n\nexport default FileUpload\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  browse: 'Browse…',\n  noFileSelected: 'No file selected.',\n  nFilesSelected: '{ n } files selected.',\n})\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-components-CodeField-classes__Container--tZbmS {\\n  position: relative;\\n}\\n\\n.src-components-CodeField-classes__Pre--hgBRY {\\n  /* font-family: monospace; */\\n  font-size: 16px;\\n  line-height: 1.1876em;\\n  margin: 0;\\n  padding: 18.5px 14px;\\n  position: absolute;\\n  text-align: left;\\n  white-space: pre-wrap;\\n  /* width: 100%; */\\n  word-break: break-word;\\n}\\n\\n.src-components-CodeField-classes__TextArea--kbzwS {\\n  font-family: monospace;\\n  font-size: 16px;\\n  /* line-height: 1.1876em; */\\n  /* margin: 0; */\\n  -webkit-text-fill-color: transparent;\\n  white-space: pre-wrap;\\n  /* width: 100%; */\\n  /* word-break: break-word; */\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/CodeField/classes.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,kBAAkB;AACpB;;AAEA;EACE,4BAA4B;EAC5B,eAAe;EACf,qBAAqB;EACrB,SAAS;EACT,oBAAoB;EACpB,kBAAkB;EAClB,gBAAgB;EAChB,qBAAqB;EACrB,iBAAiB;EACjB,sBAAsB;AACxB;;AAEA;EACE,sBAAsB;EACtB,eAAe;EACf,2BAA2B;EAC3B,eAAe;EACf,oCAAoC;EACpC,qBAAqB;EACrB,iBAAiB;EACjB,4BAA4B;AAC9B\",\"sourcesContent\":[\".Container {\\n  position: relative;\\n}\\n\\n.Pre {\\n  /* font-family: monospace; */\\n  font-size: 16px;\\n  line-height: 1.1876em;\\n  margin: 0;\\n  padding: 18.5px 14px;\\n  position: absolute;\\n  text-align: left;\\n  white-space: pre-wrap;\\n  /* width: 100%; */\\n  word-break: break-word;\\n}\\n\\n.TextArea {\\n  font-family: monospace;\\n  font-size: 16px;\\n  /* line-height: 1.1876em; */\\n  /* margin: 0; */\\n  -webkit-text-fill-color: transparent;\\n  white-space: pre-wrap;\\n  /* width: 100%; */\\n  /* word-break: break-word; */\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"Container\": \"src-components-CodeField-classes__Container--tZbmS\",\n\t\"Pre\": \"src-components-CodeField-classes__Pre--hgBRY\",\n\t\"TextArea\": \"src-components-CodeField-classes__TextArea--kbzwS\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-components-FileUpload-classes__FileUpload--zcA60 {\\n  display: inline-block; /* TODO: polyfill */\\n  display: inline flow-root;\\n  cursor: pointer;\\n}\\n\\n.src-components-FileUpload-classes__FileUpload--zcA60.src-components-FileUpload-classes__Safari--xNS3H:focus {\\n  outline: none;\\n}\\n\\n.src-components-FileUpload-classes__Button--_x92h.src-components-FileUpload-classes__Button--_x92h {\\n  text-transform: none;\\n  cursor: unset;\\n}\\n\\n.src-components-FileUpload-classes__Input--HY1r1 {\\n  display: none;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/FileUpload/classes.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,qBAAqB,EAAE,mBAAmB;EAC1C,yBAAyB;EACzB,eAAe;AACjB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,oBAAoB;EACpB,aAAa;AACf;;AAEA;EACE,aAAa;AACf\",\"sourcesContent\":[\".FileUpload {\\n  display: inline-block; /* TODO: polyfill */\\n  display: inline flow-root;\\n  cursor: pointer;\\n}\\n\\n.FileUpload.Safari:focus {\\n  outline: none;\\n}\\n\\n.Button.Button {\\n  text-transform: none;\\n  cursor: unset;\\n}\\n\\n.Input {\\n  display: none;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"FileUpload\": \"src-components-FileUpload-classes__FileUpload--zcA60\",\n\t\"Safari\": \"src-components-FileUpload-classes__Safari--xNS3H\",\n\t\"Button\": \"src-components-FileUpload-classes__Button--_x92h\",\n\t\"Input\": \"src-components-FileUpload-classes__Input--HY1r1\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","undefined","useStyles","makeStyles","Pre","direction","width","startAdornmentWidth","endAdornmentWidth","marginLeft","marginRight","TextArea","flip","getWidth","element","globalThis","getComputedStyle","offsetWidth","parseFloat","lightTheme","darkTheme","className","InputProps","classes","InputPropsClasses","ref","InputRefProp","RestInputProps","inputProps","spellCheck","inputRefProp","restInputProps","preProps","value","onChange","restProps","inputMultiline","InputPropsRestClasses","dir","useContext","IntlProviderContext","dark","useRecoilState","darkState","defaultDark","DefaultDarkContext","hlText","setHlText","useState","setStartAdornmentWidth","setEndAdornmentWidth","jssClasses","containerClassName","useMemo","classnames","cssClasses","InputInputMultilineClassName","preClassName","OwnInputRef","useRef","InputRef","useRefsMerged","ownInputRef","inputRef","useEffect","startAdornment","current","querySelector","endAdornment","hljs","handleChange","useCallback","event","target","shouldBePresent","Helmet","rel","href","typed","dangerouslySetInnerHTML","__html","TextField","fullWidth","multiline","defineMessages","typeWithYourVoice","stop","speechRecognitionErrorOccurred","inputFor","input","onResult","fallback","formatMessage","useIntl","locale","useSelector","state","localeSelector","listening","setListening","recognition","SpeechRecognition","tooltip","messages","enqueueSnackbar","useSnackbar","handleRecognitionStart","handleRecognitionEnd","handleRecognitionError","values","error","variant","handleRecognitionResult","Array","from","results","map","result","Error","transcript","join","continuous","interimResults","maxAlternatives","addEventListener","removeEventListener","lang","handleMicChange","_event","checked","start","disabled","setDisabled","abort","Tooltip","title","disableFocusListener","disableHoverListener","disableTouchListener","Checkbox","color","icon","MicNone","checkedIcon","Mic","formControls","CopiableTextField","text","setText","label","InputAdornment","position","CopyTextButton","MicIncludedTextField","scrollWidth","scrollHeight","offsetHeight","handleResult","scrollTop","scrollLeft","MicIncludedCopiableTextField","Image","maxWidth","maxHeight","height","ImageFile","file","src","setSrc","reader","FileReader","useScreen","handleReaderLoad","ArrayBuffer","test","type","readAsDataURL","createPage","files","setFiles","handleFileUploadChange","resultMessage","length","fileUploadMessages","i","key","code","setCode","handleCodeFieldChange","codeFieldInput","List","ListItem","ListItemText","FileUpload","accept","multiple","textCopied","copyText","ContentCopyIcon","style","FilterNone","transform","restStyle","handleClick","copy","IconButton","onClick","isSafari","Bowser","navigator","userAgent","is","buttonLabel","propClasses","component","Component","FormLabel","ButtonProps","rootClassName","root","buttonClassName","button","defaultResultMessage","name","n","fireInputClick","dispatchEvent","MouseEvent","handleButtonClick","isDefaultPrevented","tabIndex","Button","browse","noFileSelected","nFilesSelected","___CSS_LOADER_EXPORT___","push","module","id","locals"],"sourceRoot":""}