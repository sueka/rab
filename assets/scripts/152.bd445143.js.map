{"version":3,"sources":["webpack://react-app-prototype/./src/lib/components/ErrorBoundary/index.ts","webpack://react-app-prototype/./src/lib/components/Link/index.tsx","webpack://react-app-prototype/./src/lib/components/ListItemLink/index.tsx","webpack://react-app-prototype/./src/components/PageTemplate/Nav/classes.css?4e16","webpack://react-app-prototype/./src/components/PageTemplate/Nav/messages.ts","webpack://react-app-prototype/./src/components/PageTemplate/Nav/index.tsx","webpack://react-app-prototype/./src/components/LocaleSelect/classes.css?b291","webpack://react-app-prototype/./src/components/LocaleSelect/messages.ts","webpack://react-app-prototype/./src/components/LocaleSelect/index.tsx","webpack://react-app-prototype/./src/lib/languageNameSolver/index.ts","webpack://react-app-prototype/./src/components/ToggleDarkButton/classes.css?6c28","webpack://react-app-prototype/./src/components/ToggleDarkButton/messages.ts","webpack://react-app-prototype/./src/components/ToggleDarkButton/index.tsx","webpack://react-app-prototype/./src/components/PageTemplate/TopAppbar/classes.css?1b0e","webpack://react-app-prototype/./src/components/PageTemplate/TopAppbar/index.tsx","webpack://react-app-prototype/./src/components/PageTemplate/index.tsx","webpack://react-app-prototype/./src/lib/guards/commonGuards.ts","webpack://react-app-prototype/./src/lib/hooks/useScreen.ts","webpack://react-app-prototype/./src/lib/mergeRefs.ts","webpack://react-app-prototype/./src/components/LocaleSelect/classes.css","webpack://react-app-prototype/./src/components/PageTemplate/Nav/classes.css","webpack://react-app-prototype/./src/components/PageTemplate/TopAppbar/classes.css","webpack://react-app-prototype/./src/components/ToggleDarkButton/classes.css"],"names":["ErrorBoundary","state","hasError","this","props","renderError","children","error","React","getDerivedStateFromError","isTypographyColor","optional","isOneOf","RouterLinkWithRef","ref","innerRef","Link","color","restProps","component","console","warn","typed","listItem","to","button","listItemProps","LinkWithRef","linkProps","link","underline","ListItem","options","defineMessages","home","chess","clock","counter","info","paint","reminder","settings","useStyles","makeStyles","theme","DrawerHeader","mixins","gutters","height","topAppbarHeight","undefined","display","alignItems","justifyContent","name","FlippedListIcon","style","transform","restStyle","Error","open","onClose","dir","useContext","IntlProviderContext","RtlFriendlyListIcon","useMemo","shouldBePresent","ListIcon","jssClasses","Drawer","anchor","PaperProps","className","IconButton","edge","onClick","Menu","Divider","List","classes","ListItemIcon","Home","ListItemText","messages","icon","chessPawn","width","Info","Brush","Settings","languages","Select","minWidth","selectMinWidth","mapDispatchToProps","selectLocale","connect","locale","localeSelector","propClasses","FormControlProps","useState","labelWidth","setLabelWidth","setSelectMinWidth","inputId","v4","useTheme","variant","MuiFormControl","rootClassName","classnames","root","labelClassName","label","cssClasses","selectSelectClassName","inputClassName","input","selectIconClassName","selectIcon","inputUnderlineClassName","inputUnderline","inputLabel","useRef","select","useEffect","current","offsetWidth","selectSelect","querySelector","HTMLDivElement","rect","getBoundingClientRect","globalThis","getComputedStyle","paddingInlineStart","parseFloat","paddingLeft","paddingRight","paddingInlineEnd","handleChange","useCallback","event","tag","target","value","tagNativeNameMap","availableLocales","FormControl","InputLabel","htmlFor","onChange","id","inputProps","standard","Input","outlined","OutlinedInput","filled","FilledInput","map","availableLocale","i","MenuItem","key","toggleLightDarkTheme","ThemeProviderContext","dark","setDark","_event","checked","Tooltip","title","Checkbox","Brightness4","checkedIcon","Brightness7","Offset","forwardedRef","onMenuIconButtonClick","screenWidth","useScreen","setHeight","ownRef","node","mergeRefs","AppBar","position","Toolbar","Box","mx","PageTemplate","String","TypeError","drawerOpen","setDrawerOpen","drawerRef","setTopAppbarHeight","topAppbarRef","topAppbarRect","openDrawer","closeDrawer","createPage","Body","some","option","isT","setWidth","dpr","setDpr","updateScreenSize","innerWidth","innerHeight","updateScreenDpr","devicePixelRatio","addEventListener","removeEventListener","refs","___CSS_LOADER_EXPORT___","push","module","locals"],"mappings":"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","file":"assets/scripts/152.bd445143.js","sourcesContent":["import React from 'react'\n\ninterface Props {\n  /**\n   * @param children that throws `error`\n   */\n  renderError(error: unknown, children: React.ReactNode): React.ReactNode\n}\n\ninterface State {\n  hasError: boolean\n  error?: unknown\n}\n\nclass ErrorBoundary extends React.Component<Props, State> {\n\n  // NOTE: https://github.com/DefinitelyTyped/DefinitelyTyped/blob/826ce0f1ce1d1887d199986283630d6f63075ad5/types/react/index.d.ts#L419 にも関わらず、初期化されていない state は null であるため、初期化を強制するためにプロパティ宣言を行う。\n  public state: Readonly<State> = {\n    hasError: false,\n  }\n\n  public static getDerivedStateFromError = (error: unknown) => ({\n    hasError: true,\n    error,\n  })\n\n  public render() {\n    const { renderError, children } = this.props\n    const { hasError, error } = this.state\n\n    if (hasError) {\n      return renderError(error, children)\n    }\n\n    return children\n  }\n}\n\nexport default ErrorBoundary\n","import MuiLink, { LinkProps as MuiLinkProps } from '@material-ui/core/Link'\nimport React from 'react'\nimport { Link as RouterLink, LinkProps as RouterLinkProps } from 'react-router-dom'\n\nimport { isOneOf, optional } from '~/lib/guards/commonGuards'\nimport typed from '~/lib/typed'\n\nexport type Props =\n  & RouterLinkProps\n  & Alt.Omit<MuiLinkProps, 'color' | 'ref'>\n\nconst isTypographyColor = optional(isOneOf('initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error'))\n\n// TODO: Delete; See also https://material-ui.com/guides/composition/#link\nconst RouterLinkWithRef = React.forwardRef<HTMLAnchorElement, RouterLinkProps>((props, ref) => (\n  <RouterLink innerRef={ ref } { ...props } />\n))\n\nexport default class Link extends React.Component<Props> {\n  public render() {\n    const { color, ...restProps } = this.props\n\n    if (!isTypographyColor(color)) {\n      console.warn(typed<[string]>`${ color } is not a Material-UI Typography color.`) // tslint:disable-line:no-console\n\n      return (\n        <MuiLink component={ RouterLinkWithRef } { ...restProps } />\n      )\n    }\n\n    return (\n      <MuiLink component={ RouterLinkWithRef } color={ color } { ...restProps } />\n    )\n  }\n}\n","import ListItem, { ListItemProps } from '@material-ui/core/ListItem'\nimport * as React from 'react'\n\nimport Link, { Props as LinkProps } from '~/lib/components/Link'\n\ntype Props = ListItemProps<typeof Link, { button?: true }>\n\nconst ListItemLink: React.FC<Props> = React.forwardRef<Link, React.PropsWithoutRef<Props>>(({ to, button, innerRef, ...listItemProps }, listItem) => {\n  // See https://material-ui.com/guides/composition/#link\n  const LinkWithRef = React.forwardRef<Link, LinkProps>((linkProps, link) => (\n    <Link ref={ link } innerRef={ innerRef } color=\"inherit\" underline=\"none\" { ...linkProps } />\n  ))\n\n  return (\n    <ListItem button component={ LinkWithRef } to={ to } ref={ listItem } { ...listItemProps } />\n  )\n})\n\nexport default ListItemLink\n","import api from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js!./classes.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  home: 'Home',\n  chess: 'Chess',\n  clock: 'Clock',\n  counter: 'Counter',\n  info: 'Info',\n  paint: 'Paint',\n  reminder: 'Reminder',\n  settings: 'Settings',\n})\n","import chessPawn from '@iconify/icons-mdi/chess-pawn'\nimport clock from '@iconify/icons-mdi/clock'\nimport counter from '@iconify/icons-mdi/counter'\nimport { Icon } from '@iconify/react'\nimport Divider from '@material-ui/core/Divider'\nimport Drawer from '@material-ui/core/Drawer'\nimport IconButton from '@material-ui/core/IconButton'\nimport List from '@material-ui/core/List'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport { Theme, makeStyles } from '@material-ui/core/styles'\nimport BrushIcon from '@material-ui/icons/Brush'\nimport HomeIcon from '@material-ui/icons/Home'\nimport InfoIcon from '@material-ui/icons/Info'\nimport ListIcon from '@material-ui/icons/List'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport React, { useContext, useMemo } from 'react'\nimport { FormattedMessage } from 'react-intl'\n\nimport { shouldBePresent } from '~/lib/asserters/commonAsserters'\nimport ListItemLink from '~/lib/components/ListItemLink'\nimport IntlProviderContext from '~/lib/contexts/IntlProviderContext'\nimport typed from '~/lib/typed'\nimport classes from './classes.css'\nimport messages from './messages'\n\ninterface Props {\n  open: boolean\n  onClose(): void\n  topAppbarHeight?: number\n}\n\ninterface StyleProps {\n  topAppbarHeight?: number\n}\n\nconst useStyles = makeStyles<Theme, StyleProps, 'DrawerHeader'>((theme) => ({\n  DrawerHeader: {\n    ...theme.mixins.gutters(),\n    height: ({ topAppbarHeight }) => topAppbarHeight !== undefined ? typed<[number]>`${ topAppbarHeight }px` : undefined,\n    display: 'grid',\n    alignItems: 'center',\n    justifyContent: 'start',\n  },\n}), { name: 'Nav' })\n\nconst FlippedListIcon: React.FC<React.PropsOf<typeof ListIcon>> = ({ style, ...restProps }) => {\n  if (style === undefined) {\n    return <ListIcon style={ { transform: 'scaleX(-1)' } } { ...restProps } />\n  }\n\n  const { transform, ...restStyle } = style\n\n  if (transform !== undefined) {\n    throw new Error\n  }\n\n  return <ListIcon style={ { transform: 'scaleX(-1)', ...restStyle } } { ...restProps } />\n}\n\nconst Nav = React.forwardRef<HTMLDivElement, Props>(({ open, onClose, topAppbarHeight }, ref) => {\n  const { dir } = useContext(IntlProviderContext)\n\n  const RtlFriendlyListIcon = useMemo(() => {\n    shouldBePresent(dir)\n\n    switch (dir) {\n      case 'ltr': return ListIcon\n      case 'rtl': return FlippedListIcon\n    }\n  }, [dir])\n\n  const jssClasses = useStyles({ topAppbarHeight })\n\n  // NOTE: anchor はページが RtL であることを検出すると水平反転するので、 dir から計算する必要は無い。\n  return (\n    <Drawer anchor=\"left\" open={ open } onClose={ onClose } PaperProps={ { ref } }>\n      <div className={ jssClasses.DrawerHeader }>\n        <IconButton edge=\"start\" color=\"inherit\" onClick={ onClose }>\n          <MenuIcon />\n        </IconButton>\n      </div>\n      <Divider />\n      <List className={ classes.List }>\n        <ListItemLink to=\"/\" onClick={ onClose }>\n          <ListItemIcon>\n            <HomeIcon />\n          </ListItemIcon>\n          <ListItemText>\n            <FormattedMessage { ...messages.home } />\n          </ListItemText>\n        </ListItemLink>\n        <ListItemLink to=\"/chess\" onClick={ onClose }>\n          <ListItemIcon>\n            <Icon icon={ chessPawn } width=\"24\" height=\"24\" />\n          </ListItemIcon>\n          <ListItemText>\n            <FormattedMessage { ...messages.chess } />\n          </ListItemText>\n        </ListItemLink>\n        <ListItemLink to=\"/clock\" onClick={ onClose }>\n          <ListItemIcon>\n            <Icon icon={ clock } width=\"24\" height=\"24\" />\n          </ListItemIcon>\n          <ListItemText>\n            <FormattedMessage { ...messages.clock } />\n          </ListItemText>\n        </ListItemLink>\n        <ListItemLink to=\"/counter\" onClick={ onClose }>\n          <ListItemIcon>\n            <Icon icon={ counter } width=\"24\" height=\"24\" />\n          </ListItemIcon>\n          <ListItemText>\n            <FormattedMessage { ...messages.counter } />\n          </ListItemText>\n        </ListItemLink>\n        <ListItemLink to=\"/info\" onClick={ onClose }>\n          <ListItemIcon>\n            <InfoIcon />\n          </ListItemIcon>\n          <ListItemText>\n            <FormattedMessage { ...messages.info } />\n          </ListItemText>\n        </ListItemLink>\n        <ListItemLink to=\"/paint\" onClick={ onClose }>\n          <ListItemIcon>\n            <BrushIcon />\n          </ListItemIcon>\n          <ListItemText>\n            <FormattedMessage { ...messages.paint } />\n          </ListItemText>\n        </ListItemLink>\n        <ListItemLink to=\"/reminder\" onClick={ onClose }>\n          <ListItemIcon>\n            <RtlFriendlyListIcon />\n          </ListItemIcon>\n          <ListItemText>\n            <FormattedMessage { ...messages.reminder } />\n          </ListItemText>\n        </ListItemLink>\n        <ListItemLink to=\"/settings\" onClick={ onClose }>\n          <ListItemIcon>\n            <SettingsIcon />\n          </ListItemIcon>\n          <ListItemText>\n            <FormattedMessage { ...messages.settings } />\n          </ListItemText>\n        </ListItemLink>\n      </List>\n    </Drawer>\n  )\n})\n\nexport default Nav\n","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js!./classes.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  languages: 'Languages',\n})\n","import FilledInput from '@material-ui/core/FilledInput'\nimport FormControl, { FormControlProps } from '@material-ui/core/FormControl'\nimport Input from '@material-ui/core/Input'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport OutlinedInput from '@material-ui/core/OutlinedInput'\nimport Select, { SelectProps } from '@material-ui/core/Select'\nimport { Theme, makeStyles, useTheme } from '@material-ui/core/styles'\nimport classnames from 'classnames'\nimport React, { useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { connect } from 'react-redux'\nimport { v4 } from 'uuid'\n\nimport IntlProviderContext from '~/lib/contexts/IntlProviderContext'\nimport { Tag, getNativeNameByTag, isTag } from '~/lib/languageNameSolver'\nimport { State } from '~/redux'\nimport { selectLocale } from '~/redux/modules/localeSelector'\nimport cssClasses from './classes.css'\nimport messages from './messages'\n\ninterface OwnProps {\n  classes?: {\n    root?: string\n    label?: string\n    input?: string\n    selectIcon?: string\n    inputUnderline?: string\n  } | null\n  FormControlProps?: FormControlProps | null\n}\n\ninterface StateProps {\n  locale: Tag\n}\n\ninterface DispatchProps {\n  selectLocale(locale: Tag): void\n}\n\ntype Props =\n  & OwnProps\n  & StateProps\n  & DispatchProps\n\ninterface StyleProps {\n  selectMinWidth?: number\n}\n\nconst useStyles = makeStyles<Theme, StyleProps, 'Select'>({\n  Select: {\n    minWidth: ({ selectMinWidth }) => selectMinWidth,\n  },\n})\n\nexport /* for testing */ const LocaleSelect: React.FC<Props> = ({ classes: propClasses, FormControlProps, locale, selectLocale }) => {\n  const [labelWidth, setLabelWidth] = useState<number | null>(null)\n  const [selectMinWidth, setSelectMinWidth] = useState<number | null>(null)\n  const inputId = useMemo(v4, [])\n  const theme = useTheme()\n  const { dir } = useContext(IntlProviderContext)\n  const jssClasses = useStyles({ selectMinWidth: selectMinWidth ?? undefined })\n\n  // NOTE: Fortunately, FormControl is nothing but FormControl.\n  const variant = useMemo(() => FormControlProps?.variant ?? theme?.props?.MuiFormControl?.variant ?? 'standard', [FormControlProps?.variant, theme?.props?.MuiFormControl?.variant])\n\n  const rootClassName = useMemo(() => classnames(propClasses?.root, FormControlProps?.className), [propClasses?.root, FormControlProps?.className])\n  const labelClassName = useMemo(() => classnames(propClasses?.label, cssClasses.InputLabel), [propClasses?.label])\n  const selectSelectClassName = useMemo(() => classnames(jssClasses.Select, cssClasses.Select), [jssClasses.Select])\n  const inputClassName = useMemo(() => classnames(propClasses?.input), [propClasses?.input])\n  const selectIconClassName = useMemo(() => classnames(propClasses?.selectIcon), [propClasses?.selectIcon])\n  const inputUnderlineClassName = useMemo(() => classnames(propClasses?.inputUnderline), [propClasses?.inputUnderline])\n\n  const inputLabel = useRef<HTMLLabelElement>(null)\n  const select = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    if (inputLabel.current === null) {\n      return\n    }\n\n    setLabelWidth(inputLabel.current.offsetWidth)\n\n    if (select.current === null) {\n      return\n    }\n\n    const selectSelect = select.current.querySelector(`:scope > .${ cssClasses.Select }`)\n\n    if (selectSelect === null || !(selectSelect instanceof HTMLDivElement)) {\n      return\n    }\n\n    const rect = inputLabel.current.getBoundingClientRect() // NOTE: node.offsetWidth は transform 前の値、 rect.width は transform 後の値を返す。\n\n    const style = globalThis.getComputedStyle(selectSelect)\n\n    // NOTE: document.dir 変更前なので style.paddingInlineStart 等で得ることはできない。\n    const paddingInlineStart = parseFloat(dir === 'ltr' ? style.paddingLeft : style.paddingRight)\n    const paddingInlineEnd = parseFloat(dir === 'ltr' ? style.paddingRight : style.paddingLeft)\n\n    // tslint:disable-next-line:no-object-mutation\n    setSelectMinWidth(rect.width + paddingInlineStart - paddingInlineEnd)\n  }, [locale, dir])\n\n  const handleChange = useCallback<NonNullable<SelectProps['onChange']>>((event) => {\n    if (isTag(event.target.value)) {\n      selectLocale(event.target.value)\n    }\n  }, [selectLocale])\n\n  const { availableLocales } = useContext(IntlProviderContext)\n\n  return (\n    <FormControl\n      { ...FormControlProps }\n      className={ rootClassName } // NOTE: Overrides FormControlProps.className\n    >\n      <InputLabel className={ labelClassName } ref={ inputLabel } htmlFor={ inputId }>\n        <FormattedMessage { ...messages.languages } />\n      </InputLabel>\n      <Select\n        classes={ {\n          select: selectSelectClassName,\n          icon: selectIconClassName,\n        } }\n        ref={ select }\n        labelWidth={ labelWidth ?? undefined }\n        value={ locale }\n        onChange={ handleChange }\n        id={ inputId }\n        inputProps={ { 'data-testid': 'localeSelect' } }\n        input={ {\n          standard: (\n            <Input\n              className={ inputClassName }\n              classes={ {\n                underline: inputUnderlineClassName,\n              } }\n            />\n          ),\n          outlined: <OutlinedInput className={ inputClassName } labelWidth={ labelWidth ?? undefined } />,\n          filled: <FilledInput className={ inputClassName } />,\n        }[variant] }\n      >\n        { availableLocales?.map((availableLocale, i) => (\n          <MenuItem key={ i } value={ availableLocale }>{ getNativeNameByTag(availableLocale) }</MenuItem>\n        )) }\n      </Select>\n    </FormControl>\n  )\n}\n\n// connect\n\nconst mapStateToProps = ({ localeSelector: { locale } }: State): StateProps => ({\n  locale,\n})\n\nconst mapDispatchToProps: DispatchProps = {\n  selectLocale,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LocaleSelect)\n","import tagNativeNameMap from './__data__/tagNativeNameMap.json'\n\nexport type Tag = keyof typeof tagNativeNameMap\n\nexport function isTag(tag: unknown): tag is Tag {\n  return typeof tag === 'string' && tag in tagNativeNameMap\n}\n\nexport function getNativeNameByTag(tag: Tag) {\n  return tagNativeNameMap[tag]\n}\n","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js!./classes.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  toggleLightDarkTheme: 'Toggle light/dark theme',\n})\n","import Checkbox from '@material-ui/core/Checkbox'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Brightness4Icon from '@material-ui/icons/Brightness4'\nimport Brightness7Icon from '@material-ui/icons/Brightness7'\nimport React, { useCallback, useContext } from 'react'\nimport { FormattedMessage } from 'react-intl'\n\nimport ThemeProviderContext from '~/contexts/ThemeProviderContext'\nimport classes from './classes.css'\nimport messages from './messages'\n\nconst ToggleDarkButton = () => {\n  const { dark, setDark } = useContext(ThemeProviderContext)\n\n  if (dark == null || setDark == null) {\n    throw new Error //\n  }\n\n  const handleChange = useCallback((_event, checked) => {\n    setDark(checked)\n  }, [setDark])\n\n  return (\n    <Tooltip title={ <FormattedMessage { ...messages.toggleLightDarkTheme } /> }>\n      <Checkbox\n        icon={ <Brightness4Icon /> }\n        checkedIcon={ <Brightness7Icon /> }\n        color=\"default\" // To change the focus ripple color\n        classes={ {\n          root: classes.Checkbox,\n          checked: classes.Checked,\n        } }\n        checked={ dark }\n        onChange={ handleChange }\n      />\n    </Tooltip>\n  )\n}\n\nexport default ToggleDarkButton\n","import api from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js!./classes.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import AppBar from '@material-ui/core/AppBar'\nimport Box from '@material-ui/core/Box'\nimport IconButton from '@material-ui/core/IconButton'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport { Theme, makeStyles } from '@material-ui/core/styles'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport React, { useCallback, useState } from 'react'\n\nimport LocaleSelect from '~/components/LocaleSelect' // TODO\nimport ToggleDarkButton from '~/components/ToggleDarkButton'\nimport useScreen from '~/lib/hooks/useScreen'\nimport mergeRefs from '~/lib/mergeRefs'\nimport classes from './classes.css'\n\ninterface Props {\n  onMenuIconButtonClick: React.MouseEventHandler<HTMLButtonElement>\n}\n\ninterface StyleProps {\n  topAppbarHeight?: number\n}\n\nconst useStyles = makeStyles<Theme, StyleProps, 'Offset'>({\n  Offset: {\n    height: ({ topAppbarHeight }) => topAppbarHeight,\n  },\n})\n\nconst TopAppbar = React.forwardRef<HTMLDivElement, Props>(({ onMenuIconButtonClick }, forwardedRef) => {\n  const { width: screenWidth } = useScreen()\n  const [height, setHeight] = useState<number | null>(null)\n\n  const ownRef = useCallback<React.RefCallback<HTMLDivElement>>((node) => {\n    // To silence the ESLint rule react-hooks/exhaustive-deps\n    if (screenWidth === null) {\n      return\n    }\n\n    const rect = node?.getBoundingClientRect()\n\n    if (rect === undefined) {\n      return\n    }\n\n    setHeight(rect.height)\n  }, [screenWidth])\n\n  const ref = mergeRefs(forwardedRef, ownRef)\n\n  const jssClasses = useStyles({ topAppbarHeight: height ?? undefined })\n\n  return (\n    <>\n      <AppBar position=\"fixed\" ref={ ref }>\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" onClick={ onMenuIconButtonClick }>\n            <MenuIcon />\n          </IconButton>\n          <div className={ classes.Spacer } />\n          <Box mx={ 1 }>\n            <ToggleDarkButton />\n          </Box>\n          <LocaleSelect\n            classes={ {\n              label: classes.LocaleSelectLabel,\n              input: classes.LocaleSelectInput,\n              selectIcon: classes.LocaleSelectSelectIcon,\n              inputUnderline: classes.LocaleSelectInputUnderline,\n            } }\n            FormControlProps={ {\n              variant: 'filled',\n            } }\n          />\n        </Toolbar>\n      </AppBar>\n      <div className={ jssClasses.Offset } />\n    </>\n  )\n})\n\nexport default TopAppbar\n","import React, { useCallback, useRef, useState } from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\n\nimport ErrorBoundary from '~/lib/components/ErrorBoundary'\nimport useScreen from '~/lib/hooks/useScreen'\nimport typed from '~/lib/typed'\nimport Nav from './Nav'\nimport TopAppbar from './TopAppbar'\n\ninterface PageTemplateProps {\n  children: React.ReactElement<BodyProps, React.ComponentType<BodyProps>>\n}\n\ntype BodyProps = PageProps\n\ntype PageProps =\n  & RouteComponentProps\n\nconst PageTemplate: React.FC<PageTemplateProps> = ({ children }) => {\n  const renderError = useCallback((error: unknown) => {\n    if (error instanceof Error) {\n      return typed<[string]>`${ String(error) }`\n    }\n\n    throw new TypeError(typed<[string]>`${ String(error) } is not an error.`)\n  }, [])\n\n  const [drawerOpen, setDrawerOpen] = useState(false)\n  const drawerRef = useRef<HTMLDivElement>(null)\n\n  const { width } = useScreen()\n  const [topAppbarHeight, setTopAppbarHeight] = useState<number | null>(null)\n\n  const topAppbarRef = useCallback<React.RefCallback<HTMLDivElement>>((node) => {\n    // To silence the ESLint rule react-hooks/exhaustive-deps\n    if (width === null) {\n      return\n    }\n\n    const topAppbarRect = node?.getBoundingClientRect()\n\n    if (topAppbarRect === undefined) {\n      return\n    }\n\n    setTopAppbarHeight(topAppbarRect.height)\n  }, [width])\n\n  const openDrawer = useCallback<React.MouseEventHandler>(() => {\n    setDrawerOpen(true)\n  }, [])\n\n  const closeDrawer = useCallback(() => {\n    setDrawerOpen(false)\n  }, [])\n\n  return (\n    <>\n      <TopAppbar ref={ topAppbarRef } onMenuIconButtonClick={ openDrawer } />\n      <Nav\n        ref={ drawerRef }\n        open={ drawerOpen }\n        onClose={ closeDrawer }\n        topAppbarHeight={ topAppbarHeight ?? undefined }\n      />\n      <ErrorBoundary renderError={ renderError }>\n        { children }\n      </ErrorBoundary>\n    </>\n  )\n}\n\nexport const createPage: (Body: React.FC<BodyProps>) => React.FC<PageProps> = (Body) => (props) => (\n  <PageTemplate>\n    <Body { ...props } />\n  </PageTemplate>\n)\n\nexport default PageTemplate\n","import identity from '~/lib/identity'\n\nexport const isOneOf = <T extends readonly Json[]>(...options: T) => (input: unknown): input is T[number] => options.some((option) => option === input)\n\nexport const optional = <A extends unknown, T extends A>(isT: (input: A) => input is T) => (input: A | undefined): input is T | undefined => {\n  if (input === undefined) {\n    return true\n  }\n\n  return isT(input)\n}\n\nexport const isObject = <A extends B, T extends A, B = A>(isT: (input: B) => Record<keyof A, boolean>) => (input: A): input is T => {\n  return Object.values<boolean>(isT(input)).every(identity)\n}\n","import { useCallback, useEffect, useState } from 'react'\n\nexport default function useScreen() {\n  const [width, setWidth] = useState<number | null>(null)\n  const [height, setHeight] = useState<number | null>(null)\n  const [dpr, setDpr] = useState<number | null>(null)\n\n  const updateScreenSize = useCallback(() => {\n    setWidth(globalThis.innerWidth)\n    setHeight(globalThis.innerHeight)\n  }, [])\n\n  const updateScreenDpr = useCallback(() => {\n    setDpr(globalThis.devicePixelRatio)\n  }, [])\n\n  useEffect(() => {\n    updateScreenSize()\n    updateScreenDpr()\n\n    globalThis.addEventListener('resize', updateScreenSize)\n    globalThis.addEventListener('change', updateScreenDpr)\n\n    return () => {\n      globalThis.removeEventListener('resize', updateScreenSize)\n      globalThis.removeEventListener('change', updateScreenDpr)\n    }\n  }, [updateScreenSize, updateScreenDpr])\n\n  return { width, height, dpr }\n}\n","import React from 'react'\n\nexport default function mergeRefs<T>(...refs: React.Ref<T>[]): React.RefCallback<T> {\n  return (node) => {\n    for (const ref of refs) { // tslint:disable-line:no-loop-statement\n      if (ref === null) {\n        continue\n      }\n\n      // NOTE: 関数に `current` が設定されたものは React では callback ref と見なされるので、関数かどうかを先に調べる。\n      if (typeof ref === 'function') {\n        ref(node)\n      } else {\n        const mutableRef: React.MutableRefObject<T | null> = ref // FIXME\n\n        mutableRef.current = node // tslint:disable-line:no-object-mutation\n      }\n    }\n  }\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-components-LocaleSelect-classes__InputLabel--2e4qL {\\n  white-space: nowrap;\\n}\\n\\n.src-components-LocaleSelect-classes__Select--2XRfO {\\n  /* Silence is golden. */\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/LocaleSelect/classes.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,mBAAmB;AACrB;;AAEA;EACE,uBAAuB;AACzB\",\"sourcesContent\":[\".InputLabel {\\n  white-space: nowrap;\\n}\\n\\n.Select {\\n  /* Silence is golden. */\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"InputLabel\": \"src-components-LocaleSelect-classes__InputLabel--2e4qL\",\n\t\"Select\": \"src-components-LocaleSelect-classes__Select--2XRfO\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-components-PageTemplate-Nav-classes__List--Wtuz2 {\\n  overflow-y: auto;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/PageTemplate/Nav/classes.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,gBAAgB;AAClB\",\"sourcesContent\":[\".List {\\n  overflow-y: auto;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"List\": \"src-components-PageTemplate-Nav-classes__List--Wtuz2\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-components-PageTemplate-TopAppbar-classes__Spacer--11u3Z {\\n  flex-grow: 1;\\n}\\n\\n.src-components-PageTemplate-TopAppbar-classes__LocaleSelectLabel--1RjUX.src-components-PageTemplate-TopAppbar-classes__LocaleSelectLabel--1RjUX {\\n  color: currentColor\\n}\\n\\n.src-components-PageTemplate-TopAppbar-classes__LocaleSelectLabel--1RjUX.src-components-PageTemplate-TopAppbar-classes__LocaleSelectLabel--1RjUX.Mui-focused {\\n    opacity: 0.618;\\n    color: currentColor;\\n  }\\n\\n.src-components-PageTemplate-TopAppbar-classes__LocaleSelectInput--1iMs0.src-components-PageTemplate-TopAppbar-classes__LocaleSelectInput--1iMs0 {\\n  color: currentColor;\\n}\\n\\n.src-components-PageTemplate-TopAppbar-classes__LocaleSelectSelectIcon--2tFO9.src-components-PageTemplate-TopAppbar-classes__LocaleSelectSelectIcon--2tFO9 {\\n  color: currentColor;\\n}\\n\\n.src-components-PageTemplate-TopAppbar-classes__LocaleSelectInputUnderline--2c5cm.src-components-PageTemplate-TopAppbar-classes__LocaleSelectInputUnderline--2c5cm::before,\\n  .src-components-PageTemplate-TopAppbar-classes__LocaleSelectInputUnderline--2c5cm.src-components-PageTemplate-TopAppbar-classes__LocaleSelectInputUnderline--2c5cm:hover:not(.Mui-disabled)::before,\\n  .src-components-PageTemplate-TopAppbar-classes__LocaleSelectInputUnderline--2c5cm.src-components-PageTemplate-TopAppbar-classes__LocaleSelectInputUnderline--2c5cm::after {\\n    border-bottom-color: currentColor;\\n  }\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/PageTemplate/TopAppbar/classes.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,YAAY;AACd;;AAEA;EACE;AAMF;;AAJE;IACE,cAAc;IACd,mBAAmB;EACrB;;AAGF;EACE,mBAAmB;AACrB;;AAEA;EACE,mBAAmB;AACrB;;AAGE;;;IAGE,iCAAiC;EACnC\",\"sourcesContent\":[\".Spacer {\\n  flex-grow: 1;\\n}\\n\\n.LocaleSelectLabel.LocaleSelectLabel {\\n  color: currentColor;\\n\\n  &:global(.Mui-focused) {\\n    opacity: 0.618;\\n    color: currentColor;\\n  }\\n}\\n\\n.LocaleSelectInput.LocaleSelectInput {\\n  color: currentColor;\\n}\\n\\n.LocaleSelectSelectIcon.LocaleSelectSelectIcon {\\n  color: currentColor;\\n}\\n\\n.LocaleSelectInputUnderline.LocaleSelectInputUnderline {\\n  &::before,\\n  &:hover:not(:global(.Mui-disabled))::before,\\n  &::after {\\n    border-bottom-color: currentColor;\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"Spacer\": \"src-components-PageTemplate-TopAppbar-classes__Spacer--11u3Z\",\n\t\"LocaleSelectLabel\": \"src-components-PageTemplate-TopAppbar-classes__LocaleSelectLabel--1RjUX\",\n\t\"LocaleSelectInput\": \"src-components-PageTemplate-TopAppbar-classes__LocaleSelectInput--1iMs0\",\n\t\"LocaleSelectSelectIcon\": \"src-components-PageTemplate-TopAppbar-classes__LocaleSelectSelectIcon--2tFO9\",\n\t\"LocaleSelectInputUnderline\": \"src-components-PageTemplate-TopAppbar-classes__LocaleSelectInputUnderline--2c5cm\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-components-ToggleDarkButton-classes__Checkbox--2bu26,\\n.src-components-ToggleDarkButton-classes__Checkbox--2bu26.src-components-ToggleDarkButton-classes__Checked--2zZmX {\\n  color: unset;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/ToggleDarkButton/classes.css\"],\"names\":[],\"mappings\":\"AAAA;;EAEE,YAAY;AACd\",\"sourcesContent\":[\".Checkbox,\\n.Checkbox.Checked {\\n  color: unset;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"Checkbox\": \"src-components-ToggleDarkButton-classes__Checkbox--2bu26\",\n\t\"Checked\": \"src-components-ToggleDarkButton-classes__Checked--2zZmX\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n"],"sourceRoot":""}