{"version":3,"sources":["webpack://react-app-prototype/./node_modules/@material-ui/icons/FilterNone.js","webpack://react-app-prototype/./node_modules/@material-ui/icons/Mic.js","webpack://react-app-prototype/./node_modules/@material-ui/icons/MicNone.js","webpack://react-app-prototype/./src/lib/components/FormattedTimeOfDay/index.tsx","webpack://react-app-prototype/./src/components/CurrentTimeOfDay/index.tsx","webpack://react-app-prototype/./src/components/SetClockButton/messages.ts","webpack://react-app-prototype/./src/components/SetClockButton/index.tsx","webpack://react-app-prototype/./src/components/Today/index.tsx","webpack://react-app-prototype/./node_modules/@material-ui/core/esm/InputAdornment/InputAdornment.js","webpack://react-app-prototype/./src/lib/components/CopiableTextField/messages.ts","webpack://react-app-prototype/./src/lib/components/CopiableTextField/index.tsx","webpack://react-app-prototype/./src/lib/components/MicIncludedTextField/messages.ts","webpack://react-app-prototype/./src/lib/components/MicIncludedTextField/index.tsx","webpack://react-app-prototype/./src/components/App/HomePage/messages.ts","webpack://react-app-prototype/./src/components/App/HomePage/index.tsx","webpack://react-app-prototype/./node_modules/copy-to-clipboard/index.js","webpack://react-app-prototype/./node_modules/toggle-selection/index.js"],"names":["_interopRequireDefault","_interopRequireWildcard","exports","React","_default","default","createElement","d","props","weekday","undefined","era","year","month","day","connect","now","io","value","format","defineMessages","setTheClock","mapDispatchToProps","updateNow","Button","onClick","messages","InputAdornment","ref","children","classes","className","_props$component","component","Component","_props$disablePointer","disablePointerEvents","_props$disableTypogra","disableTypography","position","variantProp","variant","other","muiFormControl","FormControlContext","root","hiddenLabel","filled","positionStart","positionEnd","margin","marginDense","Typography","color","withStyles","display","height","maxHeight","alignItems","whiteSpace","marginTop","marginRight","marginLeft","pointerEvents","name","textCopied","copyText","ContentCopyIcon","style","restProps","FilterNone","transform","restStyle","Error","InputProps","formatMessage","useIntl","enqueueSnackbar","useSnackbar","input","useRef","handleClickCopyTextButton","useCallback","shouldBePresent","current","copy","useState","copyTextButtonDisabled","setCopyTextButtonDisabled","useEffect","TextField","inputRef","endAdornment","IconButton","disabled","Tooltip","title","typeWithYourVoice","stop","speechRecognitionErrorOccurred","onResult","fallback","locale","useSelector","state","localeSelector","listening","setListening","recognition","useMemo","globalThis","SpeechRecognition","tooltip","dir","useContext","IntlProviderContext","handleRecognitionStart","handleRecognitionEnd","handleRecognitionError","event","values","error","handleRecognitionResult","Array","from","results","map","result","transcript","join","scrollTop","scrollHeight","offsetHeight","scrollLeft","scrollWidth","offsetWidth","continuous","interimResults","maxAlternatives","addEventListener","removeEventListener","lang","handleMicChange","_event","checked","start","Checkbox","icon","MicNone","checkedIcon","Mic","onChange","home","createPage","text","setText","handleChange","target","handleResult","Helmet","deselectCurrent","clipboardToIE11Formatting","module","options","debug","message","reselectPrevious","range","selection","mark","success","document","createRange","getSelection","textContent","all","top","clip","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","e","stopPropagation","preventDefault","clipboardData","console","warn","window","clearData","setData","onCopy","body","appendChild","selectNodeContents","addRange","execCommand","err","copyKey","test","navigator","userAgent","replace","prompt","removeRange","removeAllRanges","removeChild","rangeCount","active","activeElement","ranges","i","push","getRangeAt","tagName","toUpperCase","blur","type","forEach","focus"],"mappings":"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","file":"assets/scripts/home.87141cc4.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z\"\n}), 'FilterNone');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 14c1.66 0 2.99-1.34 2.99-3L15 5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3zm5.3-3c0 3-2.54 5.1-5.3 5.1S6.7 14 6.7 11H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c3.28-.48 6-3.3 6-6.72h-1.7z\"\n}), 'Mic');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 14c1.66 0 2.99-1.34 2.99-3L15 5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3zm-1.2-9.1c0-.66.54-1.2 1.2-1.2.66 0 1.2.54 1.2 1.2l-.01 6.2c0 .66-.53 1.2-1.19 1.2-.66 0-1.2-.54-1.2-1.2V4.9zm6.5 6.1c0 3-2.54 5.1-5.3 5.1S6.7 14 6.7 11H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c3.28-.48 6-3.3 6-6.72h-1.7z\"\n}), 'MicNone');\n\nexports.default = _default;","import React from 'react'\nimport { CustomFormatConfig, FormattedTime } from 'react-intl'\n\ntype Props =\n  & Alt.Omit<Intl.DateTimeFormatOptions, /* 'dateStyle' |  */'weekday' | 'era' | 'year' | 'month' | 'day'>\n  & CustomFormatConfig\n  & {\n      value: string | number | Date | undefined\n    }\n\nconst FormattedTimeOfDay: React.FC<Props> = (props) => (\n  <FormattedTime\n    { ...props }\n    // dateStyle={ undefined }\n    weekday={ undefined }\n    era={ undefined }\n    year={ undefined }\n    month={ undefined }\n    day={ undefined }\n  />\n)\n\nexport default FormattedTimeOfDay\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport FormattedTimeOfDay from '~/lib/components/FormattedTimeOfDay'\nimport { State } from '~/redux'\n\ninterface StateProps {\n  now: Date\n}\n\ntype Props =\n  & StateProps\n\n// TODO: delete?\nconst CurrentTimeOfDay: React.FC<Props> = ({ now }) => (\n  <FormattedTimeOfDay value={ now } format=\"medium\" />\n)\n\n// connect\n\nconst mapStateToProps = ({ io: { now } }: State): StateProps => ({\n  now,\n})\n\nexport default connect(mapStateToProps)(CurrentTimeOfDay)\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  setTheClock: 'Set the clock',\n})\n","import Button from '@material-ui/core/Button'\nimport React from 'react'\nimport { FormattedMessage} from 'react-intl'\nimport { connect } from 'react-redux'\n\nimport { updateNow } from '~/redux/modules/io'\nimport messages from './messages'\n\ninterface DispatchProps {\n  updateNow(): void\n}\n\ntype Props =\n  & DispatchProps\n\n// TODO: delete\nconst SetClockButton: React.FC<Props> = ({ updateNow }) => (\n  <Button onClick={ updateNow }>\n    <FormattedMessage { ...messages.setTheClock } />\n  </Button>\n)\n\n// connect\n\nconst mapDispatchToProps: DispatchProps = {\n  updateNow,\n}\n\nexport default connect(null, mapDispatchToProps)(SetClockButton)\n","import React from 'react'\nimport { FormattedDate } from 'react-intl'\nimport { connect } from 'react-redux'\n\nimport { State } from '~/redux'\n\ninterface StateProps {\n  now: Date\n}\n\ntype Props =\n  & StateProps\n\n// TODO: delete?\nconst Today: React.FC<Props> = ({ now }) => (\n  <FormattedDate value={ now } format=\"medium\" />\n)\n\n// connect\n\nconst mapStateToProps = ({ io: { now } }: State): StateProps => ({\n  now,\n})\n\nexport default connect(mapStateToProps)(Today)\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Typography from '../Typography';\nimport withStyles from '../styles/withStyles';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    height: '0.01em',\n    // Fix IE 11 flexbox alignment. To remove at some point.\n    maxHeight: '2em',\n    alignItems: 'center',\n    whiteSpace: 'nowrap'\n  },\n\n  /* Styles applied to the root element if `variant=\"filled\"`. */\n  filled: {\n    '&$positionStart:not($hiddenLabel)': {\n      marginTop: 16\n    }\n  },\n\n  /* Styles applied to the root element if `position=\"start\"`. */\n  positionStart: {\n    marginRight: 8\n  },\n\n  /* Styles applied to the root element if `position=\"end\"`. */\n  positionEnd: {\n    marginLeft: 8\n  },\n\n  /* Styles applied to the root element if `disablePointerEvents=true`. */\n  disablePointerEvents: {\n    pointerEvents: 'none'\n  },\n\n  /* Styles applied if the adornment is used inside <FormControl hiddenLabel />. */\n  hiddenLabel: {},\n\n  /* Styles applied if the adornment is used inside <FormControl margin=\"dense\" />. */\n  marginDense: {}\n};\nvar InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disablePointer = props.disablePointerEvents,\n      disablePointerEvents = _props$disablePointer === void 0 ? false : _props$disablePointer,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      position = props.position,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"]);\n\n  var muiFormControl = useFormControl() || {};\n  var variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('Material-UI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  return /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, disablePointerEvents && classes.disablePointerEvents, muiFormControl.hiddenLabel && classes.hiddenLabel, variant === 'filled' && classes.filled, {\n      'start': classes.positionStart,\n      'end': classes.positionEnd\n    }[position], muiFormControl.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), typeof children === 'string' && !disableTypography ? /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\"\n  }, children) : children));\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes = {\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the input on click.\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  muiFormControl: PropTypes.object,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['start', 'end']),\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputAdornment'\n})(InputAdornment);","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  textCopied: 'Text copied.',\n  copyText: 'Copy text',\n})\n","import IconButton from '@material-ui/core/IconButton'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport TextField, { TextFieldProps } from '@material-ui/core/TextField'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport FilterNoneIcon from '@material-ui/icons/FilterNone'\nimport copy from 'copy-to-clipboard'\nimport { useSnackbar } from 'notistack'\nimport React, { useCallback, useEffect, useRef, useState } from 'react'\nimport { FormattedMessage, useIntl } from 'react-intl'\n\nimport { shouldBePresent } from '~/lib/asserters/commonAsserters'\nimport messages from './messages'\n\ninterface OwnProps {\n  InputProps?: Alt.Omit<NonNullable<TextFieldProps['InputProps']>, 'endAdornment'>\n}\n\n// ref は通せるようにしてもよさそう\ntype Props =\n  & Alt.Omit<TextFieldProps, 'inputRef' | 'InputProps'>\n  & OwnProps\n\n// TODO: @material-ui/icons/ContentCopy が実装されたら削除する\nconst ContentCopyIcon: React.FC<React.PropsOf<typeof FilterNoneIcon>> = ({ style, ...restProps }) => {\n  if (style === undefined) {\n    return <FilterNoneIcon style={ { transform: 'scaleY(-1)' } } { ...restProps } />\n  }\n\n  const { transform, ...restStyle } = style\n\n  if (transform !== undefined) {\n    throw new Error\n  }\n\n  return <FilterNoneIcon style={ { transform: 'scaleY(-1)', ...restStyle } } { ...restProps } />\n}\n\nconst CopiableTextField: React.FC<Props> = ({ InputProps, ...restProps }) => {\n  const { formatMessage } = useIntl()\n  const { enqueueSnackbar } = useSnackbar()\n  const input = useRef<HTMLInputElement>(null)\n\n  const handleClickCopyTextButton = useCallback(() => {\n    shouldBePresent(input.current)\n\n    if (input.current.value === '') {\n      return\n    }\n\n    copy(input.current.value) // TODO: await navigator.clipboard.writeText(input.current.value)\n\n    enqueueSnackbar(\n      <FormattedMessage { ...messages.textCopied } />\n    )\n  }, [enqueueSnackbar])\n\n  const [copyTextButtonDisabled, setCopyTextButtonDisabled] = useState(false)\n\n  // NOTE: render 後の input.current が必要なので、 useMemo ではなく useState + useEffect を使う。また、 ref は deps にできない。\n  useEffect(() => {\n    setCopyTextButtonDisabled(input.current === null || input.current.value === '')\n  })\n\n  return (\n    <TextField\n      inputRef={ input }\n      InputProps={ {\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            { !copyTextButtonDisabled ? (\n              <Tooltip title={ formatMessage(messages.copyText) }>\n                <IconButton onClick={ handleClickCopyTextButton }>\n                  <ContentCopyIcon />\n                </IconButton>\n              </Tooltip>\n            ) : (\n              <IconButton onClick={ handleClickCopyTextButton } disabled>\n                <ContentCopyIcon />\n              </IconButton>\n            ) }\n          </InputAdornment>\n        ),\n        ...InputProps,\n      } }\n      { ...restProps }\n    />\n  )\n}\n\nexport default CopiableTextField\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  typeWithYourVoice: 'Type with your voice…',\n  stop: 'Stop',\n  speechRecognitionErrorOccurred: 'Speech recognition error occurred: { error }',\n})\n","import Checkbox, { CheckboxProps } from '@material-ui/core/Checkbox'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport TextField, { TextFieldProps } from '@material-ui/core/TextField'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport MicIcon from '@material-ui/icons/Mic'\nimport MicNoneIcon from '@material-ui/icons/MicNone'\nimport { useSnackbar } from 'notistack'\nimport React, { useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react'\nimport { FormattedMessage, useIntl } from 'react-intl'\nimport { useSelector } from 'react-redux'\n\nimport IntlProviderContext from '~/lib/contexts/IntlProviderContext'\nimport { State } from '~/redux'\nimport messages from './messages'\n\ninterface OwnProps {\n  fallback?: React.ReactElement | null\n  onResult(event: SpeechRecognitionEvent, value: string): void\n  InputProps?: Alt.Omit<NonNullable<TextFieldProps['InputProps']>, 'endAdornment'>\n}\n\n// ref は通せるようにしてもよさそう\nexport type Props =\n  & Alt.Omit<TextFieldProps, 'inputRef' | 'InputProps'>\n  & OwnProps\n\nconst MicIncludedTextField: React.FC<Props> = ({ onResult, fallback, InputProps, ...restProps }) => {\n  const { formatMessage } = useIntl()\n  const input = useRef<HTMLInputElement>(null)\n  const locale = useSelector((state: State) => state.localeSelector.locale)\n  const [listening, setListening] = useState(false)\n  const recognition = useMemo(() => 'SpeechRecognition' in globalThis ? new SpeechRecognition() : null, [])\n  const tooltip = useMemo(() => listening ? formatMessage(messages.stop) : formatMessage(messages.typeWithYourVoice), [listening, formatMessage])\n  const { dir } = useContext(IntlProviderContext)\n  const { enqueueSnackbar } = useSnackbar()\n\n  const handleRecognitionStart = useCallback<NonNullable<SpeechRecognition['onstart']>>(() => {\n    setListening(true)\n  }, [])\n\n  const handleRecognitionEnd = useCallback<NonNullable<SpeechRecognition['onend']>>(() => {\n    setListening(false)\n  }, [])\n\n  const handleRecognitionError = useCallback<NonNullable<SpeechRecognition['onerror']>>((event) => {\n    enqueueSnackbar(<FormattedMessage { ...messages.speechRecognitionErrorOccurred } values={ { error: event.error } } />, {\n      variant: 'error',\n    })\n  }, [enqueueSnackbar])\n\n  const handleRecognitionResult = useCallback<NonNullable<SpeechRecognition['onresult']>>((event) => {\n    if (input.current === null || dir == null) {\n      return\n    }\n\n    onResult(event, Array.from(event.results).map(result => result[0].transcript).join('')) // TODO: result.isFinal な result をメモしてパフォーマンスを改善させる。\n\n    /* tslint:disable:no-object-mutation */\n    input.current.scrollTop = input.current.scrollHeight - input.current.offsetHeight\n\n    switch (dir) {\n      case 'ltr':\n        input.current.scrollLeft = input.current.scrollWidth - input.current.offsetWidth\n        break\n      case 'rtl':\n        input.current.scrollLeft = -(input.current.scrollWidth - input.current.offsetWidth)\n    }\n    /* tslint:enable:no-object-mutation */\n  }, [onResult, dir])\n\n  useEffect(() => {\n    if (recognition === null) {\n      return\n    }\n\n    /* tslint:disable:no-object-mutation */\n    recognition.continuous = true\n    recognition.interimResults = true\n    recognition.maxAlternatives = 1\n    /* tslint:enable:no-object-mutation */\n\n    recognition.addEventListener('start', handleRecognitionStart)\n    recognition.addEventListener('end', handleRecognitionEnd)\n    recognition.addEventListener('error', handleRecognitionError)\n    recognition.addEventListener('result', handleRecognitionResult)\n\n    return () => {\n      recognition.removeEventListener('start', handleRecognitionStart)\n      recognition.removeEventListener('end', handleRecognitionEnd)\n      recognition.removeEventListener('error', handleRecognitionError)\n      recognition.removeEventListener('result', handleRecognitionResult)\n    }\n  }, [recognition, handleRecognitionStart, handleRecognitionEnd, handleRecognitionError, handleRecognitionResult])\n\n  // NOTE: locale は recognition やイベントハンドラーと比べると変わりやすい。\n  useEffect(() => {\n    if (recognition === null) {\n      return\n    }\n\n    recognition.stop() // NOTE: recognition の言語を途中で変更することはできないので、 locale が変更されたら停止する。\n\n    recognition.lang = locale // tslint:disable-line:no-object-mutation\n  }, [recognition, locale])\n\n  const handleMicChange = useCallback<NonNullable<CheckboxProps['onChange']>>((_event, checked) => {\n    if (recognition === null) {\n      return\n    }\n\n    setListening(checked) // NOTE: recognitionstart/recognitionend でも同じことを行うが、 change で変更しないと状態がおかしくなることがある。\n\n    if (checked) {\n      recognition.start()\n    } else {\n      recognition.stop()\n    }\n  }, [recognition])\n\n  if (recognition === null && fallback !== undefined) {\n    return fallback\n  }\n\n  return (\n    <TextField\n      inputRef={ input }\n      InputProps={ {\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <Tooltip title={ tooltip }>\n              <Checkbox\n                color=\"default\"\n                icon={ <MicNoneIcon /> }\n                checkedIcon={ <MicIcon /> }\n                checked={ listening }\n                onChange={ handleMicChange }\n              />\n            </Tooltip>\n          </InputAdornment>\n        ),\n        ...InputProps,\n      } }\n      { ...restProps }\n    />\n  )\n}\n\nexport default MicIncludedTextField\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  home: 'Home',\n})\n","import Typography from '@material-ui/core/Typography'\nimport React, { useCallback, useState } from 'react'\nimport Helmet from 'react-helmet'\nimport { FormattedNumber, useIntl } from 'react-intl'\n\nimport CurrentTimeOfDay from '~/components/CurrentTimeOfDay'\nimport { createPage } from '~/components/PageTemplate'\nimport SetClockButton from '~/components/SetClockButton'\nimport Today from '~/components/Today'\nimport CopiableTextField from '~/lib/components/CopiableTextField'\nimport MicIncludedTextField, { Props as MicIncludedTextFieldProps } from '~/lib/components/MicIncludedTextField'\nimport messages from './messages'\n\nconst HomePage: React.FC = () => {\n  const { formatMessage } = useIntl()\n  const [text, setText] = useState('')\n\n  const handleChange = useCallback<React.ChangeEventHandler<HTMLInputElement>>((event) => {\n    setText(event.target.value)\n  }, [])\n\n  const handleResult = useCallback<MicIncludedTextFieldProps['onResult']>((_event, value) => {\n    setText(value)\n  }, [])\n\n  return (\n    <>\n      <Helmet title={ formatMessage(messages.home) } />\n      <Typography>\n        <FormattedNumber format=\"usd\" value={ 100 } />\n      </Typography>\n      <Typography>\n        <Today /> <CurrentTimeOfDay />\n      </Typography>\n      <SetClockButton />\n      <CopiableTextField value={ text } onChange={ handleChange } />\n      <MicIncludedTextField value={ text } onChange={ handleChange } onResult={ handleResult } fallback={ null } />\n    </>\n  )\n}\n\nexport default createPage(HomePage)\n","\"use strict\";\n\nvar deselectCurrent = require(\"toggle-selection\");\n\nvar clipboardToIE11Formatting = {\n  \"text/plain\": \"Text\",\n  \"text/html\": \"Url\",\n  \"default\": \"Text\"\n}\n\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"⌘\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n    message,\n    reselectPrevious,\n    range,\n    selection,\n    mark,\n    success = false;\n  if (!options) {\n    options = {};\n  }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement(\"span\");\n    mark.textContent = text;\n    // reset user styles for span element\n    mark.style.all = \"unset\";\n    // prevents scrolling to the end of the page\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\";\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = \"pre\";\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function(e) {\n      e.stopPropagation();\n      if (options.format) {\n        e.preventDefault();\n        if (typeof e.clipboardData === \"undefined\") { // IE 11\n          debug && console.warn(\"unable to use e.clipboardData\");\n          debug && console.warn(\"trying IE specific stuff\");\n          window.clipboardData.clearData();\n          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"]\n          window.clipboardData.setData(format, text);\n        } else { // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n\n    document.body.appendChild(mark);\n\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand(\"copy\");\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n","\nmodule.exports = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n"],"sourceRoot":""}