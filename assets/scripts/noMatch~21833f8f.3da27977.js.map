{"version":3,"sources":["webpack:///./src/components/App/NoMatch/index.tsx","webpack:///./src/lib/identity.ts","webpack:///./src/lib/guards/commonGuards.ts","webpack:///./src/components/Nav/classes.css?5ee4","webpack:///./src/components/Nav/classes.css","webpack:///./src/components/DarkSwitch/index.tsx","webpack:///./src/components/LocaleSelect/messages.ts","webpack:///./src/components/LocaleSelect/index.tsx","webpack:///./src/lib/languageNameSolver/index.ts","webpack:///./src/lib/components/Link/index.tsx","webpack:///./src/lib/components/MenuItemLink/index.tsx","webpack:///./src/components/Nav/messages.ts","webpack:///./src/components/Nav/index.tsx","webpack:///./src/lib/components/ErrorBoundary/index.ts","webpack:///./src/templates/PageTemplate/index.tsx"],"names":["createPage","pathname","location","Error","typed","isOneOf","options","input","some","option","optional","isT","undefined","api","content","__esModule","default","module","i","exports","locals","___CSS_LOADER_API_IMPORT___","push","DarkSwitch","useContext","ThemeProviderContext","dark","setDark","handleChange","useCallback","_event","checked","onChange","defineMessages","languages","mapDispatchToProps","selectLocale","connect","locale","localeSelector","classes","FormControlProps","useState","labelWidth","setLabelWidth","inputId","useMemo","v4","theme","useTheme","variant","props","MuiFormControl","rootClassName","classnames","root","className","labelClassName","label","inputClassName","selectIconClassName","selectIcon","inputUnderlineClassName","inputUnderline","inputLabel","node","offsetWidth","event","tag","target","value","tagNativeNameMap","availableLocales","IntlProviderContext","ref","htmlFor","messages","icon","native","id","inputProps","standard","underline","outlined","filled","map","availableLocale","key","isTypographyColor","RouterLinkWithRef","React","forwardRef","innerRef","Link","this","color","restProps","component","console","warn","Component","MenuItemLink","menuItem","to","button","menuItemProps","LinkWithRef","linkProps","link","home","chess","counter","info","paint","reminder","Nav","anchorEl","setAnchorEl","openMenu","currentTarget","closeMenu","position","edge","onClick","Spacer","LocaleSelectLabel","LocaleSelectInput","LocaleSelectSelectIcon","LocaleSelectInputUnderline","open","onClose","ErrorBoundary","state","hasError","renderError","children","error","getDerivedStateFromError","PageTemplate","String","TypeError","Body"],"mappings":"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","file":"assets/scripts/noMatch~21833f8f.3da27977.js","sourcesContent":["import React from 'react'\nimport { RouteComponentProps } from 'react-router'\n\nimport typed from '~/lib/typed'\nimport { createPage } from '~/templates/PageTemplate'\n\ntype Props =\n  & RouteComponentProps\n\nconst NoMatch: React.FC<Props> = ({ location: { pathname } }) => {\n  throw new Error(typed<[string]>`No route matches ${ pathname }.`)\n}\n\nexport default createPage(NoMatch)\n","const identity = <T extends U, U>(it: T): U => it\n\nexport default identity\n","import identity from '~/lib/identity'\n\nexport const isOneOf = <T extends readonly Json[]>(...options: T) => (input: unknown): input is T[number] => options.some((option) => option === input)\n\nexport const optional = <A extends unknown, T extends A>(isT: (input: A) => input is T) => (input: A | undefined): input is T | undefined => {\n  if (input === undefined) {\n    return true\n  }\n\n  return isT(input)\n}\n\nexport const isObject = <A extends B, T extends A, B = A>(isT: (input: B) => Record<keyof A, boolean>) => (input: A): input is T => {\n  return Object.values<boolean>(isT(input)).every(identity)\n}\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--5-1!../../../node_modules/postcss-loader/src/index.js!./classes.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".src-components-Nav-classes__Spacer--36ovl {\\n  flex-grow: 1;\\n}\\n\\n.src-components-Nav-classes__LocaleSelectLabel--3h3DV.src-components-Nav-classes__LocaleSelectLabel--3h3DV {\\n  color: currentColor\\n}\\n\\n.src-components-Nav-classes__LocaleSelectLabel--3h3DV.src-components-Nav-classes__LocaleSelectLabel--3h3DV.Mui-focused {\\n    opacity: 0.618;\\n    color: currentColor;\\n  }\\n\\n.src-components-Nav-classes__LocaleSelectInput--3oNu1.src-components-Nav-classes__LocaleSelectInput--3oNu1 {\\n  color: currentColor;\\n}\\n\\n.src-components-Nav-classes__LocaleSelectSelectIcon--2AyFk.src-components-Nav-classes__LocaleSelectSelectIcon--2AyFk {\\n  color: currentColor;\\n}\\n\\n.src-components-Nav-classes__LocaleSelectInputUnderline--2WFrx.src-components-Nav-classes__LocaleSelectInputUnderline--2WFrx::before,\\n  .src-components-Nav-classes__LocaleSelectInputUnderline--2WFrx.src-components-Nav-classes__LocaleSelectInputUnderline--2WFrx:hover:not(.Mui-disabled)::before,\\n  .src-components-Nav-classes__LocaleSelectInputUnderline--2WFrx.src-components-Nav-classes__LocaleSelectInputUnderline--2WFrx::after {\\n    border-bottom-color: currentColor;\\n  }\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"Spacer\": \"src-components-Nav-classes__Spacer--36ovl\",\n\t\"LocaleSelectLabel\": \"src-components-Nav-classes__LocaleSelectLabel--3h3DV\",\n\t\"LocaleSelectInput\": \"src-components-Nav-classes__LocaleSelectInput--3oNu1\",\n\t\"LocaleSelectSelectIcon\": \"src-components-Nav-classes__LocaleSelectSelectIcon--2AyFk\",\n\t\"LocaleSelectInputUnderline\": \"src-components-Nav-classes__LocaleSelectInputUnderline--2WFrx\"\n};\nmodule.exports = exports;\n","import React, { useCallback, useContext } from 'react'\n\nimport Switch from '@material-ui/core/Switch'\n\nimport ThemeProviderContext from '~/contexts/ThemeProviderContext'\n\nconst DarkSwitch = () => {\n  const { dark, setDark } = useContext(ThemeProviderContext)\n\n  if (dark == null || setDark == null) {\n    throw new Error //\n  }\n\n  const handleChange = useCallback((_event, checked) => {\n    setDark(checked)\n  }, [setDark])\n\n  return (\n    <Switch checked={ dark } onChange={ handleChange } />\n  )\n}\n\nexport default DarkSwitch\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  languages: 'Languages',\n})\n","import classnames from 'classnames'\nimport React, { useCallback, useContext, useMemo, useState } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { connect } from 'react-redux'\nimport { v4 } from 'uuid'\n\nimport FilledInput from '@material-ui/core/FilledInput'\nimport FormControl, { FormControlProps } from '@material-ui/core/FormControl'\nimport Input from '@material-ui/core/Input'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport OutlinedInput from '@material-ui/core/OutlinedInput'\nimport Select, { SelectProps } from '@material-ui/core/Select'\nimport { useTheme } from '@material-ui/core/styles'\n\nimport IntlProviderContext from '~/lib/contexts/IntlProviderContext'\nimport { Tag, getNativeNameByTag, isTag } from '~/lib/languageNameSolver'\nimport { State } from '~/redux'\nimport { selectLocale } from '~/redux/modules/localeSelector'\nimport messages from './messages'\n\ninterface OwnProps {\n  classes?: {\n    root?: string\n    label?: string\n    input?: string\n    selectIcon?: string\n    inputUnderline?: string\n  } | null\n  FormControlProps?: FormControlProps | null\n}\n\ninterface StateProps {\n  locale: Tag\n}\n\ninterface DispatchProps {\n  selectLocale(locale: Tag): void\n}\n\ntype Props =\n  & OwnProps\n  & StateProps\n  & DispatchProps\n\nexport /* for testing */ const LocaleSelect: React.FC<Props> = ({ classes, FormControlProps, locale, selectLocale }) => {\n  const [labelWidth, setLabelWidth] = useState<number>(0)\n  const inputId = useMemo(v4, [])\n  const theme = useTheme()\n\n  // NOTE: Fortunately, FormControl is nothing but FormControl.\n  const variant = useMemo(() => FormControlProps?.variant ?? theme?.props?.MuiFormControl?.variant ?? 'standard', [FormControlProps?.variant, theme?.props?.MuiFormControl?.variant])\n\n  const rootClassName = useMemo(() => classnames(classes?.root, FormControlProps?.className), [classes?.root, FormControlProps?.className])\n  const labelClassName = useMemo(() => classnames(classes?.label), [classes?.label])\n  const inputClassName = useMemo(() => classnames(classes?.input), [classes?.input])\n  const selectIconClassName = useMemo(() => classnames(classes?.selectIcon), [classes?.selectIcon])\n  const inputUnderlineClassName = useMemo(() => classnames(classes?.inputUnderline), [classes?.inputUnderline])\n\n  const inputLabel = useCallback((node: HTMLLabelElement | null) => { // TODO: type\n    if (node !== null) {\n      setLabelWidth(node.offsetWidth)\n    }\n  }, [])\n\n  const handleChange = useCallback<NonNullable<SelectProps['onChange']>>((event) => {\n    if (isTag(event.target.value)) {\n      selectLocale(event.target.value)\n    }\n  }, [selectLocale])\n\n  const { availableLocales } = useContext(IntlProviderContext)\n\n  return (\n    <FormControl\n      { ...FormControlProps }\n      className={ rootClassName } // NOTE: overrides FormControlProps.className\n    >\n      <InputLabel className={ labelClassName } ref={ inputLabel } htmlFor={ inputId }>\n        <FormattedMessage { ...messages.languages } />\n      </InputLabel>\n      <Select\n        classes={ {\n          icon: selectIconClassName,\n        } }\n        native\n        labelWidth={ labelWidth }\n        value={ locale }\n        onChange={ handleChange }\n        id={ inputId }\n        inputProps={ { 'data-testid': 'localeSelect' } }\n        input={ {\n          standard: (\n            <Input\n              className={ inputClassName }\n              classes={ {\n                underline: inputUnderlineClassName,\n              } }\n            />\n          ),\n          outlined: <OutlinedInput className={ inputClassName } labelWidth={ labelWidth } />,\n          filled: <FilledInput className={ inputClassName } />,\n        }[variant] }\n      >\n        { availableLocales?.map((availableLocale, i) => (\n          <option key={ i } value={ availableLocale }>{ getNativeNameByTag(availableLocale) }</option>\n        )) }\n      </Select>\n    </FormControl>\n  )\n}\n\n// connect\n\nconst mapStateToProps = ({ localeSelector: { locale } }: State): StateProps => ({\n  locale,\n})\n\nconst mapDispatchToProps: DispatchProps = {\n  selectLocale,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LocaleSelect)\n","import tagNativeNameMap from './__data__/tagNativeNameMap.json'\n\nexport type Tag = keyof typeof tagNativeNameMap\n\nexport function isTag(tag: unknown): tag is Tag {\n  return typeof tag === 'string' && tag in tagNativeNameMap\n}\n\nexport function getNativeNameByTag(tag: Tag) {\n  return tagNativeNameMap[tag]\n}\n","import React from 'react'\nimport { Link as RouterLink, LinkProps as RouterLinkProps } from 'react-router-dom'\n\nimport MuiLink, { LinkProps as MuiLinkProps } from '@material-ui/core/Link'\n\nimport { isOneOf, optional } from '~/lib/guards/commonGuards'\nimport typed from '~/lib/typed'\n\nexport type Props =\n  & RouterLinkProps\n  & Alt.Omit<MuiLinkProps, 'color' | 'ref'>\n\nconst isTypographyColor = optional(isOneOf('initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error'))\n\n// TODO: delete this; See also https://material-ui.com/guides/composition/#link\nconst RouterLinkWithRef = React.forwardRef<HTMLAnchorElement, RouterLinkProps>((props, ref) => (\n  <RouterLink innerRef={ ref } { ...props } />\n))\n\nexport default class Link extends React.Component<Props> {\n  public render() {\n    const { color, ...restProps } = this.props\n\n    if (!isTypographyColor(color)) {\n      console.warn(typed<[string]>`${ color } is not a Material-UI Typography color.`) // tslint:disable-line:no-console\n\n      return (\n        <MuiLink component={ RouterLinkWithRef } { ...restProps } />\n      )\n    }\n\n    return (\n      <MuiLink component={ RouterLinkWithRef } color={ color } { ...restProps } />\n    )\n  }\n}\n","import * as React from 'react'\n\nimport MenuItem, { MenuItemProps } from '@material-ui/core/MenuItem'\n\nimport Link, { Props as LinkProps } from '~/lib/components/Link'\n\ntype Props = MenuItemProps<typeof Link, { button?: true }>\n\nconst MenuItemLink: React.FC<Props> = React.forwardRef<Link, React.PropsWithoutRef<Props>>(({ to, button, innerRef, ...menuItemProps }, menuItem) => {\n  // See https://material-ui.com/guides/composition/#link\n  const LinkWithRef = React.forwardRef<Link, LinkProps>((linkProps, link) => (\n    <Link ref={ link } innerRef={ innerRef } color=\"inherit\" underline=\"none\" { ...linkProps } />\n  ))\n\n  return (\n    <MenuItem button component={ LinkWithRef } to={ to } ref={ menuItem } { ...menuItemProps } />\n  )\n})\n\nexport default MenuItemLink\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  home: 'home',\n  chess: 'chess',\n  counter: 'counter',\n  info: 'info',\n  paint: 'paint',\n  reminder: 'reminder',\n})\n","// import classnames from 'classnames'\nimport React, { useCallback, useState } from 'react'\nimport { FormattedMessage } from 'react-intl'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Menu from '@material-ui/core/Menu'\nimport Toolbar from '@material-ui/core/Toolbar'\n// import { createStyles, makeStyles } from '@material-ui/core/styles'\nimport MenuIcon from '@material-ui/icons/Menu'\n\nimport DarkSwitch from '~/components/DarkSwitch'\nimport LocaleSelect from '~/components/LocaleSelect' // TODO\nimport MenuItemLink from '~/lib/components/MenuItemLink'\nimport classes from './classes.css'\nimport messages from './messages'\n\nconst Nav: React.FC = () => {\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null)\n\n  const openMenu = useCallback<React.MouseEventHandler<HTMLButtonElement>>((event) => {\n    setAnchorEl(event.currentTarget)\n  }, [])\n\n  const closeMenu = useCallback(() => {\n    setAnchorEl(null)\n  }, [])\n\n  return (\n    <>\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" onClick={ openMenu }>\n            <MenuIcon />\n          </IconButton>\n          <div className={ classes.Spacer } />\n          <DarkSwitch />\n          <LocaleSelect\n            classes={ {\n              label: classes.LocaleSelectLabel,\n              input: classes.LocaleSelectInput,\n              selectIcon: classes.LocaleSelectSelectIcon,\n              inputUnderline: classes.LocaleSelectInputUnderline,\n            } }\n            FormControlProps={ {\n              variant: 'filled',\n            } }\n          />\n        </Toolbar>\n      </AppBar>\n      <Menu open={ anchorEl !== null } anchorEl={ anchorEl } onClose={ closeMenu }>\n        <MenuItemLink to=\"/\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.home } />\n        </MenuItemLink>\n        <MenuItemLink to=\"/chess\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.chess } />\n        </MenuItemLink>\n        <MenuItemLink to=\"/counter\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.counter } />\n        </MenuItemLink>\n        <MenuItemLink to=\"/info\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.info } />\n        </MenuItemLink>\n        <MenuItemLink to=\"/paint\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.paint } />\n        </MenuItemLink>\n        <MenuItemLink to=\"/reminder\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.reminder } />\n        </MenuItemLink>\n      </Menu>\n    </>\n  )\n}\n\nexport default Nav\n","import React from 'react'\n\ninterface Props {\n  /**\n   * @param children that throws {error}\n   */\n  renderError(error: unknown, children: React.ReactNode): React.ReactNode\n}\n\ninterface State {\n  hasError: boolean\n  error?: unknown\n}\n\nclass ErrorBoundary extends React.Component<Props, State> {\n\n  // NOTE: https://github.com/DefinitelyTyped/DefinitelyTyped/blob/826ce0f1ce1d1887d199986283630d6f63075ad5/types/react/index.d.ts#L419 にも関わらず、初期化されていない state は null であるため、初期化を強制するためにプロパティ宣言を行う。\n  public state: Readonly<State> = {\n    hasError: false,\n  }\n\n  public static getDerivedStateFromError = (error: unknown) => ({\n    hasError: true,\n    error,\n  })\n\n  public render() {\n    const { renderError, children } = this.props\n    const { hasError, error } = this.state\n\n    if (hasError) {\n      return renderError(error, children)\n    }\n\n    return children\n  }\n}\n\nexport default ErrorBoundary\n","import React, { useCallback } from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\n\nimport Nav from '~/components/Nav'\nimport ErrorBoundary from '~/lib/components/ErrorBoundary'\nimport typed from '~/lib/typed'\n\ninterface PageTemplateProps {\n  children: React.ReactElement<BodyProps, React.ComponentType<BodyProps>>\n}\n\ntype BodyProps = PageProps\n\ntype PageProps =\n  & RouteComponentProps\n\nconst PageTemplate: React.FC<PageTemplateProps> = ({ children }) => {\n  const renderError = useCallback((error: unknown) => {\n    if (error instanceof Error) {\n      return typed<[string]>`${ String(error) }`\n    }\n\n    throw new TypeError(typed<[string]>`${ String(error) } is not an error.`)\n  }, [])\n\n  return (\n    <>\n      <Nav />\n      <ErrorBoundary renderError={ renderError }>\n        { children }\n      </ErrorBoundary>\n    </>\n  )\n}\n\nexport const createPage: (Body: React.FC<BodyProps>) => React.FC<PageProps> = (Body) => (props) => (\n  <PageTemplate>\n    <Body { ...props } />\n  </PageTemplate>\n)\n\nexport default PageTemplate\n"],"sourceRoot":""}