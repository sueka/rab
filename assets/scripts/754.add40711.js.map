{"version":3,"sources":["webpack://rap/./src/atoms/notificationsState.ts","webpack://rap/./src/lib/components/ErrorBoundary/index.ts","webpack://rap/./src/lib/components/Link/index.tsx","webpack://rap/./src/lib/components/ListItemLink/index.tsx","webpack://rap/./src/components/PageTemplate/Nav/classes.css?4e16","webpack://rap/./src/components/PageTemplate/Nav/messages.ts","webpack://rap/./src/components/PageTemplate/Nav/index.tsx","webpack://rap/./src/components/LocaleSelect/classes.css?b291","webpack://rap/./src/components/LocaleSelect/messages.ts","webpack://rap/./src/components/LocaleSelect/index.tsx","webpack://rap/./src/lib/languageNameSolver/index.ts","webpack://rap/./src/atoms/notificationsSortState.ts","webpack://rap/./src/selectors/sortedNotificationsState.ts","webpack://rap/./src/components/NotificationList/NotificationListItem/index.tsx","webpack://rap/./src/components/NotificationList/index.tsx","webpack://rap/./src/components/ToggleDarkButton/classes.css?6c28","webpack://rap/./src/components/ToggleDarkButton/messages.ts","webpack://rap/./src/components/ToggleDarkButton/index.tsx","webpack://rap/./src/components/PageTemplate/TopAppbar/classes.css?1b0e","webpack://rap/./src/components/PageTemplate/TopAppbar/messages.ts","webpack://rap/./src/components/PageTemplate/TopAppbar/index.tsx","webpack://rap/./src/components/PageTemplate/index.tsx","webpack://rap/./src/lib/guards/commonGuards.ts","webpack://rap/./src/lib/hooks/useRefsMerged.ts","webpack://rap/./src/lib/hooks/useScreen.ts","webpack://rap/./src/components/LocaleSelect/classes.css","webpack://rap/./src/components/PageTemplate/Nav/classes.css","webpack://rap/./src/components/PageTemplate/TopAppbar/classes.css","webpack://rap/./src/components/ToggleDarkButton/classes.css"],"names":["notificationsState","atom","key","default","effects_UNSTABLE","onSet","newNotifications","Array","isArray","Error","length","FaviconNotification","ErrorBoundary","state","hasError","this","props","renderError","children","error","React","getDerivedStateFromError","isTypographyColor","optional","isOneOf","RouterLinkWithRef","ref","innerRef","Link","color","restProps","component","console","warn","typed","listItem","to","button","listItemProps","LinkWithRef","linkProps","link","underline","ListItem","options","defineMessages","home","components","formControls","apps","chess","clock","counter","info","paint","reminder","settings","useStyles","makeStyles","theme","DrawerHeader","mixins","gutters","height","topAppbarHeight","undefined","display","alignItems","justifyContent","name","FlippedListIcon","style","transform","restStyle","open","onClose","dir","useContext","IntlProviderContext","RtlFriendlyListIcon","useMemo","shouldBePresent","ListIcon","jssClasses","Drawer","anchor","PaperProps","className","IconButton","edge","onClick","Menu","Divider","List","classes","ListItemIcon","Home","ListItemText","messages","ListSubheader","TextFields","icon","chessPawn","width","Info","Brush","Settings","language","Select","minWidth","selectMinWidth","mapDispatchToProps","selectLocale","connect","locale","localeSelector","propClasses","FormControlProps","useState","labelWidth","setLabelWidth","setSelectMinWidth","inputId","v4","useTheme","variant","MuiFormControl","rootClassName","classnames","root","labelClassName","label","cssClasses","selectSelectClassName","inputClassName","input","selectIconClassName","selectIcon","inputUnderlineClassName","inputUnderline","inputLabel","useRef","select","useEffect","current","offsetWidth","selectSelect","querySelector","HTMLDivElement","rect","getBoundingClientRect","globalThis","getComputedStyle","paddingInlineStart","parseFloat","paddingLeft","paddingRight","paddingInlineEnd","handleChange","useCallback","event","tag","target","value","tagNativeNameMap","availableLocales","FormControl","InputLabel","htmlFor","onChange","id","inputProps","standard","Input","outlined","OutlinedInput","filled","FilledInput","map","availableLocale","i","MenuItem","by","in","selector","get","notifications","sort","notificationsSortState","sorted","notification","reverse","handleDeleteButtonClick","close","primary","title","secondary","timestamp","format","ListItemSecondaryAction","Delete","useRecoilValue","sortedNotificationsState","n","toggleLightDarkTheme","useRecoilState","darkState","dark","setDark","defaultDark","DefaultDarkContext","handleOn","handleOff","Tooltip","Brightness7","Brightness4","showNotifications","Offset","forwardedRef","onMenuIconButtonClick","screenWidth","useScreen","setHeight","ownRef","node","useRefsMerged","notificationsOpen","setNotificationsOpen","handleNotificationsShow","handleNotificationsClose","AppBar","position","Toolbar","Box","mx","disableFocusListener","disableHoverListener","disableTouchListener","disabled","Badge","badgeContent","Notifications","Popover","anchorEl","anchorOrigin","horizontal","vertical","transformOrigin","PageTemplate","String","TypeError","drawerOpen","setDrawerOpen","drawerRef","setTopAppbarHeight","topAppbarRef","topAppbarRect","openDrawer","closeDrawer","createPage","Body","some","option","isT","refs","setWidth","dpr","setDpr","updateScreenSize","innerWidth","innerHeight","updateScreenDpr","devicePixelRatio","addEventListener","removeEventListener","___CSS_LOADER_EXPORT___","push","module","locals"],"mappings":"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","file":"assets/scripts/754.add40711.js","sourcesContent":["import FaviconNotification from 'favicon-notification'\nimport { atom } from 'recoil'\n\nconst notificationsState = atom<Notification[]>({\n  key: 'notificationsState',\n  default: [],\n  effects_UNSTABLE: [\n    ({ onSet }) => {\n      onSet(newNotifications => {\n        if (!Array.isArray(newNotifications)) {\n          throw new Error\n        }\n\n        if (newNotifications.length !== 0) {\n          FaviconNotification.add()\n        } else {\n          FaviconNotification.remove()\n        }\n      })\n    },\n  ],\n})\n\nexport default notificationsState\n","import React from 'react'\n\ninterface Props {\n  /**\n   * @param children that throws `error`\n   */\n  renderError(error: unknown, children: React.ReactNode): React.ReactNode\n}\n\ninterface State {\n  hasError: boolean\n  error?: unknown\n}\n\nclass ErrorBoundary extends React.Component<Props, State> {\n\n  // NOTE: https://github.com/DefinitelyTyped/DefinitelyTyped/blob/826ce0f1ce1d1887d199986283630d6f63075ad5/types/react/index.d.ts#L419 にも関わらず、初期化されていない state は null であるため、初期化を強制するためにプロパティ宣言を行う。\n  public state: Readonly<State> = {\n    hasError: false,\n  }\n\n  public static getDerivedStateFromError = (error: unknown) => ({\n    hasError: true,\n    error,\n  })\n\n  public render() {\n    const { renderError, children } = this.props\n    const { hasError, error } = this.state\n\n    if (hasError) {\n      return renderError(error, children)\n    }\n\n    return children\n  }\n}\n\nexport default ErrorBoundary\n","import MuiLink, { LinkProps as MuiLinkProps } from '@material-ui/core/Link'\nimport React from 'react'\nimport { Link as RouterLink, LinkProps as RouterLinkProps } from 'react-router-dom'\n\nimport { isOneOf, optional } from '~/lib/guards/commonGuards'\nimport typed from '~/lib/typed'\n\nexport type Props =\n  & RouterLinkProps\n  & Alt.Omit<MuiLinkProps, 'color' | 'ref'>\n\nconst isTypographyColor = optional(isOneOf('initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error'))\n\n// TODO: Delete; See also https://material-ui.com/guides/composition/#link\nconst RouterLinkWithRef = React.forwardRef<HTMLAnchorElement, RouterLinkProps>((props, ref) => (\n  <RouterLink innerRef={ ref } { ...props } />\n))\n\nexport default class Link extends React.Component<Props> {\n  public render() {\n    const { color, ...restProps } = this.props\n\n    if (!isTypographyColor(color)) {\n      console.warn(typed<[string]>`${ color } is not a Material-UI Typography color.`) // tslint:disable-line:no-console\n\n      return (\n        <MuiLink component={ RouterLinkWithRef } { ...restProps } />\n      )\n    }\n\n    return (\n      <MuiLink component={ RouterLinkWithRef } color={ color } { ...restProps } />\n    )\n  }\n}\n","import ListItem, { ListItemProps } from '@material-ui/core/ListItem'\nimport * as React from 'react'\n\nimport Link, { Props as LinkProps } from '~/lib/components/Link'\n\ntype Props = ListItemProps<typeof Link, { button?: true }>\n\nconst ListItemLink: React.FC<Props> = React.forwardRef<Link, React.PropsWithoutRef<Props>>(({ to, button, innerRef, ...listItemProps }, listItem) => {\n  // See https://material-ui.com/guides/composition/#link\n  const LinkWithRef = React.forwardRef<Link, LinkProps>((linkProps, link) => (\n    <Link ref={ link } innerRef={ innerRef } color=\"inherit\" underline=\"none\" { ...linkProps } />\n  ))\n\n  return (\n    <ListItem button component={ LinkWithRef } to={ to } ref={ listItem } { ...listItemProps } />\n  )\n})\n\nexport default ListItemLink\n","import api from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js!./classes.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  home: 'Home',\n  components: 'Components',\n  formControls: 'Form controls',\n  apps: 'Apps',\n  chess: 'Chess',\n  clock: 'Clock',\n  counter: 'Counter',\n  info: 'Info',\n  paint: 'Paint',\n  reminder: 'Reminder',\n  settings: 'Settings',\n})\n","import chessPawn from '@iconify/icons-mdi/chess-pawn'\nimport clock from '@iconify/icons-mdi/clock'\nimport counter from '@iconify/icons-mdi/counter'\nimport { Icon } from '@iconify/react'\nimport Divider from '@material-ui/core/Divider'\nimport Drawer from '@material-ui/core/Drawer'\nimport IconButton from '@material-ui/core/IconButton'\nimport List from '@material-ui/core/List'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListSubheader from '@material-ui/core/ListSubheader'\nimport { Theme, makeStyles } from '@material-ui/core/styles'\nimport BrushIcon from '@material-ui/icons/Brush'\nimport HomeIcon from '@material-ui/icons/Home'\nimport InfoIcon from '@material-ui/icons/Info'\nimport ListIcon from '@material-ui/icons/List'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport TextFieldsIcon from '@material-ui/icons/TextFields'\nimport React, { useContext, useMemo } from 'react'\nimport { FormattedMessage } from 'react-intl'\n\nimport { shouldBePresent } from '~/lib/asserters/commonAsserters'\nimport ListItemLink from '~/lib/components/ListItemLink'\nimport IntlProviderContext from '~/lib/contexts/IntlProviderContext'\nimport typed from '~/lib/typed'\nimport classes from './classes.css'\nimport messages from './messages'\n\ninterface Props {\n  open: boolean\n  onClose(): void\n  topAppbarHeight?: number\n}\n\ninterface StyleProps {\n  topAppbarHeight?: number\n}\n\nconst useStyles = makeStyles<Theme, StyleProps, 'DrawerHeader'>((theme) => ({\n  DrawerHeader: {\n    ...theme.mixins.gutters(),\n    height: ({ topAppbarHeight }) => topAppbarHeight !== undefined ? typed<[number]>`${ topAppbarHeight }px` : undefined,\n    display: 'grid',\n    alignItems: 'center',\n    justifyContent: 'start',\n  },\n}), { name: 'Nav' })\n\nconst FlippedListIcon: React.FC<React.PropsOf<typeof ListIcon>> = ({ style, ...restProps }) => {\n  if (style === undefined) {\n    return <ListIcon style={ { transform: 'scaleX(-1)' } } { ...restProps } />\n  }\n\n  const { transform, ...restStyle } = style\n\n  if (transform !== undefined) {\n    throw new Error\n  }\n\n  return <ListIcon style={ { transform: 'scaleX(-1)', ...restStyle } } { ...restProps } />\n}\n\nconst Nav = React.forwardRef<HTMLDivElement, Props>(({ open, onClose, topAppbarHeight }, ref) => {\n  const { dir } = useContext(IntlProviderContext)\n\n  const RtlFriendlyListIcon = useMemo(() => {\n    shouldBePresent(dir)\n\n    switch (dir) {\n      case 'ltr': return ListIcon\n      case 'rtl': return FlippedListIcon\n    }\n  }, [dir])\n\n  const jssClasses = useStyles({ topAppbarHeight })\n\n  // NOTE: anchor はページが RtL であることを検出すると水平反転するので、 dir から計算する必要は無い。\n  return (\n    <Drawer anchor=\"left\" open={ open } onClose={ onClose } PaperProps={ { ref } }>\n      <div className={ jssClasses.DrawerHeader }>\n        <IconButton edge=\"start\" color=\"inherit\" onClick={ onClose }>\n          <MenuIcon />\n        </IconButton>\n      </div>\n      <Divider />\n      <List className={ classes.List }>\n        <ListItemLink to=\"/\" onClick={ onClose }>\n          <ListItemIcon>\n            <HomeIcon />\n          </ListItemIcon>\n          <ListItemText>\n            <FormattedMessage { ...messages.home } />\n          </ListItemText>\n        </ListItemLink>\n        <ListSubheader>\n          <FormattedMessage { ...messages.components } />\n        </ListSubheader>\n        <ListItemLink to=\"/form-controls\" onClick={ onClose }>\n          <ListItemIcon>\n            <TextFieldsIcon />\n          </ListItemIcon>\n          <ListItemText>\n            <FormattedMessage { ...messages.formControls } />\n          </ListItemText>\n        </ListItemLink>\n        <ListSubheader>\n          <FormattedMessage { ...messages.apps } />\n        </ListSubheader>\n        <ListItemLink to=\"/chess\" onClick={ onClose }>\n          <ListItemIcon>\n            <Icon icon={ chessPawn } width=\"24\" height=\"24\" />\n          </ListItemIcon>\n          <ListItemText>\n            <FormattedMessage { ...messages.chess } />\n          </ListItemText>\n        </ListItemLink>\n        <ListItemLink to=\"/clock\" onClick={ onClose }>\n          <ListItemIcon>\n            <Icon icon={ clock } width=\"24\" height=\"24\" />\n          </ListItemIcon>\n          <ListItemText>\n            <FormattedMessage { ...messages.clock } />\n          </ListItemText>\n        </ListItemLink>\n        <ListItemLink to=\"/counter\" onClick={ onClose }>\n          <ListItemIcon>\n            <Icon icon={ counter } width=\"24\" height=\"24\" />\n          </ListItemIcon>\n          <ListItemText>\n            <FormattedMessage { ...messages.counter } />\n          </ListItemText>\n        </ListItemLink>\n        <ListItemLink to=\"/info\" onClick={ onClose }>\n          <ListItemIcon>\n            <InfoIcon />\n          </ListItemIcon>\n          <ListItemText>\n            <FormattedMessage { ...messages.info } />\n          </ListItemText>\n        </ListItemLink>\n        <ListItemLink to=\"/paint\" onClick={ onClose }>\n          <ListItemIcon>\n            <BrushIcon />\n          </ListItemIcon>\n          <ListItemText>\n            <FormattedMessage { ...messages.paint } />\n          </ListItemText>\n        </ListItemLink>\n        <ListItemLink to=\"/reminder\" onClick={ onClose }>\n          <ListItemIcon>\n            <RtlFriendlyListIcon />\n          </ListItemIcon>\n          <ListItemText>\n            <FormattedMessage { ...messages.reminder } />\n          </ListItemText>\n        </ListItemLink>\n        <ListItemLink to=\"/settings\" onClick={ onClose }>\n          <ListItemIcon>\n            <SettingsIcon />\n          </ListItemIcon>\n          <ListItemText>\n            <FormattedMessage { ...messages.settings } />\n          </ListItemText>\n        </ListItemLink>\n      </List>\n    </Drawer>\n  )\n})\n\nexport default Nav\n","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js!./classes.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  language: 'Language',\n})\n","import FilledInput from '@material-ui/core/FilledInput'\nimport FormControl, { FormControlProps } from '@material-ui/core/FormControl'\nimport Input from '@material-ui/core/Input'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport OutlinedInput from '@material-ui/core/OutlinedInput'\nimport Select, { SelectProps } from '@material-ui/core/Select'\nimport { Theme, makeStyles, useTheme } from '@material-ui/core/styles'\nimport classnames from 'classnames'\nimport React, { useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { connect } from 'react-redux'\nimport { v4 } from 'uuid'\n\nimport IntlProviderContext from '~/lib/contexts/IntlProviderContext'\nimport { Tag, getNativeNameByTag, isTag } from '~/lib/languageNameSolver'\nimport { State } from '~/redux'\nimport { selectLocale } from '~/redux/modules/localeSelector'\nimport cssClasses from './classes.css'\nimport messages from './messages'\n\ninterface OwnProps {\n  classes?: {\n    root?: string\n    label?: string\n    input?: string\n    selectIcon?: string\n    inputUnderline?: string\n  } | null\n  FormControlProps?: FormControlProps | null\n}\n\ninterface StateProps {\n  locale: Tag\n}\n\ninterface DispatchProps {\n  selectLocale(locale: Tag): void\n}\n\ntype Props =\n  & OwnProps\n  & StateProps\n  & DispatchProps\n\ninterface StyleProps {\n  selectMinWidth?: number\n}\n\nconst useStyles = makeStyles<Theme, StyleProps, 'Select'>({\n  Select: {\n    minWidth: ({ selectMinWidth }) => selectMinWidth,\n  },\n})\n\nexport /* for testing */ const LocaleSelect: React.FC<Props> = ({ classes: propClasses, FormControlProps, locale, selectLocale }) => {\n  const [labelWidth, setLabelWidth] = useState<number | null>(null)\n  const [selectMinWidth, setSelectMinWidth] = useState<number | null>(null)\n  const inputId = useMemo(v4, [])\n  const theme = useTheme()\n  const { dir } = useContext(IntlProviderContext)\n  const jssClasses = useStyles({ selectMinWidth: selectMinWidth ?? undefined })\n\n  // NOTE: Fortunately, FormControl is nothing but FormControl.\n  const variant = useMemo(() => FormControlProps?.variant ?? theme?.props?.MuiFormControl?.variant ?? 'standard', [FormControlProps?.variant, theme?.props?.MuiFormControl?.variant])\n\n  const rootClassName = useMemo(() => classnames(propClasses?.root, FormControlProps?.className), [propClasses?.root, FormControlProps?.className])\n  const labelClassName = useMemo(() => classnames(propClasses?.label, cssClasses.InputLabel), [propClasses?.label])\n  const selectSelectClassName = useMemo(() => classnames(jssClasses.Select, cssClasses.Select), [jssClasses.Select])\n  const inputClassName = useMemo(() => classnames(propClasses?.input), [propClasses?.input])\n  const selectIconClassName = useMemo(() => classnames(propClasses?.selectIcon), [propClasses?.selectIcon])\n  const inputUnderlineClassName = useMemo(() => classnames(propClasses?.inputUnderline), [propClasses?.inputUnderline])\n\n  const inputLabel = useRef<HTMLLabelElement>(null)\n  const select = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    if (inputLabel.current === null) {\n      return\n    }\n\n    setLabelWidth(inputLabel.current.offsetWidth)\n\n    if (select.current === null) {\n      return\n    }\n\n    const selectSelect = select.current.querySelector(`:scope > .${ cssClasses.Select }`)\n\n    if (selectSelect === null || !(selectSelect instanceof HTMLDivElement)) {\n      return\n    }\n\n    const rect = inputLabel.current.getBoundingClientRect() // NOTE: node.offsetWidth は transform 前の値、 rect.width は transform 後の値を返す。\n\n    const style = globalThis.getComputedStyle(selectSelect)\n\n    // NOTE: document.dir 変更前なので style.paddingInlineStart 等で得ることはできない。\n    const paddingInlineStart = parseFloat(dir === 'ltr' ? style.paddingLeft : style.paddingRight)\n    const paddingInlineEnd = parseFloat(dir === 'ltr' ? style.paddingRight : style.paddingLeft)\n\n    // tslint:disable-next-line:no-object-mutation\n    setSelectMinWidth(rect.width + paddingInlineStart - paddingInlineEnd)\n  }, [locale, dir])\n\n  const handleChange = useCallback<NonNullable<SelectProps['onChange']>>((event) => {\n    if (isTag(event.target.value)) {\n      selectLocale(event.target.value)\n    }\n  }, [selectLocale])\n\n  const { availableLocales } = useContext(IntlProviderContext)\n\n  return (\n    <FormControl\n      { ...FormControlProps }\n      className={ rootClassName } // NOTE: Overrides FormControlProps.className\n    >\n      <InputLabel className={ labelClassName } ref={ inputLabel } htmlFor={ inputId }>\n        <FormattedMessage { ...messages.language } />\n      </InputLabel>\n      <Select\n        classes={ {\n          select: selectSelectClassName,\n          icon: selectIconClassName,\n        } }\n        ref={ select }\n        labelWidth={ labelWidth ?? undefined }\n        value={ locale }\n        onChange={ handleChange }\n        id={ inputId }\n        inputProps={ { 'data-testid': 'localeSelect' } }\n        input={ {\n          standard: (\n            <Input\n              className={ inputClassName }\n              classes={ {\n                underline: inputUnderlineClassName,\n              } }\n            />\n          ),\n          outlined: <OutlinedInput className={ inputClassName } labelWidth={ labelWidth ?? undefined } />,\n          filled: <FilledInput className={ inputClassName } />,\n        }[variant] }\n      >\n        { availableLocales?.map((availableLocale, i) => (\n          <MenuItem key={ i } value={ availableLocale }>{ getNativeNameByTag(availableLocale) }</MenuItem>\n        )) }\n      </Select>\n    </FormControl>\n  )\n}\n\n// connect\n\nconst mapStateToProps = ({ localeSelector: { locale } }: State): StateProps => ({\n  locale,\n})\n\nconst mapDispatchToProps: DispatchProps = {\n  selectLocale,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LocaleSelect)\n","import tagNativeNameMap from './__data__/tagNativeNameMap.json'\n\nexport type Tag = keyof typeof tagNativeNameMap\n\nexport function isTag(tag: unknown): tag is Tag {\n  return typeof tag === 'string' && tag in tagNativeNameMap\n}\n\nexport function getNativeNameByTag(tag: Tag) {\n  return tagNativeNameMap[tag]\n}\n","import { atom } from 'recoil'\n\ntype NotificationsSort = Sort<Notification>\n\nconst notificationsSortState = atom<NotificationsSort>({\n  key: 'notificationsSortState',\n  default: {\n    by: 'timestamp',\n    in: 'descending',\n  },\n})\n\nexport default notificationsSortState\n","import { selector } from 'recoil'\n\nimport notificationsSortState from '~/atoms/notificationsSortState'\nimport notificationsState from '~/atoms/notificationsState'\n\nconst sortedNotificationsState = selector({\n  key: 'sortedNotificationsState',\n  get({ get }) {\n    const notifications = get(notificationsState)\n    const sort = get(notificationsSortState)\n\n    const sorted = notifications.map(notification => ({\n      notification,\n      by: notification[sort.by],\n    }))\n    .sort(({ by: a }, { by: b }) => a - b) // tslint:disable-line:no-array-mutation\n    .map(({ notification }) => notification)\n\n    if (sort.in === 'descending') {\n      sorted.reverse() // tslint:disable-line:no-array-mutation\n    }\n\n    return sorted\n  },\n})\n\nexport default sortedNotificationsState\n","import IconButton from '@material-ui/core/IconButton'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport React, { useCallback } from 'react'\nimport { FormattedTime } from 'react-intl'\n\ninterface Props {\n  notification: Notification\n}\n\nconst NotificationListItem: React.FC<Props> = ({ notification }) => {\n  const handleDeleteButtonClick = useCallback<React.MouseEventHandler<HTMLButtonElement>>(() => {\n    notification.close()\n  }, [notification])\n\n  return (\n    <ListItem>\n      <ListItemText\n        primary={ notification.title }\n        secondary={ <FormattedTime value={ notification.timestamp } format=\"medium\" /> }\n      />\n      <ListItemSecondaryAction>\n        <IconButton edge=\"end\" onClick={ handleDeleteButtonClick }>\n          <DeleteIcon />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  )\n}\n\nexport default NotificationListItem\n","import List from '@material-ui/core/List'\nimport React from 'react'\nimport { useRecoilValue } from 'recoil'\n\nimport sortedNotificationsState from '~/selectors/sortedNotificationsState'\nimport NotificationListItem from './NotificationListItem'\n\nconst NotificationList: React.FC = () => {\n  const notifications = useRecoilValue(sortedNotificationsState)\n\n  return (\n    <List>\n      { notifications.map((n) => (\n        <NotificationListItem key={ n.timestamp } notification={ n } />\n      )) }\n    </List>\n  )\n}\n\nexport default NotificationList\n","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js!./classes.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  toggleLightDarkTheme: 'Toggle light/dark theme',\n})\n","import IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Brightness4Icon from '@material-ui/icons/Brightness4'\nimport Brightness7Icon from '@material-ui/icons/Brightness7'\nimport React, { useCallback, useContext } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { useRecoilState } from 'recoil'\n\nimport darkState from '~/atoms/darkState'\nimport DefaultDarkContext from '~/contexts/DefaultDarkContext'\nimport { shouldBePresent } from '~/lib/asserters/commonAsserters'\nimport classes from './classes.css'\nimport messages from './messages'\n\nconst ToggleDarkButton = () => {\n  const [dark, setDark] = useRecoilState(darkState)\n  const { defaultDark } = useContext(DefaultDarkContext)\n\n  shouldBePresent(defaultDark)\n\n  const handleOn = useCallback(() => {\n    setDark(true)\n  }, [])\n\n  const handleOff = useCallback(() => {\n    setDark(false)\n  }, [])\n\n  return (\n    <Tooltip title={ <FormattedMessage { ...messages.toggleLightDarkTheme } /> }>\n      <span className={ classes.TooltipWrapper }>\n        { dark ?? defaultDark ? (\n          <IconButton onClick={ handleOff }>\n            <Brightness7Icon />\n          </IconButton>\n        ) : (\n          <IconButton onClick={ handleOn } color=\"inherit\">\n            <Brightness4Icon />\n          </IconButton>\n        ) }\n      </span>\n    </Tooltip>\n  )\n}\n\nexport default ToggleDarkButton\n","import api from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js!./classes.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  showNotifications: 'Show notifications',\n})\n","import AppBar from '@material-ui/core/AppBar'\nimport Badge from '@material-ui/core/Badge'\nimport Box from '@material-ui/core/Box'\nimport IconButton from '@material-ui/core/IconButton'\nimport Popover from '@material-ui/core/Popover'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport { Theme, makeStyles } from '@material-ui/core/styles'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport NotificationsIcon from '@material-ui/icons/Notifications'\nimport React, { useCallback, useEffect, useState } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { useRecoilState } from 'recoil'\n\nimport notificationsState from '~/atoms/notificationsState'\nimport LocaleSelect from '~/components/LocaleSelect' // TODO\nimport NotificationList from '~/components/NotificationList'\nimport ToggleDarkButton from '~/components/ToggleDarkButton'\nimport useRefsMerged from '~/lib/hooks/useRefsMerged'\nimport useScreen from '~/lib/hooks/useScreen'\nimport classes from './classes.css'\nimport messages from './messages'\n\ninterface Props {\n  onMenuIconButtonClick: React.MouseEventHandler<HTMLButtonElement>\n}\n\ninterface StyleProps {\n  topAppbarHeight?: number\n}\n\nconst useStyles = makeStyles<Theme, StyleProps, 'Offset'>({\n  Offset: {\n    height: ({ topAppbarHeight }) => topAppbarHeight,\n  },\n})\n\nconst TopAppbar = React.forwardRef<HTMLDivElement, Props>(({ onMenuIconButtonClick }, forwardedRef) => {\n  const { width: screenWidth } = useScreen()\n  const [height, setHeight] = useState<number | null>(null)\n\n  const ownRef = useCallback<React.RefCallback<HTMLDivElement>>((node) => {\n    // To silence the ESLint rule react-hooks/exhaustive-deps\n    if (screenWidth === null) {\n      return\n    }\n\n    const rect = node?.getBoundingClientRect()\n\n    if (rect === undefined) {\n      return\n    }\n\n    setHeight(rect.height)\n  }, [screenWidth])\n\n  const ref = useRefsMerged(forwardedRef, ownRef)\n\n  const jssClasses = useStyles({ topAppbarHeight: height ?? undefined })\n\n  const [notifications] = useRecoilState(notificationsState)\n  const [notificationsOpen, setNotificationsOpen] = useState(false)\n\n  const anchor = React.useRef<HTMLButtonElement | null>(null)\n\n  const handleNotificationsShow = useCallback<React.MouseEventHandler<HTMLButtonElement>>(() => {\n    if (notifications.length !== 0) {\n      setNotificationsOpen(true)\n    }\n  }, [notifications])\n\n  const handleNotificationsClose = useCallback(() => {\n    setNotificationsOpen(false)\n  }, [])\n\n  useEffect(() => {\n    if (notifications.length === 0) {\n      setNotificationsOpen(false)\n    }\n  }, [notifications])\n\n  return (\n    <>\n      <AppBar position=\"fixed\" ref={ ref }>\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" onClick={ onMenuIconButtonClick }>\n            <MenuIcon />\n          </IconButton>\n          <div className={ classes.Spacer } />\n          <Box mx={ 1 }>\n            <ToggleDarkButton />\n            { 'Notification' in globalThis && <>\n              <Tooltip\n                title={ <FormattedMessage { ...messages.showNotifications } /> }\n                disableFocusListener={ notifications.length === 0 }\n                disableHoverListener={ notifications.length === 0 }\n                disableTouchListener={ notifications.length === 0 }\n              >\n                <span className={ classes.TooltipWrapper }>\n                  <IconButton color=\"inherit\" onClick={ handleNotificationsShow } ref={ anchor } disabled={ notifications.length === 0 }>\n                    <Badge color=\"secondary\" badgeContent={ notifications.length }>\n                      <NotificationsIcon />\n                    </Badge>\n                  </IconButton>\n                </span>\n              </Tooltip>\n              { notifications.length !== 0 && <Popover\n                open={ notificationsOpen }\n                onClose={ handleNotificationsClose }\n                anchorEl={ anchor.current }\n                anchorOrigin={ {\n                  horizontal: 'right',\n                  vertical: 'bottom',\n                } }\n                transformOrigin={ {\n                  horizontal: 'right',\n                  vertical: 'top',\n                } }\n              >\n                <NotificationList />\n              </Popover> }\n            </> }\n          </Box>\n          <LocaleSelect\n            classes={ {\n              label: classes.LocaleSelectLabel,\n              input: classes.LocaleSelectInput,\n              selectIcon: classes.LocaleSelectSelectIcon,\n              inputUnderline: classes.LocaleSelectInputUnderline,\n            } }\n            FormControlProps={ {\n              variant: 'filled',\n            } }\n          />\n        </Toolbar>\n      </AppBar>\n      <div className={ jssClasses.Offset } />\n    </>\n  )\n})\n\nexport default TopAppbar\n","import React, { useCallback, useRef, useState } from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\n\nimport ErrorBoundary from '~/lib/components/ErrorBoundary'\nimport useScreen from '~/lib/hooks/useScreen'\nimport typed from '~/lib/typed'\nimport Nav from './Nav'\nimport TopAppbar from './TopAppbar'\n\ninterface PageTemplateProps {\n  children: React.ReactElement<BodyProps, React.ComponentType<BodyProps>>\n}\n\ntype BodyProps = PageProps\n\ntype PageProps =\n  & RouteComponentProps\n\nconst PageTemplate: React.FC<PageTemplateProps> = ({ children }) => {\n  const renderError = useCallback((error: unknown) => {\n    if (error instanceof Error) {\n      return typed<[string]>`${ String(error) }`\n    }\n\n    throw new TypeError(typed<[string]>`${ String(error) } is not an error.`)\n  }, [])\n\n  const [drawerOpen, setDrawerOpen] = useState(false)\n  const drawerRef = useRef<HTMLDivElement>(null)\n\n  const { width } = useScreen()\n  const [topAppbarHeight, setTopAppbarHeight] = useState<number | null>(null)\n\n  const topAppbarRef = useCallback<React.RefCallback<HTMLDivElement>>((node) => {\n    // To silence the ESLint rule react-hooks/exhaustive-deps\n    if (width === null) {\n      return\n    }\n\n    const topAppbarRect = node?.getBoundingClientRect()\n\n    if (topAppbarRect === undefined) {\n      return\n    }\n\n    setTopAppbarHeight(topAppbarRect.height)\n  }, [width])\n\n  const openDrawer = useCallback<React.MouseEventHandler>(() => {\n    setDrawerOpen(true)\n  }, [])\n\n  const closeDrawer = useCallback(() => {\n    setDrawerOpen(false)\n  }, [])\n\n  return (\n    <>\n      <TopAppbar ref={ topAppbarRef } onMenuIconButtonClick={ openDrawer } />\n      <Nav\n        ref={ drawerRef }\n        open={ drawerOpen }\n        onClose={ closeDrawer }\n        topAppbarHeight={ topAppbarHeight ?? undefined }\n      />\n      <ErrorBoundary renderError={ renderError }>\n        { children }\n      </ErrorBoundary>\n    </>\n  )\n}\n\nexport const createPage: (Body: React.FC<BodyProps>) => React.FC<PageProps> = (Body) => (props) => (\n  <PageTemplate>\n    <Body { ...props } />\n  </PageTemplate>\n)\n\nexport default PageTemplate\n","import identity from '~/lib/identity'\n\nexport const isOneOf = <T extends readonly Json[]>(...options: T) => (input: unknown): input is T[number] => options.some((option) => option === input)\n\nexport const optional = <A extends unknown, T extends A>(isT: (input: A) => input is T) => (input: A | undefined): input is T | undefined => {\n  if (input === undefined) {\n    return true\n  }\n\n  return isT(input)\n}\n\nexport const isObject = <A extends B, T extends A, B = A>(isT: (input: B) => Record<keyof A, boolean>) => (input: A): input is T => {\n  return Object.values<boolean>(isT(input)).every(identity)\n}\n","import React, { useCallback } from 'react'\n\nexport default function useRefsMerged<T>(...refs: React.Ref<T>[]): React.RefCallback<T> {\n  return useCallback((node) => {\n    for (const ref of refs) { // tslint:disable-line:no-loop-statement\n      if (ref === null) {\n        continue\n      }\n\n      // NOTE: 関数に `current` が設定されたものは React では callback ref と見なされるので、関数かどうかを先に調べる。\n      if (typeof ref === 'function') {\n        ref(node)\n      } else {\n        const mutableRef: React.MutableRefObject<T | null> = ref // FIXME\n\n        mutableRef.current = node // tslint:disable-line:no-object-mutation\n      }\n    }\n  }, [refs])\n}\n","import { useCallback, useEffect, useState } from 'react'\n\nexport default function useScreen() {\n  const [width, setWidth] = useState<number | null>(null)\n  const [height, setHeight] = useState<number | null>(null)\n  const [dpr, setDpr] = useState<number | null>(null)\n\n  const updateScreenSize = useCallback(() => {\n    setWidth(globalThis.innerWidth)\n    setHeight(globalThis.innerHeight)\n  }, [])\n\n  const updateScreenDpr = useCallback(() => {\n    setDpr(globalThis.devicePixelRatio)\n  }, [])\n\n  useEffect(() => {\n    updateScreenSize()\n    updateScreenDpr()\n\n    globalThis.addEventListener('resize', updateScreenSize)\n    globalThis.addEventListener('change', updateScreenDpr)\n\n    return () => {\n      globalThis.removeEventListener('resize', updateScreenSize)\n      globalThis.removeEventListener('change', updateScreenDpr)\n    }\n  }, [updateScreenSize, updateScreenDpr])\n\n  return { width, height, dpr }\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-components-LocaleSelect-classes__InputLabel--2e4qL {\\n  white-space: nowrap;\\n}\\n\\n.src-components-LocaleSelect-classes__Select--2XRfO {\\n  /* Silence is golden. */\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/LocaleSelect/classes.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,mBAAmB;AACrB;;AAEA;EACE,uBAAuB;AACzB\",\"sourcesContent\":[\".InputLabel {\\n  white-space: nowrap;\\n}\\n\\n.Select {\\n  /* Silence is golden. */\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"InputLabel\": \"src-components-LocaleSelect-classes__InputLabel--2e4qL\",\n\t\"Select\": \"src-components-LocaleSelect-classes__Select--2XRfO\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-components-PageTemplate-Nav-classes__List--Wtuz2 {\\n  overflow-y: auto;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/PageTemplate/Nav/classes.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,gBAAgB;AAClB\",\"sourcesContent\":[\".List {\\n  overflow-y: auto;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"List\": \"src-components-PageTemplate-Nav-classes__List--Wtuz2\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-components-PageTemplate-TopAppbar-classes__Spacer--11u3Z {\\n  flex-grow: 1;\\n}\\n\\n.src-components-PageTemplate-TopAppbar-classes__LocaleSelectLabel--1RjUX.src-components-PageTemplate-TopAppbar-classes__LocaleSelectLabel--1RjUX {\\n  color: currentColor\\n}\\n\\n.src-components-PageTemplate-TopAppbar-classes__LocaleSelectLabel--1RjUX.src-components-PageTemplate-TopAppbar-classes__LocaleSelectLabel--1RjUX.Mui-focused {\\n    opacity: 0.618;\\n    color: currentColor;\\n  }\\n\\n.src-components-PageTemplate-TopAppbar-classes__LocaleSelectInput--1iMs0.src-components-PageTemplate-TopAppbar-classes__LocaleSelectInput--1iMs0 {\\n  color: currentColor;\\n}\\n\\n.src-components-PageTemplate-TopAppbar-classes__LocaleSelectSelectIcon--2tFO9.src-components-PageTemplate-TopAppbar-classes__LocaleSelectSelectIcon--2tFO9 {\\n  color: currentColor;\\n}\\n\\n.src-components-PageTemplate-TopAppbar-classes__LocaleSelectInputUnderline--2c5cm.src-components-PageTemplate-TopAppbar-classes__LocaleSelectInputUnderline--2c5cm::before,\\n  .src-components-PageTemplate-TopAppbar-classes__LocaleSelectInputUnderline--2c5cm.src-components-PageTemplate-TopAppbar-classes__LocaleSelectInputUnderline--2c5cm:hover:not(.Mui-disabled)::before,\\n  .src-components-PageTemplate-TopAppbar-classes__LocaleSelectInputUnderline--2c5cm.src-components-PageTemplate-TopAppbar-classes__LocaleSelectInputUnderline--2c5cm::after {\\n    border-bottom-color: currentColor;\\n  }\\n\\n/* TODO: Remove */\\n/* NOTE: https://material-ui.com/components/tooltips/#disabled-elements のように <span> を差し込む場合、ツールチップの位置を <span> が無い場合と揃えるために <span> の高さを保持する。 */\\n/* NOTE: <Tooltip> の親の内側のレイアウトが flex な場合も <span> の高さが保持されるので、 <InputAdornment> 等で使う場合はこのルールセットは不要。 */\\n.src-components-PageTemplate-TopAppbar-classes__TooltipWrapper--TkZN7 {\\n  display: inline flow-root;\\n  display: inline-block; /* TODO: Delete this line */\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/PageTemplate/TopAppbar/classes.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,YAAY;AACd;;AAEA;EACE;AAMF;;AAJE;IACE,cAAc;IACd,mBAAmB;EACrB;;AAGF;EACE,mBAAmB;AACrB;;AAEA;EACE,mBAAmB;AACrB;;AAGE;;;IAGE,iCAAiC;EACnC;;AAGF,iBAAiB;AACjB,6IAA6I;AAC7I,oGAAoG;AACpG;EACE,yBAAyB;EACzB,qBAAqB,EAAE,2BAA2B;AACpD\",\"sourcesContent\":[\".Spacer {\\n  flex-grow: 1;\\n}\\n\\n.LocaleSelectLabel.LocaleSelectLabel {\\n  color: currentColor;\\n\\n  &:global(.Mui-focused) {\\n    opacity: 0.618;\\n    color: currentColor;\\n  }\\n}\\n\\n.LocaleSelectInput.LocaleSelectInput {\\n  color: currentColor;\\n}\\n\\n.LocaleSelectSelectIcon.LocaleSelectSelectIcon {\\n  color: currentColor;\\n}\\n\\n.LocaleSelectInputUnderline.LocaleSelectInputUnderline {\\n  &::before,\\n  &:hover:not(:global(.Mui-disabled))::before,\\n  &::after {\\n    border-bottom-color: currentColor;\\n  }\\n}\\n\\n/* TODO: Remove */\\n/* NOTE: https://material-ui.com/components/tooltips/#disabled-elements のように <span> を差し込む場合、ツールチップの位置を <span> が無い場合と揃えるために <span> の高さを保持する。 */\\n/* NOTE: <Tooltip> の親の内側のレイアウトが flex な場合も <span> の高さが保持されるので、 <InputAdornment> 等で使う場合はこのルールセットは不要。 */\\n.TooltipWrapper {\\n  display: inline flow-root;\\n  display: inline-block; /* TODO: Delete this line */\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"Spacer\": \"src-components-PageTemplate-TopAppbar-classes__Spacer--11u3Z\",\n\t\"LocaleSelectLabel\": \"src-components-PageTemplate-TopAppbar-classes__LocaleSelectLabel--1RjUX\",\n\t\"LocaleSelectInput\": \"src-components-PageTemplate-TopAppbar-classes__LocaleSelectInput--1iMs0\",\n\t\"LocaleSelectSelectIcon\": \"src-components-PageTemplate-TopAppbar-classes__LocaleSelectSelectIcon--2tFO9\",\n\t\"LocaleSelectInputUnderline\": \"src-components-PageTemplate-TopAppbar-classes__LocaleSelectInputUnderline--2c5cm\",\n\t\"TooltipWrapper\": \"src-components-PageTemplate-TopAppbar-classes__TooltipWrapper--TkZN7\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/* TODO: Remove */\\n/* NOTE: https://material-ui.com/components/tooltips/#disabled-elements のように <span> を差し込む場合、ツールチップの位置を <span> が無い場合と揃えるために <span> の高さを保持する。 */\\n/* NOTE: <Tooltip> の親の内側のレイアウトが flex な場合も <span> の高さが保持されるので、 <InputAdornment> 等で使う場合はこのルールセットは不要。 */\\n.src-components-ToggleDarkButton-classes__TooltipWrapper--J9IIY {\\n  display: inline flow-root;\\n  display: inline-block; /* TODO: Delete this line */\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/ToggleDarkButton/classes.css\"],\"names\":[],\"mappings\":\"AAAA,iBAAiB;AACjB,6IAA6I;AAC7I,oGAAoG;AACpG;EACE,yBAAyB;EACzB,qBAAqB,EAAE,2BAA2B;AACpD\",\"sourcesContent\":[\"/* TODO: Remove */\\n/* NOTE: https://material-ui.com/components/tooltips/#disabled-elements のように <span> を差し込む場合、ツールチップの位置を <span> が無い場合と揃えるために <span> の高さを保持する。 */\\n/* NOTE: <Tooltip> の親の内側のレイアウトが flex な場合も <span> の高さが保持されるので、 <InputAdornment> 等で使う場合はこのルールセットは不要。 */\\n.TooltipWrapper {\\n  display: inline flow-root;\\n  display: inline-block; /* TODO: Delete this line */\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"TooltipWrapper\": \"src-components-ToggleDarkButton-classes__TooltipWrapper--J9IIY\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n"],"sourceRoot":""}