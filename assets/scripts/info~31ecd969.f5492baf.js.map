{"version":3,"sources":["webpack:///./src/lib/guards/commonGuards.ts","webpack:///./src/components/Nav/classes.css?d9b5","webpack:///./src/components/LocaleSelect/messages.ts","webpack:///./src/components/LocaleSelect/index.tsx","webpack:///./src/lib/languageNameSolver/index.ts","webpack:///./src/lib/components/Link/index.tsx","webpack:///./src/lib/components/MenuItemLink/index.tsx","webpack:///./src/components/Nav/messages.ts","webpack:///./src/components/Nav/index.tsx","webpack:///./src/lib/components/ErrorBoundary/index.ts","webpack:///./src/templates/PageTemplate/index.tsx","webpack:///./node_modules/react-intl/lib/components/useIntl.js","webpack:///./node_modules/@material-ui/core/esm/Button/Button.js","webpack:///./node_modules/@babel/runtime/helpers/initializerDefineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/applyDecoratedDescriptor.js","webpack:///./node_modules/@babel/runtime/helpers/initializerWarningHelper.js","webpack:///./src/components/Info/messages.ts","webpack:///./src/components/Info/index.tsx","webpack:///./src/components/App/InfoPage/messages.ts","webpack:///./src/components/App/InfoPage/index.tsx"],"names":["isOneOf","options","input","some","option","optional","isT","undefined","module","exports","defineMessages","languages","mapDispatchToProps","selectLocale","connect","locale","localeSelector","classes","FormControlProps","useState","labelWidth","setLabelWidth","inputId","useMemo","v4","theme","useTheme","variant","props","MuiFormControl","rootClassName","classnames","root","className","labelClassName","label","inputClassName","selectIconClassName","selectIcon","inputUnderlineClassName","inputUnderline","inputLabel","useCallback","node","offsetWidth","handleChange","event","tag","target","value","tagNativeNameMap","availableLocales","useContext","IntlProviderContext","FormControl","InputLabel","ref","htmlFor","messages","Select","icon","native","onChange","id","inputProps","standard","Input","underline","outlined","OutlinedInput","filled","FilledInput","map","availableLocale","i","key","isTypographyColor","RouterLinkWithRef","React","forwardRef","innerRef","Link","this","color","restProps","component","console","warn","typed","Component","MenuItemLink","menuItem","to","button","menuItemProps","LinkWithRef","linkProps","link","MenuItem","home","chess","counter","info","reminder","Nav","anchorEl","setAnchorEl","openMenu","currentTarget","closeMenu","AppBar","position","Toolbar","IconButton","edge","onClick","Spacer","LocaleSelectLabel","LocaleSelectInput","LocaleSelectSelectIcon","LocaleSelectInputUnderline","Menu","open","onClose","ErrorBoundary","state","hasError","renderError","children","error","getDerivedStateFromError","PageTemplate","Error","String","TypeError","createPage","Body","useIntl","intl","Button","_props$color","_props$component","_props$disabled","disabled","_props$disableElevati","disableElevation","_props$disableFocusRi","disableFocusRipple","endIconProp","endIcon","focusVisibleClassName","_props$fullWidth","fullWidth","_props$size","size","startIconProp","startIcon","_props$type","type","_props$variant","other","createElement","concat","colorInherit","focusRipple","focusVisible","typography","boxSizing","minWidth","padding","borderRadius","shape","palette","text","primary","transition","transitions","create","duration","short","textDecoration","backgroundColor","action","hoverOpacity","width","display","alignItems","justifyContent","textPrimary","main","textSecondary","secondary","border","disabledBackground","outlinedPrimary","outlinedSecondary","contained","getContrastText","grey","boxShadow","shadows","A100","containedPrimary","contrastText","dark","containedSecondary","borderColor","textSizeSmall","fontSize","pxToRem","textSizeLarge","outlinedSizeSmall","outlinedSizeLarge","containedSizeSmall","containedSizeLarge","sizeSmall","sizeLarge","marginRight","marginLeft","iconSizeSmall","iconSizeMedium","iconSizeLarge","name","property","descriptor","context","Object","defineProperty","enumerable","configurable","writable","initializer","call","decorators","desc","keys","forEach","slice","reverse","reduce","decorator","fetchData","fetching","fetchingNotStarted","fetchingDoneSuccessfully","fetchingFailed","Info","resolve","successful","handleClick","setState","getRepo","apply","owner","repo","then","output","right","response","body","left","message","reason","Typography","statusText","formatMessage","isRight","isLeft","toString","href","htmlUrl","fullName","injectIntl","title"],"mappings":"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","file":"assets/scripts/info~31ecd969.f5492baf.js","sourcesContent":["import identity from '~/lib/identity'\n\nexport const isOneOf = <T extends readonly Json[]>(...options: T) => (input: unknown): input is T[number] => options.some((option) => option === input)\n\nexport const optional = <A extends unknown, T extends A>(isT: (input: A) => input is T) => (input: A | undefined): input is T | undefined => {\n  if (input === undefined) {\n    return true\n  }\n\n  return isT(input)\n}\n\nexport const isObject = <A extends B, T extends A, B = A>(isT: (input: B) => Record<keyof A, boolean>) => (input: A): input is T => {\n  return Object.values<boolean>(isT(input)).every(identity)\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spacer\":\"src-components-Nav-classes__Spacer--36ovl\",\"LocaleSelectLabel\":\"src-components-Nav-classes__LocaleSelectLabel--3h3DV\",\"LocaleSelectInput\":\"src-components-Nav-classes__LocaleSelectInput--3oNu1\",\"LocaleSelectSelectIcon\":\"src-components-Nav-classes__LocaleSelectSelectIcon--2AyFk\",\"LocaleSelectInputUnderline\":\"src-components-Nav-classes__LocaleSelectInputUnderline--2WFrx\"};","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  languages: 'Languages',\n})\n","import classnames from 'classnames'\nimport React, { useCallback, useContext, useMemo, useState } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { connect } from 'react-redux'\nimport { v4 } from 'uuid'\n\nimport FilledInput from '@material-ui/core/FilledInput'\nimport FormControl, { FormControlProps } from '@material-ui/core/FormControl'\nimport Input from '@material-ui/core/Input'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport OutlinedInput from '@material-ui/core/OutlinedInput'\nimport Select, { SelectProps } from '@material-ui/core/Select'\nimport { useTheme } from '@material-ui/core/styles'\n\nimport IntlProviderContext from '~/lib/contexts/IntlProviderContext'\nimport { Tag, getNativeNameByTag, isTag } from '~/lib/languageNameSolver'\nimport { State } from '~/redux'\nimport { selectLocale } from '~/redux/modules/localeSelector'\nimport messages from './messages'\n\ninterface OwnProps {\n  classes?: {\n    root?: string\n    label?: string\n    input?: string\n    selectIcon?: string\n    inputUnderline?: string\n  } | null\n  FormControlProps?: FormControlProps | null\n}\n\ninterface StateProps {\n  locale: Tag\n}\n\ninterface DispatchProps {\n  selectLocale(locale: Tag): void\n}\n\ntype Props =\n  & OwnProps\n  & StateProps\n  & DispatchProps\n\nexport /* for testing */ const LocaleSelect: React.FunctionComponent<Props> = ({ classes, FormControlProps, locale, selectLocale }) => {\n  const [labelWidth, setLabelWidth] = useState<number>(0)\n  const inputId = useMemo(v4, [])\n  const theme = useTheme()\n\n  // NOTE: Fortunately, FormControl is nothing but FormControl.\n  const variant = useMemo(() => FormControlProps?.variant ?? theme?.props?.MuiFormControl?.variant ?? 'standard', [FormControlProps?.variant, theme?.props?.MuiFormControl?.variant])\n\n  const rootClassName = useMemo(() => classnames(classes?.root, FormControlProps?.className), [classes?.root, FormControlProps?.className])\n  const labelClassName = useMemo(() => classnames(classes?.label), [classes?.label])\n  const inputClassName = useMemo(() => classnames(classes?.input), [classes?.input])\n  const selectIconClassName = useMemo(() => classnames(classes?.selectIcon), [classes?.selectIcon])\n  const inputUnderlineClassName = useMemo(() => classnames(classes?.inputUnderline), [classes?.inputUnderline])\n\n  const inputLabel = useCallback((node: HTMLLabelElement | null) => { // TODO: type\n    if (node !== null) {\n      setLabelWidth(node.offsetWidth)\n    }\n  }, [])\n\n  const handleChange = useCallback<NonNullable<SelectProps['onChange']>>((event) => {\n    if (isTag(event.target.value)) {\n      selectLocale(event.target.value)\n    }\n  }, [])\n\n  const { availableLocales } = useContext(IntlProviderContext)\n\n  return (\n    <FormControl\n      { ...FormControlProps }\n      className={ rootClassName } // NOTE: override FormControlProps.className\n    >\n      <InputLabel className={ labelClassName } ref={ inputLabel } htmlFor={ inputId }>\n        <FormattedMessage { ...messages.languages } />\n      </InputLabel>\n      <Select\n        classes={ {\n          icon: selectIconClassName,\n        } }\n        native\n        labelWidth={ labelWidth }\n        value={ locale }\n        onChange={ handleChange }\n        id={ inputId }\n        inputProps={ { 'data-testid': 'localeSelect' } }\n        input={ {\n          standard: (\n            <Input\n              className={ inputClassName }\n              classes={ {\n                underline: inputUnderlineClassName,\n              } }\n            />\n          ),\n          outlined: <OutlinedInput className={ inputClassName } labelWidth={ labelWidth } />,\n          filled: <FilledInput className={ inputClassName } />,\n        }[variant] }\n      >\n        { availableLocales?.map((availableLocale, i) => (\n          <option key={ i } value={ availableLocale }>{ getNativeNameByTag(availableLocale) }</option>\n        )) }\n      </Select>\n    </FormControl>\n  )\n}\n\n// connect\n\nconst mapStateToProps = ({ localeSelector: { locale } }: State): StateProps => ({\n  locale,\n})\n\nconst mapDispatchToProps: DispatchProps = {\n  selectLocale,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LocaleSelect)\n","import tagNativeNameMap from './__data__/tagNativeNameMap.json'\n\nexport type Tag = keyof typeof tagNativeNameMap\n\nexport function isTag(tag: unknown): tag is Tag {\n  return typeof tag === 'string' && tag in tagNativeNameMap\n}\n\nexport function getNativeNameByTag(tag: Tag) {\n  return tagNativeNameMap[tag]\n}\n","import React from 'react'\nimport { Link as RouterLink, LinkProps as RouterLinkProps } from 'react-router-dom'\n\nimport MuiLink, { LinkProps as MuiLinkProps } from '@material-ui/core/Link'\n\nimport { isOneOf, optional } from '~/lib/guards/commonGuards'\nimport typed from '~/lib/typed'\n\nexport type Props =\n  & RouterLinkProps\n  & Alt.Omit<MuiLinkProps, 'color' | 'ref'>\n\nconst isTypographyColor = optional(isOneOf('initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error'))\n\n// TODO: delete this; See also https://material-ui.com/guides/composition/#link\nconst RouterLinkWithRef = React.forwardRef<HTMLAnchorElement, RouterLinkProps>((props, ref) => (\n  <RouterLink innerRef={ ref } { ...props } />\n))\n\nexport default class Link extends React.Component<Props> {\n  public render() {\n    const { color, ...restProps } = this.props\n\n    if (!isTypographyColor(color)) {\n      console.warn(typed<[string]>`${ color } is not a Material-UI Typography color.`) // tslint:disable-line:no-console\n\n      return (\n        <MuiLink component={ RouterLinkWithRef } { ...restProps } />\n      )\n    }\n\n    return (\n      <MuiLink component={ RouterLinkWithRef } color={ color } { ...restProps } />\n    )\n  }\n}\n","import * as React from 'react'\n\nimport MenuItem, { MenuItemProps } from '@material-ui/core/MenuItem'\n\nimport Link, { Props as LinkProps } from '~/lib/components/Link'\n\ntype Props = MenuItemProps<typeof Link, { button?: true }>\n\nconst MenuItemLink: React.FunctionComponent<Props> = React.forwardRef<Link, React.PropsWithoutRef<Props>>(({ to, button, innerRef, ...menuItemProps }, menuItem) => {\n  // See https://material-ui.com/guides/composition/#link\n  const LinkWithRef = React.forwardRef<Link, LinkProps>((linkProps, link) => (\n    <Link ref={ link } innerRef={ innerRef } color=\"inherit\" underline=\"none\" { ...linkProps } />\n  ))\n\n  return (\n    <MenuItem button component={ LinkWithRef } to={ to } ref={ menuItem } { ...menuItemProps } />\n  )\n})\n\nexport default MenuItemLink\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  home: 'home',\n  chess: 'chess',\n  counter: 'counter',\n  info: 'info',\n  reminder: 'reminder',\n})\n","// import classnames from 'classnames'\nimport React, { useCallback, useState } from 'react'\nimport { FormattedMessage } from 'react-intl'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Menu from '@material-ui/core/Menu'\nimport Toolbar from '@material-ui/core/Toolbar'\n// import { createStyles, makeStyles } from '@material-ui/core/styles'\nimport MenuIcon from '@material-ui/icons/Menu'\n\nimport LocaleSelect from '~/components/LocaleSelect' // TODO\nimport MenuItemLink from '~/lib/components/MenuItemLink'\nimport classes from './classes.css'\nimport messages from './messages'\n\nconst Nav: React.FunctionComponent = () => {\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null)\n\n  const openMenu = useCallback<React.MouseEventHandler<HTMLButtonElement>>((event) => {\n    setAnchorEl(event.currentTarget)\n  }, [])\n\n  const closeMenu = useCallback(() => {\n    setAnchorEl(null)\n  }, [])\n\n  return (\n    <>\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" onClick={ openMenu }>\n            <MenuIcon />\n          </IconButton>\n          <div className={ classes.Spacer } />\n          <LocaleSelect\n            classes={ {\n              label: classes.LocaleSelectLabel,\n              input: classes.LocaleSelectInput,\n              selectIcon: classes.LocaleSelectSelectIcon,\n              inputUnderline: classes.LocaleSelectInputUnderline,\n            } }\n            FormControlProps={ {\n              variant: 'filled',\n            } }\n          />\n        </Toolbar>\n      </AppBar>\n      <Menu open={ anchorEl !== null } anchorEl={ anchorEl } onClose={ closeMenu }>\n        <MenuItemLink to=\"/\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.home } />\n        </MenuItemLink>\n        <MenuItemLink to=\"/chess\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.chess } />\n        </MenuItemLink>\n        <MenuItemLink to=\"/counter\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.counter } />\n        </MenuItemLink>\n        <MenuItemLink to=\"/info\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.info } />\n        </MenuItemLink>\n        <MenuItemLink to=\"/reminder\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.reminder } />\n        </MenuItemLink>\n      </Menu>\n    </>\n  )\n}\n\nexport default Nav\n","import React from 'react'\n\ninterface Props {\n  /**\n   * @param children that throws {error}\n   */\n  renderError(error: unknown, children: React.ReactNode): React.ReactNode\n}\n\ninterface State {\n  hasError: boolean\n  error?: unknown\n}\n\nclass ErrorBoundary extends React.Component<Props, State> {\n\n  // NOTE: https://github.com/DefinitelyTyped/DefinitelyTyped/blob/826ce0f1ce1d1887d199986283630d6f63075ad5/types/react/index.d.ts#L419 にも関わらず、初期化されていない state は null であるため、初期化を強制するためにプロパティ宣言を行う。\n  public state: Readonly<State> = {\n    hasError: false,\n  }\n\n  public static getDerivedStateFromError = (error: unknown) => ({\n    hasError: true,\n    error,\n  })\n\n  public render() {\n    const { renderError, children } = this.props\n    const { hasError, error } = this.state\n\n    if (hasError) {\n      return renderError(error, children)\n    }\n\n    return children\n  }\n}\n\nexport default ErrorBoundary\n","import React, { useCallback } from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\n\nimport Nav from '~/components/Nav'\nimport ErrorBoundary from '~/lib/components/ErrorBoundary'\nimport typed from '~/lib/typed'\n\ninterface PageTemplateProps {\n  children: React.ReactElement<BodyProps, React.ComponentType<BodyProps>>\n}\n\ntype BodyProps = PageProps\n\ntype PageProps =\n  & RouteComponentProps\n\nconst PageTemplate: React.FunctionComponent<PageTemplateProps> = ({ children }) => {\n  const renderError = useCallback((error: unknown) => {\n    if (error instanceof Error) {\n      return typed<[string]>`${ String(error) }`\n    }\n\n    throw new TypeError(typed<[string]>`${ String(error) } is not an error.`)\n  }, [])\n\n  return (\n    <>\n      <Nav />\n      <ErrorBoundary renderError={ renderError }>\n        { children }\n      </ErrorBoundary>\n    </>\n  )\n}\n\nexport const createPage: (Body: React.FunctionComponent<BodyProps>) => React.FunctionComponent<PageProps> = (Body) => (props) => (\n  <PageTemplate>\n    <Body { ...props } />\n  </PageTemplate>\n)\n\nexport default PageTemplate\n","import { useContext } from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nexport default function useIntl() {\n    const intl = useContext(Context);\n    invariantIntlContext(intl);\n    return intl;\n}\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      minWidth: 64,\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n        duration: theme.transitions.duration.short\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }),\n\n    /* Styles applied to the span element that wraps the children. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      padding: '6px 8px'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"primary\"`. */\n    textPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"secondary\"`. */\n    textSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      padding: '5px 15px',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabledBackground)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(fade(theme.palette.primary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.primary.main),\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(fade(theme.palette.secondary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.secondary.main),\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabled)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      color: theme.palette.getContrastText(theme.palette.grey[300]),\n      backgroundColor: theme.palette.grey[300],\n      boxShadow: theme.shadows[2],\n      '&:hover': {\n        backgroundColor: theme.palette.grey.A100,\n        boxShadow: theme.shadows[4],\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          boxShadow: theme.shadows[2],\n          backgroundColor: theme.palette.grey[300]\n        },\n        '&$disabled': {\n          backgroundColor: theme.palette.action.disabledBackground\n        }\n      },\n      '&$focusVisible': {\n        boxShadow: theme.shadows[6]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[8]\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled,\n        boxShadow: theme.shadows[0],\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"primary\"`. */\n    containedPrimary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"secondary\"`. */\n    containedSecondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `disableElevation={true}`. */\n    disableElevation: {\n      boxShadow: 'none',\n      '&:hover': {\n        boxShadow: 'none'\n      },\n      '&$focusVisible': {\n        boxShadow: 'none'\n      },\n      '&:active': {\n        boxShadow: 'none'\n      },\n      '&$disabled': {\n        boxShadow: 'none'\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit',\n      borderColor: 'currentColor'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"text\"`. */\n    textSizeSmall: {\n      padding: '4px 5px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"text\"`. */\n    textSizeLarge: {\n      padding: '8px 11px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"outlined\"`. */\n    outlinedSizeSmall: {\n      padding: '3px 9px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"outlined\"`. */\n    outlinedSizeLarge: {\n      padding: '7px 21px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"contained\"`. */\n    containedSizeSmall: {\n      padding: '4px 10px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"contained\"`. */\n    containedSizeLarge: {\n      padding: '8px 22px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {},\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the startIcon element if supplied. */\n    startIcon: {\n      display: 'inherit',\n      marginRight: 8,\n      marginLeft: -4,\n      '&$iconSizeSmall': {\n        marginLeft: -2\n      }\n    },\n\n    /* Styles applied to the endIcon element if supplied. */\n    endIcon: {\n      display: 'inherit',\n      marginRight: -4,\n      marginLeft: 8,\n      '&$iconSizeSmall': {\n        marginRight: -2\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"small\"`. */\n    iconSizeSmall: {\n      '& > *:first-child': {\n        fontSize: 18\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"medium\"`. */\n    iconSizeMedium: {\n      '& > *:first-child': {\n        fontSize: 20\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"large\"`. */\n    iconSizeLarge: {\n      '& > *:first-child': {\n        fontSize: 22\n      }\n    }\n  };\n};\nvar Button = React.forwardRef(function Button(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableElevati = props.disableElevation,\n      disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      endIconProp = props.endIcon,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      startIconProp = props.startIcon,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'button' : _props$type,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"endIcon\", \"focusVisibleClassName\", \"fullWidth\", \"size\", \"startIcon\", \"type\", \"variant\"]);\n\n  var startIcon = startIconProp && React.createElement(\"span\", {\n    className: clsx(classes.startIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, startIconProp);\n  var endIcon = endIconProp && React.createElement(\"span\", {\n    className: clsx(classes.endIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, endIconProp);\n  return React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, classes[variant], className, color === 'inherit' ? classes.colorInherit : color !== 'default' && classes[\"\".concat(variant).concat(capitalize(color))], size !== 'medium' && [classes[\"\".concat(variant, \"Size\").concat(capitalize(size))], classes[\"size\".concat(capitalize(size))]], disableElevation && classes.disableElevation, disabled && classes.disabled, fullWidth && classes.fullWidth),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref,\n    type: type\n  }, other), React.createElement(\"span\", {\n    className: classes.label\n  }, startIcon, children, endIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? Button.propTypes = {\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, no elevation is used.\n   */\n  disableElevation: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   * `disableRipple` must also be true.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * Element placed after the children.\n   */\n  endIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * If `true`, the button will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n\n  /**\n   * Element placed before the children.\n   */\n  startIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['text', 'outlined', 'contained'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButton'\n})(Button);","function _initializerDefineProperty(target, property, descriptor, context) {\n  if (!descriptor) return;\n  Object.defineProperty(target, property, {\n    enumerable: descriptor.enumerable,\n    configurable: descriptor.configurable,\n    writable: descriptor.writable,\n    value: descriptor.initializer ? descriptor.initializer.call(context) : void 0\n  });\n}\n\nmodule.exports = _initializerDefineProperty;","function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object.keys(descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object.defineProperty(target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n\nmodule.exports = _applyDecoratedDescriptor;","function _initializerWarningHelper(descriptor, context) {\n  throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.');\n}\n\nmodule.exports = _initializerWarningHelper;","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  fetchData: 'Fetch data',\n  fetching: 'Fetching..',\n  fetchingNotStarted: 'Fetching not started.',\n  fetchingDoneSuccessfully: 'Fetching done successfully.',\n  fetchingFailed: 'Fetching failed.',\n})\n","import assert from 'assert'\nimport { Either, isLeft, isRight, left, right } from 'fp-ts/lib/Either'\nimport { resolve } from 'inversify-react'\nimport React from 'react'\nimport { FormattedMessage, WrappedComponentProps, injectIntl } from 'react-intl'\n\nimport Button from '@material-ui/core/Button'\nimport Link from '@material-ui/core/Link'\nimport Typography from '@material-ui/core/Typography'\n\nimport GetRepo from '~/useCase/GetRepo'\nimport messages from './messages'\n\ntype Props =\n  & WrappedComponentProps\n\ninterface State {\n  successful: boolean\n  fetching: boolean\n  repo?: Either<Error, GitHubApiResource.Repository> | null\n}\n\nclass Info extends React.Component<Props, State> {\n  @resolve('GetRepo') private getRepo!: GetRepo\n\n  public state: Readonly<State> = {\n    successful: true,\n    fetching: false,\n  }\n\n  private handleClick: React.MouseEventHandler = () => {\n    this.setState({\n      fetching: true,\n    })\n\n    this.getRepo.apply({ owner: 'sueka', repo: 'react-app-prototype' }).then(\n      (output) => {\n        if (output.successful) {\n          this.setState({\n            successful: true,\n            fetching: false,\n            repo: right(output.response.body),\n          })\n        } else {\n          this.setState({\n            successful: false,\n            fetching: false,\n            repo: left(new Error(output.response.body.message)),\n          })\n        }\n      },\n      (reason: unknown) => {\n        console.error(reason) // tslint:disable-line:no-console\n\n        this.setState({\n          successful: false,\n          fetching: false,\n          repo: null,\n        })\n      }\n    )\n  }\n\n  private get statusText() {\n    const { intl: { formatMessage } } = this.props\n    const { successful, fetching, repo } = this.state\n\n    if (fetching) {\n      return formatMessage(messages.fetching)\n    } else {\n      if (repo == null) {\n        return formatMessage(messages.fetchingNotStarted)\n      } else {\n        if (isRight(repo)) {\n          assert(successful)\n\n          return formatMessage(messages.fetchingDoneSuccessfully)\n        } else {\n          assert(!successful)\n\n          return formatMessage(messages.fetchingFailed)\n        }\n      }\n    }\n  }\n\n  private get info() {\n    const { repo } = this.state\n\n    if (repo == null) {\n      return repo\n    }\n\n    if (isLeft(repo)) {\n      return repo.toString()\n    }\n\n    return <Link href={ repo.right.htmlUrl }>{ repo.right.fullName }</Link>\n  }\n\n  public render() {\n    return (\n      <>\n        <Button onClick={ this.handleClick } disabled={ this.state.fetching } variant=\"contained\" color=\"secondary\">\n          <FormattedMessage { ...messages.fetchData } />\n        </Button>\n        <Typography>\n          { this.statusText }\n        </Typography>\n        { this.info != null && ( // tslint:disable-line:strict-boolean-expressions\n          <Typography component=\"span\">{ this.info }</Typography>\n        ) }\n      </>\n    )\n  }\n}\n\nexport default injectIntl(Info)\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  info: 'info',\n})\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { useIntl } from 'react-intl'\n\nimport Info from '~/components/Info'\nimport { createPage } from '~/templates/PageTemplate'\nimport messages from './messages'\n\nconst InfoPage: React.FunctionComponent = () => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <>\n      <Helmet title={ formatMessage(messages.info) } />\n      <Info />\n    </>\n  )\n}\n\nexport default createPage(InfoPage)\n"],"sourceRoot":""}