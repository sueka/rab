{"version":3,"sources":["webpack://rap/./src/components/CodeField/classes.css?a617","webpack://rap/./src/components/CodeField/index.tsx","webpack://rap/./src/lib/components/CopyTextButton/messages.ts","webpack://rap/./src/lib/components/CopyTextButton/index.tsx","webpack://rap/./src/lib/components/FileUpload/classes.css?b2ef","webpack://rap/./src/lib/components/FileUpload/messages.ts","webpack://rap/./src/lib/components/FileUpload/index.tsx","webpack://rap/./src/lib/components/MicSwitch/messages.ts","webpack://rap/./src/lib/components/MicSwitch/index.tsx","webpack://rap/./src/components/App/FormControlsPage/messages.ts","webpack://rap/./src/components/App/FormControlsPage/index.tsx","webpack://rap/./src/components/CodeField/classes.css","webpack://rap/./src/lib/components/FileUpload/classes.css"],"names":["options","useStyles","makeStyles","Pre","direction","width","startAdornmentWidth","endAdornmentWidth","marginLeft","marginRight","TextArea","flip","getWidth","element","globalThis","getComputedStyle","offsetWidth","parseFloat","lightTheme","darkTheme","className","InputProps","InputPropsClasses","classes","InputRefProp","ref","RestInputProps","inputProps","spellCheck","inputRefProp","restInputProps","preProps","value","onChange","restProps","inputMultiline","InputPropsRestClasses","dir","useContext","IntlProviderContext","useRecoilState","darkState","dark","defaultDark","DefaultDarkContext","useState","hlText","setHlText","setStartAdornmentWidth","setEndAdornmentWidth","jssClasses","undefined","containerClassName","useMemo","classnames","cssClasses","InputInputMultilineClassName","preClassName","OwnInputRef","useRef","InputRef","useRefsMerged","ownInputRef","inputRef","useEffect","startAdornment","current","querySelector","endAdornment","hljs","handleChange","useCallback","event","target","shouldBePresent","Helmet","rel","href","typed","dangerouslySetInnerHTML","__html","TextField","fullWidth","multiline","defineMessages","textCopied","copyText","ContentCopyIcon","style","FilterNone","transform","restStyle","Error","input","inputFor","formatMessage","useIntl","enqueueSnackbar","useSnackbar","handleClick","copy","messages","disabled","setDisabled","Tooltip","title","disableFocusListener","disableHoverListener","disableTouchListener","IconButton","onClick","browse","noFileSelected","nFilesSelected","multiple","buttonLabel","renderResultMessage","fs","length","name","values","n","propClasses","component","Component","FormLabel","ButtonProps","files","setFiles","rootClassName","root","buttonClassName","button","resultMessage","handleInputChange","Array","from","fireInputClick","dispatchEvent","MouseEvent","handleButtonClick","isDefaultPrevented","tabIndex","Button","type","typeWithYourVoice","stop","speechRecognitionErrorOccurred","onResult","fallback","locale","useSelector","state","localeSelector","listening","setListening","recognition","SpeechRecognition","tooltip","handleRecognitionStart","handleRecognitionEnd","handleRecognitionError","error","variant","handleRecognitionResult","results","map","result","transcript","join","continuous","interimResults","maxAlternatives","addEventListener","removeEventListener","lang","handleMicChange","_event","checked","start","abort","Checkbox","color","icon","MicNone","checkedIcon","Mic","formControls","CopiableTextField","text","setText","label","InputAdornment","position","MicIncludedTextField","handleResult","scrollTop","scrollHeight","offsetHeight","scrollLeft","scrollWidth","MicIncludedCopiableTextField","Image","maxWidth","maxHeight","height","ImageFile","file","src","setSrc","reader","FileReader","useScreen","handleReaderLoad","ArrayBuffer","test","readAsDataURL","createPage","renderResult","fileUploadMessages","i","key","code","setCode","handleCodeFieldChange","codeFieldInput","List","ListItem","ListItemText","accept","___CSS_LOADER_EXPORT___","push","module","id","locals"],"mappings":"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","file":"assets/scripts/formControls.5df3dfaf.js","sourcesContent":["import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js!./classes.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import TextField, { TextFieldProps as OriginalTextFieldProps } from '@material-ui/core/TextField'\nimport { makeStyles } from '@material-ui/core/styles'\nimport classnames from 'classnames'\nimport hljs from 'highlight.js'\nimport React, { useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react'\nimport { Helmet } from 'react-helmet'\nimport { useRecoilState } from 'recoil'\n\nimport darkState from '~/atoms/darkState'\nimport DefaultDarkContext from '~/contexts/DefaultDarkContext'\nimport { shouldBePresent } from '~/lib/asserters/commonAsserters'\nimport IntlProviderContext from '~/lib/contexts/IntlProviderContext'\nimport useRefsMerged from '~/lib/hooks/useRefsMerged'\nimport typed from '~/lib/typed'\nimport cssClasses from './classes.css'\n\ntype TextFieldProps =\n  & Alt.Omit<OriginalTextFieldProps,\n      | 'className'\n      | 'fullWidth' // TODO\n      | 'multiline' // TODO\n    >\n  & {\n      value?: string\n    }\n\ntype HighlightTheme = string // TODO\n\ninterface OwnProps {\n  lightTheme?: HighlightTheme\n  darkTheme?: HighlightTheme\n  className?: string\n  preProps?: Alt.Omit<React.InputHTMLAttributes<HTMLPreElement>, 'dangerouslySetInnerHTML'>\n}\n\n/**\n * @param className of the container\n */\ntype Props =\n  & TextFieldProps\n  & OwnProps\n\ninterface StyleProps {\n  direction?: Direction\n  startAdornmentWidth?: number\n  endAdornmentWidth?: number\n}\n\nconst useStyles = makeStyles<never, StyleProps, 'Pre' | 'TextArea'>({\n  Pre: {\n    '&$Pre': {\n      direction: 'ltr',\n      width: ({ startAdornmentWidth, endAdornmentWidth }) => `calc(100% - ${ (startAdornmentWidth ?? 0) + (endAdornmentWidth ?? 0) }px)`,\n\n      // NOTE: ページの direction が \"rtl\" なら starAdornment は右側に配置されるが、この要素の direction は \"ltr\" に固定されるので、 marginInlineStart 等を使うことはできない。\n      marginLeft: ({ direction, startAdornmentWidth, endAdornmentWidth }) => direction === 'rtl' ? endAdornmentWidth : startAdornmentWidth,\n      marginRight: ({ direction, startAdornmentWidth, endAdornmentWidth }) => direction === 'rtl' ? startAdornmentWidth : endAdornmentWidth,\n    },\n  },\n  TextArea: {\n    '&$TextArea': {\n      direction: 'ltr',\n    },\n  },\n}, {\n  flip: false,\n})\n\n// TODO: remove?\n// TODO: null check を抽出する\nfunction getWidth(element: HTMLElement | null | undefined): number | null {\n  if (element == null) {\n    return null\n  }\n\n  const { marginLeft, marginRight } = globalThis.getComputedStyle(element)\n\n  return element.offsetWidth + parseFloat(marginLeft) + parseFloat(marginRight)\n}\n\nconst CodeField: React.FC<Props> = ({\n  lightTheme = 'atom-one-light',\n  darkTheme = 'atom-one-dark',\n  className,\n  InputProps: { classes: InputPropsClasses, ref: InputRefProp, ...RestInputProps } = {},\n  inputProps: { spellCheck, ref: inputRefProp, ...restInputProps } = {},\n  preProps,\n  value,\n  onChange,\n  ...restProps\n}) => {\n  const { inputMultiline, ...InputPropsRestClasses } = InputPropsClasses ?? {}\n\n  const { dir } = useContext(IntlProviderContext)\n  const [dark] = useRecoilState(darkState)\n  const { defaultDark } = useContext(DefaultDarkContext)\n\n  const [hlText, setHlText] = useState<string | null>(null)\n  const [startAdornmentWidth, setStartAdornmentWidth] = useState<number | null>(null)\n  const [endAdornmentWidth, setEndAdornmentWidth] = useState<number | null>(null)\n\n  const jssClasses = useStyles({\n    direction: dir ?? undefined,\n    startAdornmentWidth: startAdornmentWidth ?? undefined,\n    endAdornmentWidth: endAdornmentWidth ?? undefined,\n  })\n\n  const containerClassName = useMemo(() => classnames(className, cssClasses.Container), [className])\n  const InputInputMultilineClassName = useMemo(() => classnames(jssClasses.TextArea, cssClasses.TextArea, inputMultiline), [jssClasses.TextArea, inputMultiline])\n  const preClassName = useMemo(() => classnames(jssClasses.Pre, cssClasses.Pre, preProps?.className), [jssClasses.Pre, preProps?.className])\n\n  const OwnInputRef = useRef<HTMLDivElement>(null)\n  const InputRef = useRefsMerged(InputRefProp ?? null, OwnInputRef)\n\n  const ownInputRef = useRef<HTMLTextAreaElement>(null)\n  const inputRef = useRefsMerged(inputRefProp ?? null, ownInputRef)\n\n  useEffect(() => {\n    const startAdornment = OwnInputRef.current?.querySelector<HTMLElement>(':scope > [class*=\"MuiInputAdornment-positionStart\"]') // TODO\n    const endAdornment = OwnInputRef.current?.querySelector<HTMLElement>(':scope > [class*=\"MuiInputAdornment-positionEnd\"]') // TODO\n\n    setStartAdornmentWidth(getWidth(startAdornment))\n    setEndAdornmentWidth(getWidth(endAdornment))\n  }, [OwnInputRef])\n\n  useEffect(() => {\n    setHlText(hljs.highlightAuto(ownInputRef.current?.value ?? '').value)\n  }, [ownInputRef])\n\n  const handleChange = useCallback<React.ChangeEventHandler<HTMLTextAreaElement>>((event) => {\n    onChange?.(event)\n\n    setHlText(hljs.highlightAuto(\n      (onChange === undefined ? value : undefined) // NOTE: `onChange` が無く、 `value` がある場合、テキストフィールドの内容は変更されない。また、 `onChange` がある場合、このイベントが発火した時の `value` の値は `onChange` 中の setState が完了する前のものなので、 `event.target.value` （または `input.current?.value ?? ''` ）を参照する必要がある。\n      ?? event.target.value\n    ).value)\n  }, [value, onChange])\n\n  shouldBePresent(defaultDark)\n\n  return (\n    <div className={ containerClassName }>\n      <Helmet>\n        <link\n          rel=\"stylesheet\"\n          href={ typed<[HighlightTheme]>`/assets/stylesheets/highlight.js/styles/${ (dark ?? defaultDark) ? darkTheme : lightTheme }.css` }\n        />\n      </Helmet>\n      <pre className={ preClassName } dangerouslySetInnerHTML={ { __html: hlText ?? '' } } />\n      <TextField\n        fullWidth // TODO: false でもうまく動くようにする\n        multiline // TODO: false でもうまく動くようにする\n        value={ value }\n        onChange={ handleChange }\n        InputProps={ {\n          classes: {\n            inputMultiline: InputInputMultilineClassName,\n            ...InputPropsRestClasses,\n          },\n          ref: InputRef,\n          ...RestInputProps,\n        } }\n        inputProps={ {\n          spellCheck: spellCheck ?? false,\n          ref: inputRef,\n          ...restInputProps,\n        } }\n        { ...restProps }\n      />\n    </div>\n  )\n}\n\nexport default CodeField\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  textCopied: 'Text copied.',\n  copyText: 'Copy text',\n})\n","import IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport FilterNoneIcon from '@material-ui/icons/FilterNone'\nimport copy from 'copy-to-clipboard'\nimport { useSnackbar } from 'notistack'\nimport React, { useCallback, useEffect, useState } from 'react'\nimport { FormattedMessage, useIntl } from 'react-intl'\n\nimport { shouldBePresent } from '~/lib/asserters/commonAsserters'\nimport messages from './messages'\n\ninterface Props {\n  inputFor: React.RefObject<HTMLInputElement | HTMLTextAreaElement>\n}\n\n// TODO: @material-ui/icons/ContentCopy が実装されたら削除する\nconst ContentCopyIcon: React.FC<React.PropsOf<typeof FilterNoneIcon>> = ({ style, ...restProps }) => {\n  if (style === undefined) {\n    return <FilterNoneIcon style={ { transform: 'scaleY(-1)' } } { ...restProps } />\n  }\n\n  const { transform, ...restStyle } = style\n\n  if (transform !== undefined) {\n    throw new Error\n  }\n\n  return <FilterNoneIcon style={ { transform: 'scaleY(-1)', ...restStyle } } { ...restProps } />\n}\n\nconst CopyTextButton: React.FC<Props> = ({ inputFor: input }) => {\n  const { formatMessage } = useIntl()\n  const { enqueueSnackbar } = useSnackbar()\n\n  const handleClick = useCallback(() => {\n    shouldBePresent(input.current)\n\n    if (input.current.value === '') {\n      return\n    }\n\n    copy(input.current.value) // TODO: await navigator.clipboard.writeText(input.current.value)\n\n    enqueueSnackbar(\n      <FormattedMessage { ...messages.textCopied } />\n    )\n  }, [enqueueSnackbar, input])\n\n  // NOTE: input が render された後の input.current が必要なので、 useMemo ではなく useState + useEffect を使う。\n  const [disabled, setDisabled] = useState(true)\n\n  useEffect(() => {\n    setDisabled(input.current === null || input.current.value === '' || input.current.disabled)\n  })\n\n  return (\n    <Tooltip\n      title={ formatMessage(messages.copyText) }\n      disableFocusListener={ disabled }\n      disableHoverListener={ disabled }\n      disableTouchListener={ disabled }\n    >\n      <span>\n        <IconButton onClick={ handleClick } disabled={ disabled }>\n          <ContentCopyIcon />\n        </IconButton>\n      </span>\n    </Tooltip>\n  )\n}\n\nexport default CopyTextButton\n","import api from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js!./classes.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  browse: 'Browse…',\n  noFileSelected: 'No file selected.',\n  nFilesSelected: '{ n } files selected.',\n})\n","import Button, { ButtonProps } from '@material-ui/core/Button'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport classnames from 'classnames'\nimport React, { useCallback, useMemo, useRef, useState } from 'react'\nimport { FormattedMessage } from 'react-intl'\n\nimport { shouldBePresent } from '~/lib/asserters/commonAsserters'\nimport cssClasses from './classes.css'\nimport messages from './messages'\n\nexport interface Props extends Alt.Omit<React.InputHTMLAttributes<HTMLInputElement>, 'type' | 'onClick' | 'onChange'> {\n  onClick?: React.MouseEventHandler<HTMLButtonElement>\n  onChange?: React.ChangeEventHandler<HTMLInputElement>\n  buttonLabel?: React.ReactNode\n  renderResultMessage?(files: File[] | null): React.ReactNode\n  classes?: {\n    root?: string\n    button?: string\n  }\n  component?: React.ElementType\n\n  /**\n   * Merges className, with mimicking Material-UI.\n   */\n  ButtonProps?: Alt.Omit<ButtonProps, 'disabled' | 'onClick'>\n}\n\nconst FileUpload: React.FC<Props> = ({\n  className,\n  disabled,\n  multiple,\n  onClick,\n  onChange,\n  buttonLabel = <FormattedMessage { ...messages.browse } />,\n  renderResultMessage = (fs) => {\n    if (fs === null || fs.length === 0) {\n      return <FormattedMessage { ...messages.noFileSelected } />\n    }\n\n    switch (fs.length) {\n      case 1:\n        return fs[0].name\n      default:\n        return <FormattedMessage { ...messages.nFilesSelected } values={ { n: fs.length } } />\n    }\n  },\n  classes: propClasses,\n  component: Component = FormLabel,\n  ButtonProps,\n  ...restInputProps\n}: Props) => {\n  const [files, setFiles] = useState<File[] | null>(null) // NOTE: (event: ChangeEvent).target.files をそのまま使うと参照が変わらないので re-render されない。\n\n  const rootClassName = useMemo(() => classnames(className, propClasses?.root, cssClasses.FileUpload), [className, propClasses?.root])\n  const buttonClassName = useMemo(() => classnames(propClasses?.button, cssClasses.Button, ButtonProps?.className), [propClasses?.button, ButtonProps?.className])\n\n  const resultMessage = useMemo(() => renderResultMessage(files), [renderResultMessage, files])\n\n  const input = useRef<HTMLInputElement>(null)\n\n  const handleInputChange = useCallback<React.ChangeEventHandler<HTMLInputElement>>((event) => {\n    onChange?.(event)\n    setFiles(event.target.files !== null ? Array.from(event.target.files) : event.target.files)\n  }, [onChange])\n\n  const fireInputClick = useCallback<React.MouseEventHandler<HTMLButtonElement>>(() => {\n    shouldBePresent(input.current)\n\n    input.current.dispatchEvent(new MouseEvent('click')) // FIXME: Element.click()\n  }, [input])\n\n  const handleButtonClick = useCallback<React.MouseEventHandler<HTMLButtonElement>>((event) => {\n    onClick?.(event)\n\n    if (!event.isDefaultPrevented()) {\n      fireInputClick(event)\n    }\n  }, [onClick, fireInputClick])\n\n  return (\n    <Component className={ rootClassName } tabIndex={ 0 }>\n      <Button\n        disabled={ disabled }\n        onClick={ handleButtonClick }\n        { ...ButtonProps }\n        className={ buttonClassName } // NOTE: Overrides ButtonProps.className\n        tabIndex={ -1 }\n      >\n        { buttonLabel }\n      </Button>\n      { resultMessage }\n      <input\n        className={ cssClasses.Input }\n        type=\"file\"\n        disabled={ disabled }\n        multiple={ multiple }\n        onChange={ handleInputChange }\n        ref={ input }\n        { ...restInputProps }\n      />\n    </Component>\n  )\n}\n\nexport default FileUpload\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  typeWithYourVoice: 'Type with your voice…',\n  stop: 'Stop',\n  speechRecognitionErrorOccurred: 'Speech recognition error occurred: { error }',\n})\n","import Checkbox, { CheckboxProps } from '@material-ui/core/Checkbox'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport MicIcon from '@material-ui/icons/Mic'\nimport MicNoneIcon from '@material-ui/icons/MicNone'\nimport { useSnackbar } from 'notistack'\nimport React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { FormattedMessage, useIntl } from 'react-intl'\nimport { useSelector } from 'react-redux'\n\nimport { State } from '~/redux'\nimport messages from './messages'\n\nexport interface Props {\n  inputFor: React.RefObject<HTMLInputElement>\n  fallback?: React.ReactElement | null\n  onResult(event: SpeechRecognitionEvent, value: string): void\n}\n\nconst MicSwitch: React.FC<Props> = ({ inputFor: input, onResult, fallback }) => {\n  const { formatMessage } = useIntl()\n  const locale = useSelector((state: State) => state.localeSelector.locale)\n  const [listening, setListening] = useState(false)\n  const recognition = useMemo(() => 'SpeechRecognition' in globalThis ? new SpeechRecognition() : null, [])\n  const tooltip = useMemo(() => listening ? formatMessage(messages.stop) : formatMessage(messages.typeWithYourVoice), [listening, formatMessage])\n  const { enqueueSnackbar } = useSnackbar()\n\n  const handleRecognitionStart = useCallback<NonNullable<SpeechRecognition['onstart']>>(() => {\n    setListening(true)\n  }, [])\n\n  const handleRecognitionEnd = useCallback<NonNullable<SpeechRecognition['onend']>>(() => {\n    setListening(false)\n  }, [])\n\n  const handleRecognitionError = useCallback<NonNullable<SpeechRecognition['onerror']>>((event) => {\n    enqueueSnackbar(<FormattedMessage { ...messages.speechRecognitionErrorOccurred } values={ { error: event.error } } />, {\n      variant: 'error',\n    })\n\n    // TODO: recognition が終了しない致命的なエラーがあれば、 recognition.abort() する。\n  }, [enqueueSnackbar])\n\n  const handleRecognitionResult = useCallback<NonNullable<SpeechRecognition['onresult']>>((event) => {\n    onResult(event, Array.from(event.results).map(result => result[0].transcript).join('')) // TODO: result.isFinal な result をメモしてパフォーマンスを改善させる。\n  }, [onResult])\n\n  useEffect(() => () => {\n    recognition?.stop()\n  }, [recognition])\n\n  useEffect(() => {\n    if (recognition === null) {\n      return\n    }\n\n    /* tslint:disable:no-object-mutation */\n    recognition.continuous = true\n    recognition.interimResults = true\n    recognition.maxAlternatives = 1\n    /* tslint:enable:no-object-mutation */\n\n    recognition.addEventListener('start', handleRecognitionStart)\n    recognition.addEventListener('end', handleRecognitionEnd)\n    recognition.addEventListener('error', handleRecognitionError)\n    recognition.addEventListener('result', handleRecognitionResult)\n\n    return () => {\n      recognition.removeEventListener('start', handleRecognitionStart)\n      recognition.removeEventListener('end', handleRecognitionEnd)\n      recognition.removeEventListener('error', handleRecognitionError)\n      recognition.removeEventListener('result', handleRecognitionResult)\n    }\n  }, [recognition, handleRecognitionStart, handleRecognitionEnd, handleRecognitionError, handleRecognitionResult])\n\n  // NOTE: locale は recognition やイベントハンドラーと比べると変わりやすい。\n  useEffect(() => {\n    if (recognition === null) {\n      return\n    }\n\n    recognition.stop() // NOTE: recognition の言語を途中で変更することはできないので、 locale が変更されたら停止する。\n\n    recognition.lang = locale // tslint:disable-line:no-object-mutation\n  }, [recognition, locale])\n\n  const handleMicChange = useCallback<NonNullable<CheckboxProps['onChange']>>((_event, checked) => {\n    if (recognition === null) {\n      return\n    }\n\n    setListening(checked) // NOTE: onrecognitionstart/onrecognitionend でも同じことを行うが、一般に onChange で value を変更しないと状態がおかしくなることがある。\n\n    if (checked) {\n      recognition.start()\n    } else {\n      recognition.stop()\n    }\n  }, [recognition])\n\n  // NOTE: input が render された後の input.current が必要なので、 useMemo ではなく useState + useEffect を使う。\n  const [disabled, setDisabled] = useState(true)\n\n  useEffect(() => {\n    // NOTE: `input.current === null` のときに not disabled だと、レンダリングの途中でクリックすることで、本来は disabled な <input> で onChange が発生させることができる。\n    setDisabled(input.current === null || input.current.disabled)\n  })\n\n  useEffect(() => {\n    if (recognition === null) {\n      return\n    }\n\n    if (disabled) {\n      recognition.abort()\n    }\n  }, [disabled, recognition])\n\n  if (recognition === null && fallback !== undefined) {\n    return fallback\n  }\n\n  return (\n    <Tooltip\n      title={ tooltip }\n      disableFocusListener={ disabled }\n      disableHoverListener={ disabled }\n      disableTouchListener={ disabled }\n    >\n      <span>\n        <Checkbox\n          disabled={ disabled }\n          color=\"default\"\n          icon={ <MicNoneIcon /> }\n          checkedIcon={ <MicIcon /> }\n          checked={ listening }\n          onChange={ handleMicChange }\n        />\n      </span>\n    </Tooltip>\n  )\n}\n\nexport default MicSwitch\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  formControls: 'Form controls',\n})\n","import InputAdornment from '@material-ui/core/InputAdornment'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport TextField from '@material-ui/core/TextField'\nimport { Theme, makeStyles } from '@material-ui/core/styles'\nimport React, { useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react'\nimport Helmet from 'react-helmet'\nimport { FormattedMessage, useIntl } from 'react-intl'\n\nimport CodeField from '~/components/CodeField'\nimport { createPage } from '~/components/PageTemplate'\nimport CopyTextButton from '~/lib/components/CopyTextButton'\nimport FileUpload, { Props as FileUploadProps } from '~/lib/components/FileUpload'\nimport fileUploadMessages from '~/lib/components/FileUpload/messages'\nimport MicSwitch, { Props as MicSwitchProps } from '~/lib/components/MicSwitch'\nimport IntlProviderContext from '~/lib/contexts/IntlProviderContext'\nimport useScreen from '~/lib/hooks/useScreen'\nimport messages from './messages'\n\nconst CopiableTextField: React.FC = () => {\n  const [text, setText] = useState('')\n  const input = useRef<HTMLInputElement>(null)\n\n  const handleChange = useCallback<React.ChangeEventHandler<HTMLInputElement>>((event) => {\n    setText(event.target.value)\n  }, [])\n\n  return (\n    <TextField\n      label=\"label\"\n      value={ text }\n      onChange={ handleChange }\n      inputRef={ input }\n      InputProps={ {\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <CopyTextButton inputFor={ input } />\n          </InputAdornment>\n        ),\n      } }\n    />\n  )\n}\n\nconst MicIncludedTextField: React.FC = () => {\n  const { dir } = useContext(IntlProviderContext)\n  const [text, setText] = useState('')\n  const input = useRef<HTMLInputElement>(null)\n\n  const handleChange = useCallback<React.ChangeEventHandler<HTMLInputElement>>((event) => {\n    setText(event.target.value)\n  }, [])\n\n  const handleResult = useCallback<MicSwitchProps['onResult']>((_event, value) => {\n    if (input.current === null) {\n      return\n    }\n\n    setText(value)\n\n    /* tslint:disable:no-object-mutation */\n    input.current.scrollTop = input.current.scrollHeight - input.current.offsetHeight\n\n    switch (dir) {\n      case 'ltr':\n        input.current.scrollLeft = input.current.scrollWidth - input.current.offsetWidth\n        break\n      case 'rtl':\n        input.current.scrollLeft = -(input.current.scrollWidth - input.current.offsetWidth)\n    }\n    /* tslint:enable:no-object-mutation */\n  }, [\n    dir,\n    input,\n    // To handle resizing, DOM updates, etc:\n    input.current?.scrollWidth,\n    input.current?.scrollHeight,\n    input.current?.offsetWidth,\n    input.current?.offsetHeight,\n  ])\n\n  return (\n    <TextField\n      label=\"label\"\n      value={ text }\n      onChange={ handleChange }\n      inputRef={ input }\n      InputProps={ {\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <MicSwitch\n              inputFor={ input }\n              onResult={ handleResult }\n              fallback={ null }\n            />\n          </InputAdornment>\n        ),\n      } }\n    />\n  )\n}\n\nconst MicIncludedCopiableTextField: React.FC = () => {\n  const { dir } = useContext(IntlProviderContext)\n  const [text, setText] = useState('')\n  const input = useRef<HTMLInputElement>(null)\n\n  const handleChange = useCallback<React.ChangeEventHandler<HTMLInputElement>>((event) => {\n    setText(event.target.value)\n  }, [])\n\n  const handleResult = useCallback<MicSwitchProps['onResult']>((_event, value) => {\n    if (input.current === null) {\n      return\n    }\n\n    setText(value)\n\n    /* tslint:disable:no-object-mutation */\n    input.current.scrollTop = input.current.scrollHeight - input.current.offsetHeight\n\n    switch (dir) {\n      case 'ltr':\n        input.current.scrollLeft = input.current.scrollWidth - input.current.offsetWidth\n        break\n      case 'rtl':\n        input.current.scrollLeft = -(input.current.scrollWidth - input.current.offsetWidth)\n    }\n    /* tslint:enable:no-object-mutation */\n  }, [\n    dir,\n    input,\n    // To handle resizing, DOM updates, etc:\n    input.current?.scrollWidth,\n    input.current?.scrollHeight,\n    input.current?.offsetWidth,\n    input.current?.offsetHeight,\n  ])\n\n  return (\n    <TextField\n      label=\"label\"\n      value={ text }\n      onChange={ handleChange }\n      inputRef={ input }\n      InputProps={ {\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <MicSwitch\n              inputFor={ input }\n              onResult={ handleResult }\n              fallback={ null }\n            />\n            <CopyTextButton inputFor={ input } />\n          </InputAdornment>\n        ),\n      } }\n    />\n  )\n}\n\ninterface ImageFileProps {\n  file: File\n}\n\ninterface StyleProps {\n  width: number | null\n  height: number | null\n}\n\nconst useStyles = makeStyles<Theme, StyleProps, 'Image'>({\n  Image: {\n    maxWidth: ({ width }) => width !== null ? width / 2 : undefined,\n    maxHeight: ({ height }) => height !== null ? height / 2 : undefined,\n  },\n})\n\nconst ImageFile: React.FC<ImageFileProps> = ({ file }) => {\n  const [src, setSrc] = useState<string | null>(null)\n  const reader = useMemo(() => new FileReader, [])\n  const { width, height } = useScreen()\n  const jssClasses = useStyles({ width, height })\n\n  const handleReaderLoad = useCallback<NonNullable<FileReader['onload']>>((event) => {\n    if (event.target?.result == null) {\n      return\n    }\n\n    if (event.target.result instanceof ArrayBuffer) {\n      throw new Error //\n    }\n\n    setSrc(event.target.result)\n  }, [])\n\n  useEffect(() => {\n    reader.addEventListener('load', handleReaderLoad)\n\n    return () => {\n      reader.removeEventListener('load', handleReaderLoad)\n    }\n  }, [reader, handleReaderLoad])\n\n  useEffect(() => {\n    if (!/^image\\/[0-9A-Za-z][!#$&+-.0-9A-Z^_a-z]*$/.test(file.type)) {\n      throw new Error\n    }\n\n    reader.readAsDataURL(file)\n  }, [file, reader])\n\n  return (\n    <img src={ src ?? undefined } className={ jssClasses.Image } />\n  )\n}\n\nconst FormControlsPage: React.FC = () => {\n  const { formatMessage } = useIntl()\n\n  const renderResult = useCallback<Required<FileUploadProps>['renderResultMessage']>((files) => {\n    if (files === null || files.length === 0) {\n      return <FormattedMessage { ...fileUploadMessages.noFileSelected } />\n    }\n\n    return Array.from(files).map((file, i) => <ImageFile key={ i } file={ file } />)\n  }, [])\n\n  const [code, setCode] = useState('')\n\n  const handleCodeFieldChange = useCallback<React.ChangeEventHandler<HTMLTextAreaElement>>((event) => {\n    setCode(event.target?.value)\n  }, [])\n\n  const codeFieldInput = useRef<HTMLInputElement | HTMLTextAreaElement>(null)\n\n  return (\n    <>\n      <Helmet title={ formatMessage(messages.formControls) } />\n      <List>\n        <ListItem>\n          <ListItemText>\n            <FileUpload\n              accept=\"image/*\"\n              multiple\n              renderResultMessage={ renderResult }\n            />\n          </ListItemText>\n        </ListItem>\n        <ListItem>\n          <ListItemText>\n            <CopiableTextField />\n          </ListItemText>\n        </ListItem>\n        <ListItem>\n          <ListItemText>\n            <MicIncludedTextField />\n          </ListItemText>\n        </ListItem>\n        <ListItem>\n          <ListItemText>\n            <MicIncludedCopiableTextField />\n          </ListItemText>\n        </ListItem>\n        <ListItem>\n          <ListItemText>\n            <CodeField\n              label=\"code\"\n              value={ code }\n              onChange={ handleCodeFieldChange }\n              InputProps={ {\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <CopyTextButton inputFor={ codeFieldInput } />\n                  </InputAdornment>\n                ),\n              } }\n              inputProps={ {\n                ref: codeFieldInput,\n              } }\n            />\n          </ListItemText>\n        </ListItem>\n      </List>\n    </>\n  )\n}\n\nexport default createPage(FormControlsPage)\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-components-CodeField-classes__Container--nU10n {\\n  position: relative;\\n}\\n\\n.src-components-CodeField-classes__Pre--3c2a_ {\\n  /* font-family: monospace; */\\n  font-size: 16px;\\n  line-height: 1.1876em;\\n  margin: 0;\\n  padding: 18.5px 14px;\\n  position: absolute;\\n  text-align: left;\\n  white-space: pre-wrap;\\n  /* width: 100%; */\\n  word-break: break-word;\\n}\\n\\n.src-components-CodeField-classes__TextArea--ZPHX8 {\\n  font-family: monospace;\\n  font-size: 16px;\\n  /* line-height: 1.1876em; */\\n  /* margin: 0; */\\n  -webkit-text-fill-color: transparent;\\n  white-space: pre-wrap;\\n  /* width: 100%; */\\n  /* word-break: break-word; */\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/CodeField/classes.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,kBAAkB;AACpB;;AAEA;EACE,4BAA4B;EAC5B,eAAe;EACf,qBAAqB;EACrB,SAAS;EACT,oBAAoB;EACpB,kBAAkB;EAClB,gBAAgB;EAChB,qBAAqB;EACrB,iBAAiB;EACjB,sBAAsB;AACxB;;AAEA;EACE,sBAAsB;EACtB,eAAe;EACf,2BAA2B;EAC3B,eAAe;EACf,oCAAoC;EACpC,qBAAqB;EACrB,iBAAiB;EACjB,4BAA4B;AAC9B\",\"sourcesContent\":[\".Container {\\n  position: relative;\\n}\\n\\n.Pre {\\n  /* font-family: monospace; */\\n  font-size: 16px;\\n  line-height: 1.1876em;\\n  margin: 0;\\n  padding: 18.5px 14px;\\n  position: absolute;\\n  text-align: left;\\n  white-space: pre-wrap;\\n  /* width: 100%; */\\n  word-break: break-word;\\n}\\n\\n.TextArea {\\n  font-family: monospace;\\n  font-size: 16px;\\n  /* line-height: 1.1876em; */\\n  /* margin: 0; */\\n  -webkit-text-fill-color: transparent;\\n  white-space: pre-wrap;\\n  /* width: 100%; */\\n  /* word-break: break-word; */\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"Container\": \"src-components-CodeField-classes__Container--nU10n\",\n\t\"Pre\": \"src-components-CodeField-classes__Pre--3c2a_\",\n\t\"TextArea\": \"src-components-CodeField-classes__TextArea--ZPHX8\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".src-lib-components-FileUpload-classes__FileUpload--89hPZ {\\n  display: inline-block; /* TODO: polyfill */\\n  display: inline flow-root;\\n  cursor: pointer;\\n}\\n\\n.src-lib-components-FileUpload-classes__Button--3uZU-.src-lib-components-FileUpload-classes__Button--3uZU- {\\n  text-transform: none;\\n  cursor: unset;\\n}\\n\\n.src-lib-components-FileUpload-classes__Input--b4BE6 {\\n  display: none;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/lib/components/FileUpload/classes.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,qBAAqB,EAAE,mBAAmB;EAC1C,yBAAyB;EACzB,eAAe;AACjB;;AAEA;EACE,oBAAoB;EACpB,aAAa;AACf;;AAEA;EACE,aAAa;AACf\",\"sourcesContent\":[\".FileUpload {\\n  display: inline-block; /* TODO: polyfill */\\n  display: inline flow-root;\\n  cursor: pointer;\\n}\\n\\n.Button.Button {\\n  text-transform: none;\\n  cursor: unset;\\n}\\n\\n.Input {\\n  display: none;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"FileUpload\": \"src-lib-components-FileUpload-classes__FileUpload--89hPZ\",\n\t\"Button\": \"src-lib-components-FileUpload-classes__Button--3uZU-\",\n\t\"Input\": \"src-lib-components-FileUpload-classes__Input--b4BE6\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n"],"sourceRoot":""}