{"version":3,"sources":["webpack:///./src/lib/identity.ts","webpack:///./src/lib/guards/commonGuards.ts","webpack:///./src/components/Nav/classes.css?5ee4","webpack:///./src/components/Nav/classes.css","webpack:///./src/components/DarkSwitch/index.tsx","webpack:///./src/components/LocaleSelect/messages.ts","webpack:///./src/components/LocaleSelect/index.tsx","webpack:///./src/lib/languageNameSolver/index.ts","webpack:///./src/lib/components/Link/index.tsx","webpack:///./src/lib/components/MenuItemLink/index.tsx","webpack:///./src/components/Nav/messages.ts","webpack:///./src/components/Nav/index.tsx","webpack:///./src/lib/components/ErrorBoundary/index.ts","webpack:///./src/templates/PageTemplate/index.tsx","webpack:///./src/lib/asserters/commonAsserters.ts","webpack:///./src/components/Canvas/classes.css?bb97","webpack:///./src/components/Canvas/classes.css","webpack:///./src/domain/vo/Color.ts","webpack:///./src/components/Canvas/index.tsx","webpack:///./src/components/ClearCanvasButton/index.tsx","webpack:///./src/components/Toolbox/index.tsx","webpack:///./src/components/Paint/messages.ts","webpack:///./src/components/Paint/index.tsx","webpack:///./src/components/App/PaintPage/messages.ts","webpack:///./src/components/App/PaintPage/index.tsx"],"names":["isOneOf","options","input","some","option","optional","isT","undefined","api","content","__esModule","default","module","i","exported","locals","exports","___CSS_LOADER_API_IMPORT___","push","DarkSwitch","useContext","ThemeProviderContext","dark","setDark","Error","handleChange","useCallback","_event","checked","Switch","onChange","defineMessages","languages","mapDispatchToProps","selectLocale","connect","locale","localeSelector","classes","FormControlProps","useState","labelWidth","setLabelWidth","inputId","useMemo","v4","theme","useTheme","variant","props","MuiFormControl","rootClassName","classnames","root","className","labelClassName","label","inputClassName","selectIconClassName","selectIcon","inputUnderlineClassName","inputUnderline","inputLabel","node","offsetWidth","event","tag","target","value","tagNativeNameMap","availableLocales","IntlProviderContext","FormControl","InputLabel","ref","htmlFor","messages","Select","icon","native","id","inputProps","standard","Input","underline","outlined","OutlinedInput","filled","FilledInput","map","availableLocale","key","isTypographyColor","RouterLinkWithRef","React","forwardRef","innerRef","Link","this","color","restProps","component","console","warn","typed","Component","MenuItemLink","menuItem","to","button","menuItemProps","LinkWithRef","linkProps","link","MenuItem","home","chess","counter","info","paint","reminder","Nav","anchorEl","setAnchorEl","openMenu","currentTarget","closeMenu","AppBar","position","Toolbar","IconButton","edge","onClick","Spacer","LocaleSelectLabel","LocaleSelectInput","LocaleSelectSelectIcon","LocaleSelectInputUnderline","Menu","open","onClose","ErrorBoundary","state","hasError","renderError","children","error","getDerivedStateFromError","PageTemplate","String","TypeError","createPage","Body","shouldBePresent","it","shouldBeNullable","Color","red","green","blue","alpha","result","hashCode","HashableEq","getColor","context","x","y","getImageData","data","Canvas","width","height","lineWidth","tool","drawing","setDrawing","previousPoint","setPreviousPoint","handlePointerDown","nativeEvent","offsetX","offsetY","handlePointerMove","pressure","lineJoin","beginPath","moveTo","lineTo","stroke","handlePointerUp","handlePointerLeave","handleClick","targetPoint","queue","targetColor","length","currentPoint","shift","currentColor","equals","fillRect","floodFill","onPointerDown","onPointerMove","onPointerUp","onPointerLeave","ClearCanvasButton","clearRect","Button","Toolbox","RadioGroup","name","Radio","checkedIcon","clear","isCanvasLineCap","isTool","Paint","setContext","lineCap","setLineCap","setTool","canvas","getContext","handleToolChange","handlePenCapRadioChange","useEffect","disabled","FormLabel","FormControlLabel","control","formatMessage","useIntl","title"],"mappings":"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","file":"assets/scripts/paint~21833f8f.df6bbab2.js","sourcesContent":["const identity = <T extends U, U>(it: T): U => it\n\nexport default identity\n","import identity from '~/lib/identity'\n\nexport const isOneOf = <T extends readonly Json[]>(...options: T) => (input: unknown): input is T[number] => options.some((option) => option === input)\n\nexport const optional = <A extends unknown, T extends A>(isT: (input: A) => input is T) => (input: A | undefined): input is T | undefined => {\n  if (input === undefined) {\n    return true\n  }\n\n  return isT(input)\n}\n\nexport const isObject = <A extends B, T extends A, B = A>(isT: (input: B) => Record<keyof A, boolean>) => (input: A): input is T => {\n  return Object.values<boolean>(isT(input)).every(identity)\n}\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--5-1!../../../node_modules/postcss-loader/src/index.js!./classes.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".src-components-Nav-classes__Spacer--36ovl {\\n  flex-grow: 1;\\n}\\n\\n.src-components-Nav-classes__LocaleSelectLabel--3h3DV.src-components-Nav-classes__LocaleSelectLabel--3h3DV {\\n  color: currentColor\\n}\\n\\n.src-components-Nav-classes__LocaleSelectLabel--3h3DV.src-components-Nav-classes__LocaleSelectLabel--3h3DV.Mui-focused {\\n    opacity: 0.618;\\n    color: currentColor;\\n  }\\n\\n.src-components-Nav-classes__LocaleSelectInput--3oNu1.src-components-Nav-classes__LocaleSelectInput--3oNu1 {\\n  color: currentColor;\\n}\\n\\n.src-components-Nav-classes__LocaleSelectSelectIcon--2AyFk.src-components-Nav-classes__LocaleSelectSelectIcon--2AyFk {\\n  color: currentColor;\\n}\\n\\n.src-components-Nav-classes__LocaleSelectInputUnderline--2WFrx.src-components-Nav-classes__LocaleSelectInputUnderline--2WFrx::before,\\n  .src-components-Nav-classes__LocaleSelectInputUnderline--2WFrx.src-components-Nav-classes__LocaleSelectInputUnderline--2WFrx:hover:not(.Mui-disabled)::before,\\n  .src-components-Nav-classes__LocaleSelectInputUnderline--2WFrx.src-components-Nav-classes__LocaleSelectInputUnderline--2WFrx::after {\\n    border-bottom-color: currentColor;\\n  }\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"Spacer\": \"src-components-Nav-classes__Spacer--36ovl\",\n\t\"LocaleSelectLabel\": \"src-components-Nav-classes__LocaleSelectLabel--3h3DV\",\n\t\"LocaleSelectInput\": \"src-components-Nav-classes__LocaleSelectInput--3oNu1\",\n\t\"LocaleSelectSelectIcon\": \"src-components-Nav-classes__LocaleSelectSelectIcon--2AyFk\",\n\t\"LocaleSelectInputUnderline\": \"src-components-Nav-classes__LocaleSelectInputUnderline--2WFrx\"\n};\nmodule.exports = exports;\n","import React, { useCallback, useContext } from 'react'\n\nimport Switch from '@material-ui/core/Switch'\n\nimport ThemeProviderContext from '~/contexts/ThemeProviderContext'\n\nconst DarkSwitch = () => {\n  const { dark, setDark } = useContext(ThemeProviderContext)\n\n  if (dark == null || setDark == null) {\n    throw new Error //\n  }\n\n  const handleChange = useCallback((_event, checked) => {\n    setDark(checked)\n  }, [setDark])\n\n  return (\n    <Switch checked={ dark } onChange={ handleChange } />\n  )\n}\n\nexport default DarkSwitch\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  languages: 'Languages',\n})\n","import classnames from 'classnames'\nimport React, { useCallback, useContext, useMemo, useState } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { connect } from 'react-redux'\nimport { v4 } from 'uuid'\n\nimport FilledInput from '@material-ui/core/FilledInput'\nimport FormControl, { FormControlProps } from '@material-ui/core/FormControl'\nimport Input from '@material-ui/core/Input'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport OutlinedInput from '@material-ui/core/OutlinedInput'\nimport Select, { SelectProps } from '@material-ui/core/Select'\nimport { useTheme } from '@material-ui/core/styles'\n\nimport IntlProviderContext from '~/lib/contexts/IntlProviderContext'\nimport { Tag, getNativeNameByTag, isTag } from '~/lib/languageNameSolver'\nimport { State } from '~/redux'\nimport { selectLocale } from '~/redux/modules/localeSelector'\nimport messages from './messages'\n\ninterface OwnProps {\n  classes?: {\n    root?: string\n    label?: string\n    input?: string\n    selectIcon?: string\n    inputUnderline?: string\n  } | null\n  FormControlProps?: FormControlProps | null\n}\n\ninterface StateProps {\n  locale: Tag\n}\n\ninterface DispatchProps {\n  selectLocale(locale: Tag): void\n}\n\ntype Props =\n  & OwnProps\n  & StateProps\n  & DispatchProps\n\nexport /* for testing */ const LocaleSelect: React.FunctionComponent<Props> = ({ classes, FormControlProps, locale, selectLocale }) => {\n  const [labelWidth, setLabelWidth] = useState<number>(0)\n  const inputId = useMemo(v4, [])\n  const theme = useTheme()\n\n  // NOTE: Fortunately, FormControl is nothing but FormControl.\n  const variant = useMemo(() => FormControlProps?.variant ?? theme?.props?.MuiFormControl?.variant ?? 'standard', [FormControlProps?.variant, theme?.props?.MuiFormControl?.variant])\n\n  const rootClassName = useMemo(() => classnames(classes?.root, FormControlProps?.className), [classes?.root, FormControlProps?.className])\n  const labelClassName = useMemo(() => classnames(classes?.label), [classes?.label])\n  const inputClassName = useMemo(() => classnames(classes?.input), [classes?.input])\n  const selectIconClassName = useMemo(() => classnames(classes?.selectIcon), [classes?.selectIcon])\n  const inputUnderlineClassName = useMemo(() => classnames(classes?.inputUnderline), [classes?.inputUnderline])\n\n  const inputLabel = useCallback((node: HTMLLabelElement | null) => { // TODO: type\n    if (node !== null) {\n      setLabelWidth(node.offsetWidth)\n    }\n  }, [])\n\n  const handleChange = useCallback<NonNullable<SelectProps['onChange']>>((event) => {\n    if (isTag(event.target.value)) {\n      selectLocale(event.target.value)\n    }\n  }, [selectLocale])\n\n  const { availableLocales } = useContext(IntlProviderContext)\n\n  return (\n    <FormControl\n      { ...FormControlProps }\n      className={ rootClassName } // NOTE: override FormControlProps.className\n    >\n      <InputLabel className={ labelClassName } ref={ inputLabel } htmlFor={ inputId }>\n        <FormattedMessage { ...messages.languages } />\n      </InputLabel>\n      <Select\n        classes={ {\n          icon: selectIconClassName,\n        } }\n        native\n        labelWidth={ labelWidth }\n        value={ locale }\n        onChange={ handleChange }\n        id={ inputId }\n        inputProps={ { 'data-testid': 'localeSelect' } }\n        input={ {\n          standard: (\n            <Input\n              className={ inputClassName }\n              classes={ {\n                underline: inputUnderlineClassName,\n              } }\n            />\n          ),\n          outlined: <OutlinedInput className={ inputClassName } labelWidth={ labelWidth } />,\n          filled: <FilledInput className={ inputClassName } />,\n        }[variant] }\n      >\n        { availableLocales?.map((availableLocale, i) => (\n          <option key={ i } value={ availableLocale }>{ getNativeNameByTag(availableLocale) }</option>\n        )) }\n      </Select>\n    </FormControl>\n  )\n}\n\n// connect\n\nconst mapStateToProps = ({ localeSelector: { locale } }: State): StateProps => ({\n  locale,\n})\n\nconst mapDispatchToProps: DispatchProps = {\n  selectLocale,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LocaleSelect)\n","import tagNativeNameMap from './__data__/tagNativeNameMap.json'\n\nexport type Tag = keyof typeof tagNativeNameMap\n\nexport function isTag(tag: unknown): tag is Tag {\n  return typeof tag === 'string' && tag in tagNativeNameMap\n}\n\nexport function getNativeNameByTag(tag: Tag) {\n  return tagNativeNameMap[tag]\n}\n","import React from 'react'\nimport { Link as RouterLink, LinkProps as RouterLinkProps } from 'react-router-dom'\n\nimport MuiLink, { LinkProps as MuiLinkProps } from '@material-ui/core/Link'\n\nimport { isOneOf, optional } from '~/lib/guards/commonGuards'\nimport typed from '~/lib/typed'\n\nexport type Props =\n  & RouterLinkProps\n  & Alt.Omit<MuiLinkProps, 'color' | 'ref'>\n\nconst isTypographyColor = optional(isOneOf('initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error'))\n\n// TODO: delete this; See also https://material-ui.com/guides/composition/#link\nconst RouterLinkWithRef = React.forwardRef<HTMLAnchorElement, RouterLinkProps>((props, ref) => (\n  <RouterLink innerRef={ ref } { ...props } />\n))\n\nexport default class Link extends React.Component<Props> {\n  public render() {\n    const { color, ...restProps } = this.props\n\n    if (!isTypographyColor(color)) {\n      console.warn(typed<[string]>`${ color } is not a Material-UI Typography color.`) // tslint:disable-line:no-console\n\n      return (\n        <MuiLink component={ RouterLinkWithRef } { ...restProps } />\n      )\n    }\n\n    return (\n      <MuiLink component={ RouterLinkWithRef } color={ color } { ...restProps } />\n    )\n  }\n}\n","import * as React from 'react'\n\nimport MenuItem, { MenuItemProps } from '@material-ui/core/MenuItem'\n\nimport Link, { Props as LinkProps } from '~/lib/components/Link'\n\ntype Props = MenuItemProps<typeof Link, { button?: true }>\n\nconst MenuItemLink: React.FunctionComponent<Props> = React.forwardRef<Link, React.PropsWithoutRef<Props>>(({ to, button, innerRef, ...menuItemProps }, menuItem) => {\n  // See https://material-ui.com/guides/composition/#link\n  const LinkWithRef = React.forwardRef<Link, LinkProps>((linkProps, link) => (\n    <Link ref={ link } innerRef={ innerRef } color=\"inherit\" underline=\"none\" { ...linkProps } />\n  ))\n\n  return (\n    <MenuItem button component={ LinkWithRef } to={ to } ref={ menuItem } { ...menuItemProps } />\n  )\n})\n\nexport default MenuItemLink\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  home: 'home',\n  chess: 'chess',\n  counter: 'counter',\n  info: 'info',\n  paint: 'paint',\n  reminder: 'reminder',\n})\n","// import classnames from 'classnames'\nimport React, { useCallback, useState } from 'react'\nimport { FormattedMessage } from 'react-intl'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Menu from '@material-ui/core/Menu'\nimport Toolbar from '@material-ui/core/Toolbar'\n// import { createStyles, makeStyles } from '@material-ui/core/styles'\nimport MenuIcon from '@material-ui/icons/Menu'\n\nimport DarkSwitch from '~/components/DarkSwitch'\nimport LocaleSelect from '~/components/LocaleSelect' // TODO\nimport MenuItemLink from '~/lib/components/MenuItemLink'\nimport classes from './classes.css'\nimport messages from './messages'\n\nconst Nav: React.FunctionComponent = () => {\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null)\n\n  const openMenu = useCallback<React.MouseEventHandler<HTMLButtonElement>>((event) => {\n    setAnchorEl(event.currentTarget)\n  }, [])\n\n  const closeMenu = useCallback(() => {\n    setAnchorEl(null)\n  }, [])\n\n  return (\n    <>\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" onClick={ openMenu }>\n            <MenuIcon />\n          </IconButton>\n          <div className={ classes.Spacer } />\n          <DarkSwitch />\n          <LocaleSelect\n            classes={ {\n              label: classes.LocaleSelectLabel,\n              input: classes.LocaleSelectInput,\n              selectIcon: classes.LocaleSelectSelectIcon,\n              inputUnderline: classes.LocaleSelectInputUnderline,\n            } }\n            FormControlProps={ {\n              variant: 'filled',\n            } }\n          />\n        </Toolbar>\n      </AppBar>\n      <Menu open={ anchorEl !== null } anchorEl={ anchorEl } onClose={ closeMenu }>\n        <MenuItemLink to=\"/\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.home } />\n        </MenuItemLink>\n        <MenuItemLink to=\"/chess\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.chess } />\n        </MenuItemLink>\n        <MenuItemLink to=\"/counter\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.counter } />\n        </MenuItemLink>\n        <MenuItemLink to=\"/info\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.info } />\n        </MenuItemLink>\n        <MenuItemLink to=\"/paint\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.paint } />\n        </MenuItemLink>\n        <MenuItemLink to=\"/reminder\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.reminder } />\n        </MenuItemLink>\n      </Menu>\n    </>\n  )\n}\n\nexport default Nav\n","import React from 'react'\n\ninterface Props {\n  /**\n   * @param children that throws {error}\n   */\n  renderError(error: unknown, children: React.ReactNode): React.ReactNode\n}\n\ninterface State {\n  hasError: boolean\n  error?: unknown\n}\n\nclass ErrorBoundary extends React.Component<Props, State> {\n\n  // NOTE: https://github.com/DefinitelyTyped/DefinitelyTyped/blob/826ce0f1ce1d1887d199986283630d6f63075ad5/types/react/index.d.ts#L419 にも関わらず、初期化されていない state は null であるため、初期化を強制するためにプロパティ宣言を行う。\n  public state: Readonly<State> = {\n    hasError: false,\n  }\n\n  public static getDerivedStateFromError = (error: unknown) => ({\n    hasError: true,\n    error,\n  })\n\n  public render() {\n    const { renderError, children } = this.props\n    const { hasError, error } = this.state\n\n    if (hasError) {\n      return renderError(error, children)\n    }\n\n    return children\n  }\n}\n\nexport default ErrorBoundary\n","import React, { useCallback } from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\n\nimport Nav from '~/components/Nav'\nimport ErrorBoundary from '~/lib/components/ErrorBoundary'\nimport typed from '~/lib/typed'\n\ninterface PageTemplateProps {\n  children: React.ReactElement<BodyProps, React.ComponentType<BodyProps>>\n}\n\ntype BodyProps = PageProps\n\ntype PageProps =\n  & RouteComponentProps\n\nconst PageTemplate: React.FunctionComponent<PageTemplateProps> = ({ children }) => {\n  const renderError = useCallback((error: unknown) => {\n    if (error instanceof Error) {\n      return typed<[string]>`${ String(error) }`\n    }\n\n    throw new TypeError(typed<[string]>`${ String(error) } is not an error.`)\n  }, [])\n\n  return (\n    <>\n      <Nav />\n      <ErrorBoundary renderError={ renderError }>\n        { children }\n      </ErrorBoundary>\n    </>\n  )\n}\n\nexport const createPage: (Body: React.FunctionComponent<BodyProps>) => React.FunctionComponent<PageProps> = (Body) => (props) => (\n  <PageTemplate>\n    <Body { ...props } />\n  </PageTemplate>\n)\n\nexport default PageTemplate\n","export function shouldBePresent<T>(it: T | null | undefined): asserts it is T {\n  if (it == null) {\n    throw new Error //\n  }\n}\n\nexport function shouldBeNullable<T>(it: T | null | undefined): asserts it is null | undefined {\n  if (it != null) {\n    throw new Error //\n  }\n}\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--5-1!../../../node_modules/postcss-loader/src/index.js!./classes.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".src-components-Canvas-classes__Canvas--_x96R {\\n  background-color: white; /* TODO */\\n}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"Canvas\": \"src-components-Canvas-classes__Canvas--_x96R\"\n};\nmodule.exports = exports;\n","import HashableEq from '~/lib/trait/HashableEq'\n\n// TODO: remove\ninterface RgbaColor {\n  red: number\n  green: number\n  blue: number\n  alpha: number\n}\n\nexport default interface Color extends RgbaColor {} // tslint:disable-line:no-empty-interface\n\nexport default class Color extends HashableEq implements Class.ValueObject<RgbaColor> {\n  constructor({ red, green, blue, alpha }: RgbaColor) {\n    super()\n\n    this.red = red\n    this.green = green\n    this.blue = blue\n    this.alpha = alpha\n  }\n\n  public hashCode() {\n    // tslint:disable-next-line:no-let\n    let result = 0\n\n    result = 31 * result + this.red.hashCode()\n    result = 31 * result + this.green.hashCode()\n    result = 31 * result + this.blue.hashCode()\n    result = 31 * result + this.alpha.hashCode()\n\n    return result\n  }\n}\n","import React, { forwardRef, useCallback, useState } from 'react'\n\nimport Color from '~/domain/vo/Color'\nimport { shouldBeNullable, shouldBePresent } from '~/lib/asserters/commonAsserters'\nimport classes from './classes.css'\n\n// TODO: remove\ntype Tool =\n  | 'pen'\n  | 'bucket'\n\n// TODO: remove\ninterface Point {\n  x: number\n  y: number\n}\n\ninterface InnerProps {\n  width: number\n  height: number\n  lineWidth: number\n  innerRef: React.Ref<HTMLCanvasElement>\n  context: CanvasRenderingContext2D | null | undefined\n  tool: Tool\n}\n\ntype Props = React.PropsWithRef<Alt.Omit<InnerProps, 'innerRef'>>\n\n// TODO: remove\nexport /* for testing */ function getColor({ x, y }: Point, context: CanvasRenderingContext2D): Color {\n  const { data: [red, green, blue, alpha] } = context.getImageData(x, y, 1, 1)\n\n  return new Color({\n    red,\n    green,\n    blue,\n    alpha,\n  })\n}\n\n// TODO: remove\nfunction floodFill(targetPoint: Point, width: number, height: number, context: CanvasRenderingContext2D) {\n  shouldBePresent(context)\n\n  const queue: Point[] = [] // TODO\n  const targetColor = getColor(targetPoint, context)\n\n  // tslint:disable-next-line:no-array-mutation\n  queue.push(targetPoint)\n\n  // tslint:disable-next-line:no-loop-statement\n  while (queue.length !== 0) {\n    const currentPoint = queue.shift() // tslint:disable-line:no-array-mutation\n\n    shouldBePresent(currentPoint)\n\n    const currentColor = getColor(currentPoint, context)\n\n    if (!targetColor.equals(currentColor)) {\n      continue\n    }\n\n    context.fillRect(currentPoint.x, currentPoint.y, 1, 1)\n\n    if (currentPoint.x > 0) {\n      // tslint:disable-next-line:no-array-mutation\n      queue.push({ x: currentPoint.x - 1, y: currentPoint.y })\n    }\n\n    if (currentPoint.y > 0) {\n      // tslint:disable-next-line:no-array-mutation\n      queue.push({ x: currentPoint.x, y: currentPoint.y - 1 })\n    }\n\n    if (currentPoint.x < width - 1) {\n      // tslint:disable-next-line:no-array-mutation\n      queue.push({ x: currentPoint.x + 1, y: currentPoint.y })\n    }\n\n    if (currentPoint.y < height - 1) {\n      // tslint:disable-next-line:no-array-mutation\n      queue.push({ x: currentPoint.x, y: currentPoint.y + 1 })\n    }\n  }\n}\n\nconst Canvas: React.FunctionComponent<InnerProps> = ({ width, height, lineWidth, innerRef, context, tool }) => {\n  const [drawing, setDrawing] = useState(false)\n  const [previousPoint, setPreviousPoint] = useState<Point | null>(null)\n\n  const handlePointerDown = useCallback<React.PointerEventHandler<HTMLCanvasElement>>((event) => {\n    if (tool !== 'pen') {\n      return\n    }\n\n    shouldBeNullable(previousPoint)\n\n    setDrawing(true)\n\n    setPreviousPoint({\n      x: event.nativeEvent.offsetX,\n      y: event.nativeEvent.offsetY,\n    })\n  }, [tool, previousPoint])\n\n  const handlePointerMove = useCallback<React.PointerEventHandler<HTMLCanvasElement>>((event) => {\n    if (!drawing) {\n      return\n    }\n\n    shouldBePresent(context)\n    shouldBePresent(previousPoint)\n\n    /* tslint:disable:no-object-mutation */\n    context.lineWidth = lineWidth * event.pressure\n    context.lineJoin = 'round'\n    /* tslint:enable:no-object-mutation */\n\n    context.beginPath()\n    context.moveTo(previousPoint.x, previousPoint.y)\n    context.lineTo(event.nativeEvent.offsetX, event.nativeEvent.offsetY)\n    context.stroke()\n\n    setPreviousPoint({\n      x: event.nativeEvent.offsetX,\n      y: event.nativeEvent.offsetY,\n    })\n  }, [lineWidth, context, drawing, previousPoint])\n\n  const handlePointerUp = useCallback(() => {\n    setDrawing(false)\n    setPreviousPoint(null)\n  }, [])\n\n  const handlePointerLeave = useCallback(() => {\n    setDrawing(false)\n    setPreviousPoint(null)\n  }, [])\n\n  const handleClick = useCallback<React.MouseEventHandler<HTMLCanvasElement>>((event) => {\n    if (tool !== 'bucket') {\n      return\n    }\n\n    shouldBePresent(context)\n\n    floodFill({ x: event.nativeEvent.offsetX, y: event.nativeEvent.offsetY }, width, height, context)\n  }, [width, height, context, tool])\n\n  return (\n    <canvas\n      ref={ innerRef }\n      className={ classes.Canvas }\n      width={ width }\n      height={ height }\n      onPointerDown={ handlePointerDown }\n      onPointerMove={ handlePointerMove }\n      onPointerUp={ handlePointerUp }\n      onPointerLeave={ handlePointerLeave }\n      onClick={ handleClick }\n    />\n  )\n}\n\nexport default forwardRef<HTMLCanvasElement, Props>((props, ref) => (\n  <Canvas innerRef={ ref } { ...props } />\n))\n","import React, { useCallback } from 'react'\n\nimport Button from '@material-ui/core/Button'\n\ninterface Props {\n  width: number\n  height: number\n  context: CanvasRenderingContext2D | null | undefined\n}\n\nconst ClearCanvasButton: React.FunctionComponent<Props> = ({ children, width, height, context }) => {\n  const handleClick = useCallback<React.MouseEventHandler<HTMLButtonElement>>(() => {\n    context?.clearRect(0, 0, width, height)\n  }, [context?.clearRect, width, height])\n\n  return (\n    <Button onClick={ handleClick }>\n      { children }\n    </Button>\n  )\n}\n\nexport default ClearCanvasButton\n","import React from 'react'\n\nimport FormControl from '@material-ui/core/FormControl'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup, { RadioGroupProps } from '@material-ui/core/RadioGroup'\nimport CreateIcon from '@material-ui/icons/Create'\nimport FormatColorFillIcon from '@material-ui/icons/FormatColorFill'\n\n// TODO: remove\ntype Tool =\n  | 'pen'\n  | 'bucket'\n\nexport interface Props {\n  value: Tool\n  onChange: NonNullable<RadioGroupProps['onChange']>\n}\n\nconst Toolbox: React.FunctionComponent<Props> = ({ value, onChange }) => (\n  <FormControl>\n    <RadioGroup name=\"tool\" value={ value } onChange={ onChange }>\n      <Radio icon={ <CreateIcon /> } checkedIcon={ <CreateIcon /> } value=\"pen\" />\n      <Radio icon={ <FormatColorFillIcon /> } checkedIcon={ <FormatColorFillIcon /> } value=\"bucket\" />\n    </RadioGroup>\n  </FormControl>\n)\n\nexport default Toolbox\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  clear: 'clear',\n})\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { FormattedMessage } from 'react-intl'\n\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\n\nimport Canvas from '~/components/Canvas'\nimport ClearCanvasButton from '~/components/ClearCanvasButton'\nimport Toolbox, { Props as ToolboxProps } from '~/components/Toolbox'\nimport { isOneOf } from '~/lib/guards/commonGuards'\nimport messages from './messages'\n\n// TODO: remove\ntype Tool =\n  | 'pen'\n  | 'bucket'\n\nconst isCanvasLineCap = isOneOf('butt', 'round', 'square')\nconst isTool = isOneOf('pen', 'bucket')\n\nconst Paint: React.FunctionComponent = () => {\n  const [context, setContext] = useState<CanvasRenderingContext2D | null>()\n  const [lineCap, setLineCap] = useState<CanvasLineCap>('round')\n  const [tool, setTool] = useState<Tool>('pen')\n\n  const canvas = useCallback((node: HTMLCanvasElement | null) => {\n    setContext(node?.getContext('2d'))\n  }, [])\n\n  const handleToolChange = useCallback<ToolboxProps['onChange']>((_event, value) => {\n    if (!isTool(value)) {\n      return\n    }\n\n    setTool(value)\n  }, [])\n\n  const handlePenCapRadioChange = useCallback<React.ChangeEventHandler<HTMLInputElement>>((event) => {\n    if (isCanvasLineCap(event.target.value)) {\n      setLineCap(event.target.value)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (context == null) {\n      return\n    }\n\n    // tslint:disable-next-line:no-object-mutation\n    context.lineCap = lineCap\n  }, [context, lineCap])\n\n  return (\n    <>\n      <Canvas width={ 320 } height={ 320 } lineWidth={ 10 } ref={ canvas } context={ context } tool={ tool } />\n      <ClearCanvasButton width={ 320 } height={ 320 } context={ context }><FormattedMessage { ...messages.clear } /></ClearCanvasButton>\n      <Toolbox value={ tool } onChange={ handleToolChange } />\n      <FormControl disabled={ tool !== 'pen' }>\n        <FormLabel>line cap</FormLabel>\n        <RadioGroup name=\"lineCap\" value={ lineCap } onChange={ handlePenCapRadioChange }>\n          <FormControlLabel value=\"butt\" label=\"butt\" control={ <Radio /> } />\n          <FormControlLabel value=\"round\" label=\"round\" control={ <Radio /> } />\n          <FormControlLabel value=\"square\" label=\"square\" control={ <Radio /> } />\n        </RadioGroup>\n      </FormControl>\n    </>\n  )\n}\n\nexport default Paint\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  paint: 'paint',\n})\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { useIntl } from 'react-intl'\n\nimport Paint from '~/components/Paint'\nimport { createPage } from '~/templates/PageTemplate'\nimport messages from './messages'\n\nconst PaintPage: React.FunctionComponent = () => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <>\n      <Helmet title={ formatMessage(messages.paint) } />\n      <Paint />\n    </>\n  )\n}\n\nexport default createPage(PaintPage)\n"],"sourceRoot":""}