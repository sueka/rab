{"version":3,"sources":["webpack:///./node_modules/react-dnd/dist/esm/hooks/internal/useIsomorphicLayoutEffect.js","webpack:///./node_modules/react-intl/lib/components/useIntl.js","webpack:///./node_modules/@react-dnd/shallowequal/dist/shallowequal.esm.js","webpack:///./node_modules/react-dnd/dist/esm/hooks/internal/useDragDropManager.js","webpack:///./node_modules/react-dnd/dist/esm/utils/isRef.js","webpack:///./node_modules/react-dnd/dist/esm/common/registration.js","webpack:///./node_modules/react-dnd/dist/esm/hooks/internal/useCollector.js","webpack:///./node_modules/react-dnd/dist/esm/hooks/internal/useMonitorOutput.js","webpack:///./node_modules/react-dnd/dist/esm/utils/cloneWithRef.js","webpack:///./node_modules/react-dnd/dist/esm/common/wrapConnectorHooks.js","webpack:///./node_modules/react-dnd/dist/esm/common/DragSourceMonitorImpl.js","webpack:///./node_modules/react-dnd/dist/esm/common/SourceConnector.js","webpack:///./node_modules/react-dnd/dist/esm/hooks/internal/drag.js","webpack:///./node_modules/react-dnd/dist/esm/hooks/useDrag.js","webpack:///./node_modules/react-dnd/dist/esm/common/TargetConnector.js","webpack:///./node_modules/react-dnd/dist/esm/common/DropTargetMonitorImpl.js","webpack:///./node_modules/react-dnd/dist/esm/hooks/internal/drop.js","webpack:///./node_modules/react-dnd/dist/esm/hooks/useDrop.js"],"names":["useIsomorphicLayoutEffect","window","useIntl","intl","shallowEqual","objA","objB","compare","compareContext","compareResult","call","keysA","Object","keys","keysB","length","bHasOwnProperty","prototype","hasOwnProperty","bind","idx","key","valueA","valueB","useDragDropManager","dragDropManager","_typeof","obj","Symbol","iterator","constructor","isRef","registerTarget","type","target","manager","registry","getRegistry","targetId","addTarget","removeTarget","registerSource","source","sourceId","addSource","removeSource","_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","toString","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","_iterableToArrayLimit","TypeError","_nonIterableRest","useMonitorOutput","monitor","collect","onCollect","_useCollector2","onUpdate","_useState2","collected","setCollected","updateCollected","nextValue","useCollector","handlerId","getHandlerId","subscribeToStateChange","handlerIds","setRef","ref","node","current","cloneWithRef","element","newRef","previousRef","throwIfCompositeComponentElement","displayName","name","Error","concat","wrapConnectorHooks","hooks","wrappedHooks","forEach","hook","endsWith","wrappedHook","elementOrNode","arguments","options","wrapHookToRecognizeElement","_defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","isCallingCanDrag","isCallingIsDragging","DragSourceMonitorImpl","instance","Constructor","_classCallCheck","this","internalMonitor","getMonitor","protoProps","staticProps","canDragSource","isDraggingSource","listener","isOverTarget","getTargetIds","isSourcePublic","getSourceId","subscribeToOffsetChange","canDropOnTarget","getItemType","getItem","getDropResult","didDrop","getInitialClientOffset","getInitialSourceClientOffset","getSourceClientOffset","getClientOffset","getDifferenceFromInitialOffset","SourceConnector","backend","_this","dragSource","clearDragSource","dragSourceOptions","dragSourceRef","dragSourceNode","reconnectDragSource","dragPreview","clearDragPreview","dragPreviewOptions","dragPreviewRef","dragPreviewNode","reconnectDragPreview","dragSourceOptionsInternal","dragPreviewOptionsInternal","lastConnectedHandlerId","lastConnectedDragSource","lastConnectedDragSourceOptions","lastConnectedDragPreview","lastConnectedDragPreviewOptions","newHandlerId","reconnect","didChange","didHandlerIdChange","didConnectedDragSourceChange","didDragSourceOptionsChange","disconnectDragSource","dragSourceUnsubscribe","connectDragSource","didConnectedDragPreviewChange","didDragPreviewOptionsChange","disconnectDragPreview","dragPreviewUnsubscribe","connectDragPreview","get","set","useDrag","spec","specRef","item","_useDragSourceMonitor2","getBackend","connector","handler","beginDrag","_spec$current","begin","beginResult","canDrag","isDragging","globalMonitor","endDrag","end","_registerSource2","unregister","receiveHandlerId","useDragHandler","result","previewOptions","TargetConnector","dropTarget","clearDropTarget","dropTargetOptions","dropTargetRef","dropTargetNode","dropTargetOptionsInternal","lastConnectedDropTarget","lastConnectedDropTargetOptions","didDropTargetChange","didOptionsChange","disconnectDropTarget","unsubscribeDropTarget","connectDropTarget","isCallingCanDrop","DropTargetMonitorImpl","useDrop","accept","_useDropTargetMonitor2","canDrop","hover","drop","_registerTarget2","useDropHandler"],"mappings":"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","file":"assets/scripts/vendors~chess~reminder~253ae210.356b978a.js","sourcesContent":["import { useLayoutEffect, useEffect } from 'react'; // suppress the useLayoutEffect warning on server side.\n\nexport var useIsomorphicLayoutEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect;","import { useContext } from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nexport default function useIntl() {\n    const intl = useContext(Context);\n    invariantIntlContext(intl);\n    return intl;\n}\n","function shallowEqual(objA, objB, compare, compareContext) {\n  var compareResult = compare ? compare.call(compareContext, objA, objB) : void 0;\n\n  if (compareResult !== void 0) {\n    return !!compareResult;\n  }\n\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || !objA || typeof objB !== 'object' || !objB) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB); // Test for A's keys different from B.\n\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key)) {\n      return false;\n    }\n\n    var valueA = objA[key];\n    var valueB = objB[key];\n    compareResult = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;\n\n    if (compareResult === false || compareResult === void 0 && valueA !== valueB) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport { shallowEqual };\n//# sourceMappingURL=shallowequal.esm.js.map\n","import { useContext } from 'react';\nimport { invariant } from '@react-dnd/invariant';\nimport { DndContext } from '../../common/DndContext';\n/**\n * A hook to retrieve the DragDropManager from Context\n */\n\nexport function useDragDropManager() {\n  var _useContext = useContext(DndContext),\n      dragDropManager = _useContext.dragDropManager;\n\n  invariant(dragDropManager != null, 'Expected drag drop context');\n  return dragDropManager;\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nexport function isRef(obj) {\n  return (// eslint-disable-next-line no-prototype-builtins\n    obj !== null && _typeof(obj) === 'object' && obj.hasOwnProperty('current')\n  );\n}","export function registerTarget(type, target, manager) {\n  var registry = manager.getRegistry();\n  var targetId = registry.addTarget(type, target);\n  return [targetId, function () {\n    return registry.removeTarget(targetId);\n  }];\n}\nexport function registerSource(type, source, manager) {\n  var registry = manager.getRegistry();\n  var sourceId = registry.addSource(type, source);\n  return [sourceId, function () {\n    return registry.removeSource(sourceId);\n  }];\n}","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport { shallowEqual } from '@react-dnd/shallowequal';\nimport { useState, useCallback } from 'react';\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect';\n/**\n *\n * @param monitor The monitor to collect state from\n * @param collect The collecting function\n * @param onUpdate A method to invoke when updates occur\n */\n\nexport function useCollector(monitor, collect, onUpdate) {\n  var _useState = useState(function () {\n    return collect(monitor);\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      collected = _useState2[0],\n      setCollected = _useState2[1];\n\n  var updateCollected = useCallback(function () {\n    var nextValue = collect(monitor);\n\n    if (!shallowEqual(collected, nextValue)) {\n      setCollected(nextValue);\n\n      if (onUpdate) {\n        onUpdate();\n      }\n    }\n  }, [collected, monitor, onUpdate]); // update the collected properties after the first render\n  // and the components are attached to dnd-core\n\n  useIsomorphicLayoutEffect(updateCollected, []);\n  return [collected, updateCollected];\n}","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect';\nimport { useCollector } from './useCollector';\nexport function useMonitorOutput(monitor, collect, onCollect) {\n  var _useCollector = useCollector(monitor, collect, onCollect),\n      _useCollector2 = _slicedToArray(_useCollector, 2),\n      collected = _useCollector2[0],\n      updateCollected = _useCollector2[1];\n\n  useIsomorphicLayoutEffect(function subscribeToMonitorStateChange() {\n    var handlerId = monitor.getHandlerId();\n\n    if (handlerId == null) {\n      return undefined;\n    }\n\n    return monitor.subscribeToStateChange(updateCollected, {\n      handlerIds: [handlerId]\n    });\n  }, [monitor, updateCollected]);\n  return collected;\n}","import { cloneElement } from 'react';\nimport { invariant } from '@react-dnd/invariant';\n\nfunction setRef(ref, node) {\n  if (typeof ref === 'function') {\n    ref(node);\n  } else {\n    ref.current = node;\n  }\n}\n\nexport function cloneWithRef(element, newRef) {\n  var previousRef = element.ref;\n  invariant(typeof previousRef !== 'string', 'Cannot connect React DnD to an element with an existing string ref. ' + 'Please convert it to use a callback ref instead, or wrap it into a <span> or <div>. ' + 'Read more: https://facebook.github.io/react/docs/more-about-refs.html#the-ref-callback-attribute');\n\n  if (!previousRef) {\n    // When there is no ref on the element, use the new ref directly\n    return cloneElement(element, {\n      ref: newRef\n    });\n  } else {\n    return cloneElement(element, {\n      ref: function ref(node) {\n        setRef(previousRef, node);\n        setRef(newRef, node);\n      }\n    });\n  }\n}","import { isValidElement } from 'react';\nimport { cloneWithRef } from '../utils/cloneWithRef';\n\nfunction throwIfCompositeComponentElement(element) {\n  // Custom components can no longer be wrapped directly in React DnD 2.0\n  // so that we don't need to depend on findDOMNode() from react-dom.\n  if (typeof element.type === 'string') {\n    return;\n  }\n\n  var displayName = element.type.displayName || element.type.name || 'the component';\n  throw new Error('Only native element nodes can now be passed to React DnD connectors.' + \"You can either wrap \".concat(displayName, \" into a <div>, or turn it into a \") + 'drag source or a drop target itself.');\n}\n\nfunction wrapHookToRecognizeElement(hook) {\n  return function () {\n    var elementOrNode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    // When passed a node, call the hook straight away.\n    if (!isValidElement(elementOrNode)) {\n      var node = elementOrNode;\n      hook(node, options); // return the node so it can be chained (e.g. when within callback refs\n      // <div ref={node => connectDragSource(connectDropTarget(node))}/>\n\n      return node;\n    } // If passed a ReactElement, clone it and attach this function as a ref.\n    // This helps us achieve a neat API where user doesn't even know that refs\n    // are being used under the hood.\n\n\n    var element = elementOrNode;\n    throwIfCompositeComponentElement(element); // When no options are passed, use the hook directly\n\n    var ref = options ? function (node) {\n      return hook(node, options);\n    } : hook;\n    return cloneWithRef(element, ref);\n  };\n}\n\nexport default function wrapConnectorHooks(hooks) {\n  var wrappedHooks = {};\n  Object.keys(hooks).forEach(function (key) {\n    var hook = hooks[key]; // ref objects should be passed straight through without wrapping\n\n    if (key.endsWith('Ref')) {\n      wrappedHooks[key] = hooks[key];\n    } else {\n      var wrappedHook = wrapHookToRecognizeElement(hook);\n\n      wrappedHooks[key] = function () {\n        return wrappedHook;\n      };\n    }\n  });\n  return wrappedHooks;\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { invariant } from '@react-dnd/invariant';\nvar isCallingCanDrag = false;\nvar isCallingIsDragging = false;\nexport var DragSourceMonitorImpl =\n/*#__PURE__*/\nfunction () {\n  function DragSourceMonitorImpl(manager) {\n    _classCallCheck(this, DragSourceMonitorImpl);\n\n    this.sourceId = null;\n    this.internalMonitor = manager.getMonitor();\n  }\n\n  _createClass(DragSourceMonitorImpl, [{\n    key: \"receiveHandlerId\",\n    value: function receiveHandlerId(sourceId) {\n      this.sourceId = sourceId;\n    }\n  }, {\n    key: \"getHandlerId\",\n    value: function getHandlerId() {\n      return this.sourceId;\n    }\n  }, {\n    key: \"canDrag\",\n    value: function canDrag() {\n      invariant(!isCallingCanDrag, 'You may not call monitor.canDrag() inside your canDrag() implementation. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor');\n\n      try {\n        isCallingCanDrag = true;\n        return this.internalMonitor.canDragSource(this.sourceId);\n      } finally {\n        isCallingCanDrag = false;\n      }\n    }\n  }, {\n    key: \"isDragging\",\n    value: function isDragging() {\n      if (!this.sourceId) {\n        return false;\n      }\n\n      invariant(!isCallingIsDragging, 'You may not call monitor.isDragging() inside your isDragging() implementation. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor');\n\n      try {\n        isCallingIsDragging = true;\n        return this.internalMonitor.isDraggingSource(this.sourceId);\n      } finally {\n        isCallingIsDragging = false;\n      }\n    }\n  }, {\n    key: \"subscribeToStateChange\",\n    value: function subscribeToStateChange(listener, options) {\n      return this.internalMonitor.subscribeToStateChange(listener, options);\n    }\n  }, {\n    key: \"isDraggingSource\",\n    value: function isDraggingSource(sourceId) {\n      return this.internalMonitor.isDraggingSource(sourceId);\n    }\n  }, {\n    key: \"isOverTarget\",\n    value: function isOverTarget(targetId, options) {\n      return this.internalMonitor.isOverTarget(targetId, options);\n    }\n  }, {\n    key: \"getTargetIds\",\n    value: function getTargetIds() {\n      return this.internalMonitor.getTargetIds();\n    }\n  }, {\n    key: \"isSourcePublic\",\n    value: function isSourcePublic() {\n      return this.internalMonitor.isSourcePublic();\n    }\n  }, {\n    key: \"getSourceId\",\n    value: function getSourceId() {\n      return this.internalMonitor.getSourceId();\n    }\n  }, {\n    key: \"subscribeToOffsetChange\",\n    value: function subscribeToOffsetChange(listener) {\n      return this.internalMonitor.subscribeToOffsetChange(listener);\n    }\n  }, {\n    key: \"canDragSource\",\n    value: function canDragSource(sourceId) {\n      return this.internalMonitor.canDragSource(sourceId);\n    }\n  }, {\n    key: \"canDropOnTarget\",\n    value: function canDropOnTarget(targetId) {\n      return this.internalMonitor.canDropOnTarget(targetId);\n    }\n  }, {\n    key: \"getItemType\",\n    value: function getItemType() {\n      return this.internalMonitor.getItemType();\n    }\n  }, {\n    key: \"getItem\",\n    value: function getItem() {\n      return this.internalMonitor.getItem();\n    }\n  }, {\n    key: \"getDropResult\",\n    value: function getDropResult() {\n      return this.internalMonitor.getDropResult();\n    }\n  }, {\n    key: \"didDrop\",\n    value: function didDrop() {\n      return this.internalMonitor.didDrop();\n    }\n  }, {\n    key: \"getInitialClientOffset\",\n    value: function getInitialClientOffset() {\n      return this.internalMonitor.getInitialClientOffset();\n    }\n  }, {\n    key: \"getInitialSourceClientOffset\",\n    value: function getInitialSourceClientOffset() {\n      return this.internalMonitor.getInitialSourceClientOffset();\n    }\n  }, {\n    key: \"getSourceClientOffset\",\n    value: function getSourceClientOffset() {\n      return this.internalMonitor.getSourceClientOffset();\n    }\n  }, {\n    key: \"getClientOffset\",\n    value: function getClientOffset() {\n      return this.internalMonitor.getClientOffset();\n    }\n  }, {\n    key: \"getDifferenceFromInitialOffset\",\n    value: function getDifferenceFromInitialOffset() {\n      return this.internalMonitor.getDifferenceFromInitialOffset();\n    }\n  }]);\n\n  return DragSourceMonitorImpl;\n}();","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport wrapConnectorHooks from './wrapConnectorHooks';\nimport { isRef } from '../utils/isRef';\nimport { shallowEqual } from '@react-dnd/shallowequal';\nexport var SourceConnector =\n/*#__PURE__*/\nfunction () {\n  function SourceConnector(backend) {\n    var _this = this;\n\n    _classCallCheck(this, SourceConnector);\n\n    this.hooks = wrapConnectorHooks({\n      dragSource: function dragSource(node, options) {\n        _this.clearDragSource();\n\n        _this.dragSourceOptions = options || null;\n\n        if (isRef(node)) {\n          _this.dragSourceRef = node;\n        } else {\n          _this.dragSourceNode = node;\n        }\n\n        _this.reconnectDragSource();\n      },\n      dragPreview: function dragPreview(node, options) {\n        _this.clearDragPreview();\n\n        _this.dragPreviewOptions = options || null;\n\n        if (isRef(node)) {\n          _this.dragPreviewRef = node;\n        } else {\n          _this.dragPreviewNode = node;\n        }\n\n        _this.reconnectDragPreview();\n      }\n    });\n    this.handlerId = null; // The drop target may either be attached via ref or connect function\n\n    this.dragSourceRef = null;\n    this.dragSourceOptionsInternal = null; // The drag preview may either be attached via ref or connect function\n\n    this.dragPreviewRef = null;\n    this.dragPreviewOptionsInternal = null;\n    this.lastConnectedHandlerId = null;\n    this.lastConnectedDragSource = null;\n    this.lastConnectedDragSourceOptions = null;\n    this.lastConnectedDragPreview = null;\n    this.lastConnectedDragPreviewOptions = null;\n    this.backend = backend;\n  }\n\n  _createClass(SourceConnector, [{\n    key: \"receiveHandlerId\",\n    value: function receiveHandlerId(newHandlerId) {\n      if (this.handlerId === newHandlerId) {\n        return;\n      }\n\n      this.handlerId = newHandlerId;\n      this.reconnect();\n    }\n  }, {\n    key: \"reconnect\",\n    value: function reconnect() {\n      this.reconnectDragSource();\n      this.reconnectDragPreview();\n    }\n  }, {\n    key: \"reconnectDragSource\",\n    value: function reconnectDragSource() {\n      var dragSource = this.dragSource; // if nothing has changed then don't resubscribe\n\n      var didChange = this.didHandlerIdChange() || this.didConnectedDragSourceChange() || this.didDragSourceOptionsChange();\n\n      if (didChange) {\n        this.disconnectDragSource();\n      }\n\n      if (!this.handlerId) {\n        return;\n      }\n\n      if (!dragSource) {\n        this.lastConnectedDragSource = dragSource;\n        return;\n      }\n\n      if (didChange) {\n        this.lastConnectedHandlerId = this.handlerId;\n        this.lastConnectedDragSource = dragSource;\n        this.lastConnectedDragSourceOptions = this.dragSourceOptions;\n        this.dragSourceUnsubscribe = this.backend.connectDragSource(this.handlerId, dragSource, this.dragSourceOptions);\n      }\n    }\n  }, {\n    key: \"reconnectDragPreview\",\n    value: function reconnectDragPreview() {\n      var dragPreview = this.dragPreview; // if nothing has changed then don't resubscribe\n\n      var didChange = this.didHandlerIdChange() || this.didConnectedDragPreviewChange() || this.didDragPreviewOptionsChange();\n\n      if (!this.handlerId) {\n        this.disconnectDragPreview();\n      } else if (this.dragPreview && didChange) {\n        this.lastConnectedHandlerId = this.handlerId;\n        this.lastConnectedDragPreview = dragPreview;\n        this.lastConnectedDragPreviewOptions = this.dragPreviewOptions;\n        this.disconnectDragPreview();\n        this.dragPreviewUnsubscribe = this.backend.connectDragPreview(this.handlerId, dragPreview, this.dragPreviewOptions);\n      }\n    }\n  }, {\n    key: \"didHandlerIdChange\",\n    value: function didHandlerIdChange() {\n      return this.lastConnectedHandlerId !== this.handlerId;\n    }\n  }, {\n    key: \"didConnectedDragSourceChange\",\n    value: function didConnectedDragSourceChange() {\n      return this.lastConnectedDragSource !== this.dragSource;\n    }\n  }, {\n    key: \"didConnectedDragPreviewChange\",\n    value: function didConnectedDragPreviewChange() {\n      return this.lastConnectedDragPreview !== this.dragPreview;\n    }\n  }, {\n    key: \"didDragSourceOptionsChange\",\n    value: function didDragSourceOptionsChange() {\n      return !shallowEqual(this.lastConnectedDragSourceOptions, this.dragSourceOptions);\n    }\n  }, {\n    key: \"didDragPreviewOptionsChange\",\n    value: function didDragPreviewOptionsChange() {\n      return !shallowEqual(this.lastConnectedDragPreviewOptions, this.dragPreviewOptions);\n    }\n  }, {\n    key: \"disconnectDragSource\",\n    value: function disconnectDragSource() {\n      if (this.dragSourceUnsubscribe) {\n        this.dragSourceUnsubscribe();\n        this.dragSourceUnsubscribe = undefined;\n      }\n    }\n  }, {\n    key: \"disconnectDragPreview\",\n    value: function disconnectDragPreview() {\n      if (this.dragPreviewUnsubscribe) {\n        this.dragPreviewUnsubscribe();\n        this.dragPreviewUnsubscribe = undefined;\n        this.dragPreviewNode = null;\n        this.dragPreviewRef = null;\n      }\n    }\n  }, {\n    key: \"clearDragSource\",\n    value: function clearDragSource() {\n      this.dragSourceNode = null;\n      this.dragSourceRef = null;\n    }\n  }, {\n    key: \"clearDragPreview\",\n    value: function clearDragPreview() {\n      this.dragPreviewNode = null;\n      this.dragPreviewRef = null;\n    }\n  }, {\n    key: \"connectTarget\",\n    get: function get() {\n      return this.dragSource;\n    }\n  }, {\n    key: \"dragSourceOptions\",\n    get: function get() {\n      return this.dragSourceOptionsInternal;\n    },\n    set: function set(options) {\n      this.dragSourceOptionsInternal = options;\n    }\n  }, {\n    key: \"dragPreviewOptions\",\n    get: function get() {\n      return this.dragPreviewOptionsInternal;\n    },\n    set: function set(options) {\n      this.dragPreviewOptionsInternal = options;\n    }\n  }, {\n    key: \"dragSource\",\n    get: function get() {\n      return this.dragSourceNode || this.dragSourceRef && this.dragSourceRef.current;\n    }\n  }, {\n    key: \"dragPreview\",\n    get: function get() {\n      return this.dragPreviewNode || this.dragPreviewRef && this.dragPreviewRef.current;\n    }\n  }]);\n\n  return SourceConnector;\n}();","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport { useMemo } from 'react';\nimport { invariant } from '@react-dnd/invariant';\nimport { registerSource } from '../../common/registration';\nimport { useDragDropManager } from './useDragDropManager';\nimport { DragSourceMonitorImpl } from '../../common/DragSourceMonitorImpl';\nimport { SourceConnector } from '../../common/SourceConnector';\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect';\nexport function useDragSourceMonitor() {\n  var manager = useDragDropManager();\n  var monitor = useMemo(function () {\n    return new DragSourceMonitorImpl(manager);\n  }, [manager]);\n  var connector = useMemo(function () {\n    return new SourceConnector(manager.getBackend());\n  }, [manager]);\n  return [monitor, connector];\n}\nexport function useDragHandler(spec, monitor, connector) {\n  var manager = useDragDropManager();\n  var handler = useMemo(function () {\n    return {\n      beginDrag: function beginDrag() {\n        var _spec$current = spec.current,\n            begin = _spec$current.begin,\n            item = _spec$current.item;\n\n        if (begin) {\n          var beginResult = begin(monitor);\n          invariant(beginResult == null || _typeof(beginResult) === 'object', 'dragSpec.begin() must either return an object, undefined, or null');\n          return beginResult || item || {};\n        }\n\n        return item || {};\n      },\n      canDrag: function canDrag() {\n        if (typeof spec.current.canDrag === 'boolean') {\n          return spec.current.canDrag;\n        } else if (typeof spec.current.canDrag === 'function') {\n          return spec.current.canDrag(monitor);\n        } else {\n          return true;\n        }\n      },\n      isDragging: function isDragging(globalMonitor, target) {\n        var isDragging = spec.current.isDragging;\n        return isDragging ? isDragging(monitor) : target === globalMonitor.getSourceId();\n      },\n      endDrag: function endDrag() {\n        var end = spec.current.end;\n\n        if (end) {\n          end(monitor.getItem(), monitor);\n        }\n\n        connector.reconnect();\n      }\n    };\n  }, []);\n  useIsomorphicLayoutEffect(function registerHandler() {\n    var _registerSource = registerSource(spec.current.item.type, handler, manager),\n        _registerSource2 = _slicedToArray(_registerSource, 2),\n        handlerId = _registerSource2[0],\n        unregister = _registerSource2[1];\n\n    monitor.receiveHandlerId(handlerId);\n    connector.receiveHandlerId(handlerId);\n    return unregister;\n  }, []);\n}","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport { useRef, useMemo } from 'react';\nimport { invariant } from '@react-dnd/invariant';\nimport { useMonitorOutput } from './internal/useMonitorOutput';\nimport { useIsomorphicLayoutEffect } from './internal/useIsomorphicLayoutEffect';\nimport { useDragSourceMonitor, useDragHandler } from './internal/drag';\n/**\n * useDragSource hook\n * @param sourceSpec The drag source specification *\n */\n\nexport function useDrag(spec) {\n  var specRef = useRef(spec);\n  specRef.current = spec; // TODO: wire options into createSourceConnector\n\n  invariant(spec.item != null, 'item must be defined');\n  invariant(spec.item.type != null, 'item type must be defined');\n\n  var _useDragSourceMonitor = useDragSourceMonitor(),\n      _useDragSourceMonitor2 = _slicedToArray(_useDragSourceMonitor, 2),\n      monitor = _useDragSourceMonitor2[0],\n      connector = _useDragSourceMonitor2[1];\n\n  useDragHandler(specRef, monitor, connector);\n  var result = useMonitorOutput(monitor, specRef.current.collect || function () {\n    return {};\n  }, function () {\n    return connector.reconnect();\n  });\n  var connectDragSource = useMemo(function () {\n    return connector.hooks.dragSource();\n  }, [connector]);\n  var connectDragPreview = useMemo(function () {\n    return connector.hooks.dragPreview();\n  }, [connector]);\n  useIsomorphicLayoutEffect(function () {\n    connector.dragSourceOptions = specRef.current.options || null;\n    connector.reconnect();\n  }, [connector]);\n  useIsomorphicLayoutEffect(function () {\n    connector.dragPreviewOptions = specRef.current.previewOptions || null;\n    connector.reconnect();\n  }, [connector]);\n  return [result, connectDragSource, connectDragPreview];\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { shallowEqual } from '@react-dnd/shallowequal';\nimport wrapConnectorHooks from './wrapConnectorHooks';\nimport { isRef } from '../utils/isRef';\nexport var TargetConnector =\n/*#__PURE__*/\nfunction () {\n  function TargetConnector(backend) {\n    var _this = this;\n\n    _classCallCheck(this, TargetConnector);\n\n    this.hooks = wrapConnectorHooks({\n      dropTarget: function dropTarget(node, options) {\n        _this.clearDropTarget();\n\n        _this.dropTargetOptions = options;\n\n        if (isRef(node)) {\n          _this.dropTargetRef = node;\n        } else {\n          _this.dropTargetNode = node;\n        }\n\n        _this.reconnect();\n      }\n    });\n    this.handlerId = null; // The drop target may either be attached via ref or connect function\n\n    this.dropTargetRef = null;\n    this.dropTargetOptionsInternal = null;\n    this.lastConnectedHandlerId = null;\n    this.lastConnectedDropTarget = null;\n    this.lastConnectedDropTargetOptions = null;\n    this.backend = backend;\n  }\n\n  _createClass(TargetConnector, [{\n    key: \"reconnect\",\n    value: function reconnect() {\n      // if nothing has changed then don't resubscribe\n      var didChange = this.didHandlerIdChange() || this.didDropTargetChange() || this.didOptionsChange();\n\n      if (didChange) {\n        this.disconnectDropTarget();\n      }\n\n      var dropTarget = this.dropTarget;\n\n      if (!this.handlerId) {\n        return;\n      }\n\n      if (!dropTarget) {\n        this.lastConnectedDropTarget = dropTarget;\n        return;\n      }\n\n      if (didChange) {\n        this.lastConnectedHandlerId = this.handlerId;\n        this.lastConnectedDropTarget = dropTarget;\n        this.lastConnectedDropTargetOptions = this.dropTargetOptions;\n        this.unsubscribeDropTarget = this.backend.connectDropTarget(this.handlerId, dropTarget, this.dropTargetOptions);\n      }\n    }\n  }, {\n    key: \"receiveHandlerId\",\n    value: function receiveHandlerId(newHandlerId) {\n      if (newHandlerId === this.handlerId) {\n        return;\n      }\n\n      this.handlerId = newHandlerId;\n      this.reconnect();\n    }\n  }, {\n    key: \"didHandlerIdChange\",\n    value: function didHandlerIdChange() {\n      return this.lastConnectedHandlerId !== this.handlerId;\n    }\n  }, {\n    key: \"didDropTargetChange\",\n    value: function didDropTargetChange() {\n      return this.lastConnectedDropTarget !== this.dropTarget;\n    }\n  }, {\n    key: \"didOptionsChange\",\n    value: function didOptionsChange() {\n      return !shallowEqual(this.lastConnectedDropTargetOptions, this.dropTargetOptions);\n    }\n  }, {\n    key: \"disconnectDropTarget\",\n    value: function disconnectDropTarget() {\n      if (this.unsubscribeDropTarget) {\n        this.unsubscribeDropTarget();\n        this.unsubscribeDropTarget = undefined;\n      }\n    }\n  }, {\n    key: \"clearDropTarget\",\n    value: function clearDropTarget() {\n      this.dropTargetRef = null;\n      this.dropTargetNode = null;\n    }\n  }, {\n    key: \"connectTarget\",\n    get: function get() {\n      return this.dropTarget;\n    }\n  }, {\n    key: \"dropTargetOptions\",\n    get: function get() {\n      return this.dropTargetOptionsInternal;\n    },\n    set: function set(options) {\n      this.dropTargetOptionsInternal = options;\n    }\n  }, {\n    key: \"dropTarget\",\n    get: function get() {\n      return this.dropTargetNode || this.dropTargetRef && this.dropTargetRef.current;\n    }\n  }]);\n\n  return TargetConnector;\n}();","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { invariant } from '@react-dnd/invariant';\nvar isCallingCanDrop = false;\nexport var DropTargetMonitorImpl =\n/*#__PURE__*/\nfunction () {\n  function DropTargetMonitorImpl(manager) {\n    _classCallCheck(this, DropTargetMonitorImpl);\n\n    this.targetId = null;\n    this.internalMonitor = manager.getMonitor();\n  }\n\n  _createClass(DropTargetMonitorImpl, [{\n    key: \"receiveHandlerId\",\n    value: function receiveHandlerId(targetId) {\n      this.targetId = targetId;\n    }\n  }, {\n    key: \"getHandlerId\",\n    value: function getHandlerId() {\n      return this.targetId;\n    }\n  }, {\n    key: \"subscribeToStateChange\",\n    value: function subscribeToStateChange(listener, options) {\n      return this.internalMonitor.subscribeToStateChange(listener, options);\n    }\n  }, {\n    key: \"canDrop\",\n    value: function canDrop() {\n      // Cut out early if the target id has not been set. This should prevent errors\n      // where the user has an older version of dnd-core like in\n      // https://github.com/react-dnd/react-dnd/issues/1310\n      if (!this.targetId) {\n        return false;\n      }\n\n      invariant(!isCallingCanDrop, 'You may not call monitor.canDrop() inside your canDrop() implementation. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target-monitor');\n\n      try {\n        isCallingCanDrop = true;\n        return this.internalMonitor.canDropOnTarget(this.targetId);\n      } finally {\n        isCallingCanDrop = false;\n      }\n    }\n  }, {\n    key: \"isOver\",\n    value: function isOver(options) {\n      if (!this.targetId) {\n        return false;\n      }\n\n      return this.internalMonitor.isOverTarget(this.targetId, options);\n    }\n  }, {\n    key: \"getItemType\",\n    value: function getItemType() {\n      return this.internalMonitor.getItemType();\n    }\n  }, {\n    key: \"getItem\",\n    value: function getItem() {\n      return this.internalMonitor.getItem();\n    }\n  }, {\n    key: \"getDropResult\",\n    value: function getDropResult() {\n      return this.internalMonitor.getDropResult();\n    }\n  }, {\n    key: \"didDrop\",\n    value: function didDrop() {\n      return this.internalMonitor.didDrop();\n    }\n  }, {\n    key: \"getInitialClientOffset\",\n    value: function getInitialClientOffset() {\n      return this.internalMonitor.getInitialClientOffset();\n    }\n  }, {\n    key: \"getInitialSourceClientOffset\",\n    value: function getInitialSourceClientOffset() {\n      return this.internalMonitor.getInitialSourceClientOffset();\n    }\n  }, {\n    key: \"getSourceClientOffset\",\n    value: function getSourceClientOffset() {\n      return this.internalMonitor.getSourceClientOffset();\n    }\n  }, {\n    key: \"getClientOffset\",\n    value: function getClientOffset() {\n      return this.internalMonitor.getClientOffset();\n    }\n  }, {\n    key: \"getDifferenceFromInitialOffset\",\n    value: function getDifferenceFromInitialOffset() {\n      return this.internalMonitor.getDifferenceFromInitialOffset();\n    }\n  }]);\n\n  return DropTargetMonitorImpl;\n}();","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport { useMemo } from 'react';\nimport { registerTarget } from '../../common/registration';\nimport { useDragDropManager } from './useDragDropManager';\nimport { TargetConnector } from '../../common/TargetConnector';\nimport { DropTargetMonitorImpl } from '../../common/DropTargetMonitorImpl';\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect';\nexport function useDropTargetMonitor() {\n  var manager = useDragDropManager();\n  var monitor = useMemo(function () {\n    return new DropTargetMonitorImpl(manager);\n  }, [manager]);\n  var connector = useMemo(function () {\n    return new TargetConnector(manager.getBackend());\n  }, [manager]);\n  return [monitor, connector];\n}\nexport function useDropHandler(spec, monitor, connector) {\n  var manager = useDragDropManager();\n  var handler = useMemo(function () {\n    return {\n      canDrop: function canDrop() {\n        var canDrop = spec.current.canDrop;\n        return canDrop ? canDrop(monitor.getItem(), monitor) : true;\n      },\n      hover: function hover() {\n        var hover = spec.current.hover;\n\n        if (hover) {\n          hover(monitor.getItem(), monitor);\n        }\n      },\n      drop: function drop() {\n        var drop = spec.current.drop;\n\n        if (drop) {\n          return drop(monitor.getItem(), monitor);\n        }\n      }\n    };\n  }, [monitor]);\n  useIsomorphicLayoutEffect(function registerHandler() {\n    var _registerTarget = registerTarget(spec.current.accept, handler, manager),\n        _registerTarget2 = _slicedToArray(_registerTarget, 2),\n        handlerId = _registerTarget2[0],\n        unregister = _registerTarget2[1];\n\n    monitor.receiveHandlerId(handlerId);\n    connector.receiveHandlerId(handlerId);\n    return unregister;\n  }, [monitor, connector]);\n}","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport { useRef, useMemo } from 'react';\nimport { invariant } from '@react-dnd/invariant';\nimport { useMonitorOutput } from './internal/useMonitorOutput';\nimport { useIsomorphicLayoutEffect } from './internal/useIsomorphicLayoutEffect';\nimport { useDropHandler, useDropTargetMonitor } from './internal/drop';\n/**\n * useDropTarget Hook\n * @param spec The drop target specification\n */\n\nexport function useDrop(spec) {\n  var specRef = useRef(spec);\n  specRef.current = spec;\n  invariant(spec.accept != null, 'accept must be defined');\n\n  var _useDropTargetMonitor = useDropTargetMonitor(),\n      _useDropTargetMonitor2 = _slicedToArray(_useDropTargetMonitor, 2),\n      monitor = _useDropTargetMonitor2[0],\n      connector = _useDropTargetMonitor2[1];\n\n  useDropHandler(specRef, monitor, connector);\n  var result = useMonitorOutput(monitor, specRef.current.collect || function () {\n    return {};\n  }, function () {\n    return connector.reconnect();\n  });\n  var connectDropTarget = useMemo(function () {\n    return connector.hooks.dropTarget();\n  }, [connector]);\n  useIsomorphicLayoutEffect(function () {\n    connector.dropTargetOptions = spec.options || null;\n    connector.reconnect();\n  }, [spec.options]);\n  return [result, connectDropTarget];\n}"],"sourceRoot":""}