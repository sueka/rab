{"version":3,"sources":["webpack:///./src/lib/identity.ts","webpack:///./src/lib/guards/commonGuards.ts","webpack:///./src/components/Nav/classes.css?5ee4","webpack:///./src/components/Nav/classes.css","webpack:///./src/components/DarkSwitch/index.tsx","webpack:///./src/components/LocaleSelect/messages.ts","webpack:///./src/components/LocaleSelect/index.tsx","webpack:///./src/lib/languageNameSolver/index.ts","webpack:///./src/lib/components/Link/index.tsx","webpack:///./src/lib/components/MenuItemLink/index.tsx","webpack:///./src/components/Nav/messages.ts","webpack:///./src/components/Nav/index.tsx","webpack:///./src/lib/components/ErrorBoundary/index.ts","webpack:///./src/templates/PageTemplate/index.tsx","webpack:///./src/lib/asserters/commonAsserters.ts","webpack:///./src/lib/validators/stringValidators.ts","webpack:///./src/components/Reminder/TaskListItem/classes.css?e0e5","webpack:///./src/components/Reminder/TaskListItem/classes.css","webpack:///./src/lib/curry.ts","webpack:///./src/components/Reminder/AddTaskButton/messages.ts","webpack:///./src/components/Reminder/AddTaskButton/index.tsx","webpack:///./src/components/Reminder/TaskList/index.tsx","webpack:///./src/components/Reminder/TaskListItem/DeleteTaskButton/index.tsx","webpack:///./src/components/Reminder/TaskListItem/messages.ts","webpack:///./src/components/Reminder/TaskListItem/index.tsx","webpack:///./src/components/Reminder/TaskListItemDropTarget/index.tsx","webpack:///./src/components/Reminder/index.tsx","webpack:///./src/components/App/ReminderPage/messages.ts","webpack:///./src/components/App/ReminderPage/index.tsx"],"names":["isOneOf","options","input","some","option","optional","isT","undefined","api","content","__esModule","default","module","i","exported","locals","exports","___CSS_LOADER_API_IMPORT___","push","DarkSwitch","useContext","ThemeProviderContext","dark","setDark","Error","handleChange","useCallback","_event","checked","Switch","onChange","defineMessages","languages","mapDispatchToProps","selectLocale","connect","locale","localeSelector","classes","FormControlProps","useState","labelWidth","setLabelWidth","inputId","useMemo","v4","theme","useTheme","variant","props","MuiFormControl","rootClassName","classnames","root","className","labelClassName","label","inputClassName","selectIconClassName","selectIcon","inputUnderlineClassName","inputUnderline","inputLabel","node","offsetWidth","event","tag","target","value","tagNativeNameMap","availableLocales","IntlProviderContext","FormControl","InputLabel","ref","htmlFor","messages","Select","icon","native","id","inputProps","standard","Input","underline","outlined","OutlinedInput","filled","FilledInput","map","availableLocale","key","isTypographyColor","RouterLinkWithRef","React","forwardRef","innerRef","Link","this","color","restProps","component","console","warn","typed","Component","MenuItemLink","menuItem","to","button","menuItemProps","LinkWithRef","linkProps","link","MenuItem","home","chess","counter","info","paint","reminder","Nav","anchorEl","setAnchorEl","openMenu","currentTarget","closeMenu","AppBar","position","Toolbar","IconButton","edge","onClick","Spacer","LocaleSelectLabel","LocaleSelectInput","LocaleSelectSelectIcon","LocaleSelectInputUnderline","Menu","open","onClose","ErrorBoundary","state","hasError","renderError","children","error","getDerivedStateFromError","PageTemplate","String","TypeError","createPage","Body","shouldBePresent","it","shouldBeNullable","asBoundedLengthString","lowerBound","Infinity","upperBound","inputAsString","asString","length","ValidationError","asUrl","isUrl","curry","f","x","xs","add","AddTaskButton","addTask","Button","TaskList","List","DeleteTaskButton","asBoundedLengthStringErrorMessage","TaskListItem","index","onDelete","validate","useDrag","item","type","isDragging","monitor","getItem","isIdenticalTo","collect","dragging","drag","preview","TaskListItemContainer","Dragging","handleContentChange","handleDoneChange","_checked","done","useIntl","formatMessage","errors","Object","values","helperText","keys","text","Case","sentence","ListItem","container","secondaryAction","ListItemSecondaryAction","ListItemIcon","Checkbox","TextField","fullWidth","disabled","TaskListItemDropTarget","moveTask","div","useRef","useDrop","accept","hover","current","clientOffset","getClientOffset","boundingClientRect","getBoundingClientRect","pointerY","y","top","middleY","bottom","drop","asObject","leftOnly","named","asBoolean","getTasks","getTasksAsync","addTaskAsync","changeTaskContent","changeTaskContentAsync","markTaskAsDone","markTaskAsDoneAsync","markTaskAsUndone","markTaskAsUndoneAsync","deleteTask","deleteTaskAsync","tasks","useEffect","changeTask","taskId","task","toArray","title"],"mappings":"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","file":"assets/scripts/reminder~21833f8f.df6bbab2.js","sourcesContent":["const identity = <T extends U, U>(it: T): U => it\n\nexport default identity\n","import identity from '~/lib/identity'\n\nexport const isOneOf = <T extends readonly Json[]>(...options: T) => (input: unknown): input is T[number] => options.some((option) => option === input)\n\nexport const optional = <A extends unknown, T extends A>(isT: (input: A) => input is T) => (input: A | undefined): input is T | undefined => {\n  if (input === undefined) {\n    return true\n  }\n\n  return isT(input)\n}\n\nexport const isObject = <A extends B, T extends A, B = A>(isT: (input: B) => Record<keyof A, boolean>) => (input: A): input is T => {\n  return Object.values<boolean>(isT(input)).every(identity)\n}\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--5-1!../../../node_modules/postcss-loader/src/index.js!./classes.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".src-components-Nav-classes__Spacer--36ovl {\\n  flex-grow: 1;\\n}\\n\\n.src-components-Nav-classes__LocaleSelectLabel--3h3DV.src-components-Nav-classes__LocaleSelectLabel--3h3DV {\\n  color: currentColor\\n}\\n\\n.src-components-Nav-classes__LocaleSelectLabel--3h3DV.src-components-Nav-classes__LocaleSelectLabel--3h3DV.Mui-focused {\\n    opacity: 0.618;\\n    color: currentColor;\\n  }\\n\\n.src-components-Nav-classes__LocaleSelectInput--3oNu1.src-components-Nav-classes__LocaleSelectInput--3oNu1 {\\n  color: currentColor;\\n}\\n\\n.src-components-Nav-classes__LocaleSelectSelectIcon--2AyFk.src-components-Nav-classes__LocaleSelectSelectIcon--2AyFk {\\n  color: currentColor;\\n}\\n\\n.src-components-Nav-classes__LocaleSelectInputUnderline--2WFrx.src-components-Nav-classes__LocaleSelectInputUnderline--2WFrx::before,\\n  .src-components-Nav-classes__LocaleSelectInputUnderline--2WFrx.src-components-Nav-classes__LocaleSelectInputUnderline--2WFrx:hover:not(.Mui-disabled)::before,\\n  .src-components-Nav-classes__LocaleSelectInputUnderline--2WFrx.src-components-Nav-classes__LocaleSelectInputUnderline--2WFrx::after {\\n    border-bottom-color: currentColor;\\n  }\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"Spacer\": \"src-components-Nav-classes__Spacer--36ovl\",\n\t\"LocaleSelectLabel\": \"src-components-Nav-classes__LocaleSelectLabel--3h3DV\",\n\t\"LocaleSelectInput\": \"src-components-Nav-classes__LocaleSelectInput--3oNu1\",\n\t\"LocaleSelectSelectIcon\": \"src-components-Nav-classes__LocaleSelectSelectIcon--2AyFk\",\n\t\"LocaleSelectInputUnderline\": \"src-components-Nav-classes__LocaleSelectInputUnderline--2WFrx\"\n};\nmodule.exports = exports;\n","import React, { useCallback, useContext } from 'react'\n\nimport Switch from '@material-ui/core/Switch'\n\nimport ThemeProviderContext from '~/contexts/ThemeProviderContext'\n\nconst DarkSwitch = () => {\n  const { dark, setDark } = useContext(ThemeProviderContext)\n\n  if (dark == null || setDark == null) {\n    throw new Error //\n  }\n\n  const handleChange = useCallback((_event, checked) => {\n    setDark(checked)\n  }, [setDark])\n\n  return (\n    <Switch checked={ dark } onChange={ handleChange } />\n  )\n}\n\nexport default DarkSwitch\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  languages: 'Languages',\n})\n","import classnames from 'classnames'\nimport React, { useCallback, useContext, useMemo, useState } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { connect } from 'react-redux'\nimport { v4 } from 'uuid'\n\nimport FilledInput from '@material-ui/core/FilledInput'\nimport FormControl, { FormControlProps } from '@material-ui/core/FormControl'\nimport Input from '@material-ui/core/Input'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport OutlinedInput from '@material-ui/core/OutlinedInput'\nimport Select, { SelectProps } from '@material-ui/core/Select'\nimport { useTheme } from '@material-ui/core/styles'\n\nimport IntlProviderContext from '~/lib/contexts/IntlProviderContext'\nimport { Tag, getNativeNameByTag, isTag } from '~/lib/languageNameSolver'\nimport { State } from '~/redux'\nimport { selectLocale } from '~/redux/modules/localeSelector'\nimport messages from './messages'\n\ninterface OwnProps {\n  classes?: {\n    root?: string\n    label?: string\n    input?: string\n    selectIcon?: string\n    inputUnderline?: string\n  } | null\n  FormControlProps?: FormControlProps | null\n}\n\ninterface StateProps {\n  locale: Tag\n}\n\ninterface DispatchProps {\n  selectLocale(locale: Tag): void\n}\n\ntype Props =\n  & OwnProps\n  & StateProps\n  & DispatchProps\n\nexport /* for testing */ const LocaleSelect: React.FunctionComponent<Props> = ({ classes, FormControlProps, locale, selectLocale }) => {\n  const [labelWidth, setLabelWidth] = useState<number>(0)\n  const inputId = useMemo(v4, [])\n  const theme = useTheme()\n\n  // NOTE: Fortunately, FormControl is nothing but FormControl.\n  const variant = useMemo(() => FormControlProps?.variant ?? theme?.props?.MuiFormControl?.variant ?? 'standard', [FormControlProps?.variant, theme?.props?.MuiFormControl?.variant])\n\n  const rootClassName = useMemo(() => classnames(classes?.root, FormControlProps?.className), [classes?.root, FormControlProps?.className])\n  const labelClassName = useMemo(() => classnames(classes?.label), [classes?.label])\n  const inputClassName = useMemo(() => classnames(classes?.input), [classes?.input])\n  const selectIconClassName = useMemo(() => classnames(classes?.selectIcon), [classes?.selectIcon])\n  const inputUnderlineClassName = useMemo(() => classnames(classes?.inputUnderline), [classes?.inputUnderline])\n\n  const inputLabel = useCallback((node: HTMLLabelElement | null) => { // TODO: type\n    if (node !== null) {\n      setLabelWidth(node.offsetWidth)\n    }\n  }, [])\n\n  const handleChange = useCallback<NonNullable<SelectProps['onChange']>>((event) => {\n    if (isTag(event.target.value)) {\n      selectLocale(event.target.value)\n    }\n  }, [selectLocale])\n\n  const { availableLocales } = useContext(IntlProviderContext)\n\n  return (\n    <FormControl\n      { ...FormControlProps }\n      className={ rootClassName } // NOTE: override FormControlProps.className\n    >\n      <InputLabel className={ labelClassName } ref={ inputLabel } htmlFor={ inputId }>\n        <FormattedMessage { ...messages.languages } />\n      </InputLabel>\n      <Select\n        classes={ {\n          icon: selectIconClassName,\n        } }\n        native\n        labelWidth={ labelWidth }\n        value={ locale }\n        onChange={ handleChange }\n        id={ inputId }\n        inputProps={ { 'data-testid': 'localeSelect' } }\n        input={ {\n          standard: (\n            <Input\n              className={ inputClassName }\n              classes={ {\n                underline: inputUnderlineClassName,\n              } }\n            />\n          ),\n          outlined: <OutlinedInput className={ inputClassName } labelWidth={ labelWidth } />,\n          filled: <FilledInput className={ inputClassName } />,\n        }[variant] }\n      >\n        { availableLocales?.map((availableLocale, i) => (\n          <option key={ i } value={ availableLocale }>{ getNativeNameByTag(availableLocale) }</option>\n        )) }\n      </Select>\n    </FormControl>\n  )\n}\n\n// connect\n\nconst mapStateToProps = ({ localeSelector: { locale } }: State): StateProps => ({\n  locale,\n})\n\nconst mapDispatchToProps: DispatchProps = {\n  selectLocale,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LocaleSelect)\n","import tagNativeNameMap from './__data__/tagNativeNameMap.json'\n\nexport type Tag = keyof typeof tagNativeNameMap\n\nexport function isTag(tag: unknown): tag is Tag {\n  return typeof tag === 'string' && tag in tagNativeNameMap\n}\n\nexport function getNativeNameByTag(tag: Tag) {\n  return tagNativeNameMap[tag]\n}\n","import React from 'react'\nimport { Link as RouterLink, LinkProps as RouterLinkProps } from 'react-router-dom'\n\nimport MuiLink, { LinkProps as MuiLinkProps } from '@material-ui/core/Link'\n\nimport { isOneOf, optional } from '~/lib/guards/commonGuards'\nimport typed from '~/lib/typed'\n\nexport type Props =\n  & RouterLinkProps\n  & Alt.Omit<MuiLinkProps, 'color' | 'ref'>\n\nconst isTypographyColor = optional(isOneOf('initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error'))\n\n// TODO: delete this; See also https://material-ui.com/guides/composition/#link\nconst RouterLinkWithRef = React.forwardRef<HTMLAnchorElement, RouterLinkProps>((props, ref) => (\n  <RouterLink innerRef={ ref } { ...props } />\n))\n\nexport default class Link extends React.Component<Props> {\n  public render() {\n    const { color, ...restProps } = this.props\n\n    if (!isTypographyColor(color)) {\n      console.warn(typed<[string]>`${ color } is not a Material-UI Typography color.`) // tslint:disable-line:no-console\n\n      return (\n        <MuiLink component={ RouterLinkWithRef } { ...restProps } />\n      )\n    }\n\n    return (\n      <MuiLink component={ RouterLinkWithRef } color={ color } { ...restProps } />\n    )\n  }\n}\n","import * as React from 'react'\n\nimport MenuItem, { MenuItemProps } from '@material-ui/core/MenuItem'\n\nimport Link, { Props as LinkProps } from '~/lib/components/Link'\n\ntype Props = MenuItemProps<typeof Link, { button?: true }>\n\nconst MenuItemLink: React.FunctionComponent<Props> = React.forwardRef<Link, React.PropsWithoutRef<Props>>(({ to, button, innerRef, ...menuItemProps }, menuItem) => {\n  // See https://material-ui.com/guides/composition/#link\n  const LinkWithRef = React.forwardRef<Link, LinkProps>((linkProps, link) => (\n    <Link ref={ link } innerRef={ innerRef } color=\"inherit\" underline=\"none\" { ...linkProps } />\n  ))\n\n  return (\n    <MenuItem button component={ LinkWithRef } to={ to } ref={ menuItem } { ...menuItemProps } />\n  )\n})\n\nexport default MenuItemLink\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  home: 'home',\n  chess: 'chess',\n  counter: 'counter',\n  info: 'info',\n  paint: 'paint',\n  reminder: 'reminder',\n})\n","// import classnames from 'classnames'\nimport React, { useCallback, useState } from 'react'\nimport { FormattedMessage } from 'react-intl'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Menu from '@material-ui/core/Menu'\nimport Toolbar from '@material-ui/core/Toolbar'\n// import { createStyles, makeStyles } from '@material-ui/core/styles'\nimport MenuIcon from '@material-ui/icons/Menu'\n\nimport DarkSwitch from '~/components/DarkSwitch'\nimport LocaleSelect from '~/components/LocaleSelect' // TODO\nimport MenuItemLink from '~/lib/components/MenuItemLink'\nimport classes from './classes.css'\nimport messages from './messages'\n\nconst Nav: React.FunctionComponent = () => {\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null)\n\n  const openMenu = useCallback<React.MouseEventHandler<HTMLButtonElement>>((event) => {\n    setAnchorEl(event.currentTarget)\n  }, [])\n\n  const closeMenu = useCallback(() => {\n    setAnchorEl(null)\n  }, [])\n\n  return (\n    <>\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" onClick={ openMenu }>\n            <MenuIcon />\n          </IconButton>\n          <div className={ classes.Spacer } />\n          <DarkSwitch />\n          <LocaleSelect\n            classes={ {\n              label: classes.LocaleSelectLabel,\n              input: classes.LocaleSelectInput,\n              selectIcon: classes.LocaleSelectSelectIcon,\n              inputUnderline: classes.LocaleSelectInputUnderline,\n            } }\n            FormControlProps={ {\n              variant: 'filled',\n            } }\n          />\n        </Toolbar>\n      </AppBar>\n      <Menu open={ anchorEl !== null } anchorEl={ anchorEl } onClose={ closeMenu }>\n        <MenuItemLink to=\"/\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.home } />\n        </MenuItemLink>\n        <MenuItemLink to=\"/chess\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.chess } />\n        </MenuItemLink>\n        <MenuItemLink to=\"/counter\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.counter } />\n        </MenuItemLink>\n        <MenuItemLink to=\"/info\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.info } />\n        </MenuItemLink>\n        <MenuItemLink to=\"/paint\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.paint } />\n        </MenuItemLink>\n        <MenuItemLink to=\"/reminder\" onClick={ closeMenu }>\n          <FormattedMessage { ...messages.reminder } />\n        </MenuItemLink>\n      </Menu>\n    </>\n  )\n}\n\nexport default Nav\n","import React from 'react'\n\ninterface Props {\n  /**\n   * @param children that throws {error}\n   */\n  renderError(error: unknown, children: React.ReactNode): React.ReactNode\n}\n\ninterface State {\n  hasError: boolean\n  error?: unknown\n}\n\nclass ErrorBoundary extends React.Component<Props, State> {\n\n  // NOTE: https://github.com/DefinitelyTyped/DefinitelyTyped/blob/826ce0f1ce1d1887d199986283630d6f63075ad5/types/react/index.d.ts#L419 にも関わらず、初期化されていない state は null であるため、初期化を強制するためにプロパティ宣言を行う。\n  public state: Readonly<State> = {\n    hasError: false,\n  }\n\n  public static getDerivedStateFromError = (error: unknown) => ({\n    hasError: true,\n    error,\n  })\n\n  public render() {\n    const { renderError, children } = this.props\n    const { hasError, error } = this.state\n\n    if (hasError) {\n      return renderError(error, children)\n    }\n\n    return children\n  }\n}\n\nexport default ErrorBoundary\n","import React, { useCallback } from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\n\nimport Nav from '~/components/Nav'\nimport ErrorBoundary from '~/lib/components/ErrorBoundary'\nimport typed from '~/lib/typed'\n\ninterface PageTemplateProps {\n  children: React.ReactElement<BodyProps, React.ComponentType<BodyProps>>\n}\n\ntype BodyProps = PageProps\n\ntype PageProps =\n  & RouteComponentProps\n\nconst PageTemplate: React.FunctionComponent<PageTemplateProps> = ({ children }) => {\n  const renderError = useCallback((error: unknown) => {\n    if (error instanceof Error) {\n      return typed<[string]>`${ String(error) }`\n    }\n\n    throw new TypeError(typed<[string]>`${ String(error) } is not an error.`)\n  }, [])\n\n  return (\n    <>\n      <Nav />\n      <ErrorBoundary renderError={ renderError }>\n        { children }\n      </ErrorBoundary>\n    </>\n  )\n}\n\nexport const createPage: (Body: React.FunctionComponent<BodyProps>) => React.FunctionComponent<PageProps> = (Body) => (props) => (\n  <PageTemplate>\n    <Body { ...props } />\n  </PageTemplate>\n)\n\nexport default PageTemplate\n","export function shouldBePresent<T>(it: T | null | undefined): asserts it is T {\n  if (it == null) {\n    throw new Error //\n  }\n}\n\nexport function shouldBeNullable<T>(it: T | null | undefined): asserts it is null | undefined {\n  if (it != null) {\n    throw new Error //\n  }\n}\n","import assert from 'assert'\n\nimport { isUrl } from '~/lib/guards/stringGuards'\nimport typed from '~/lib/typed'\nimport ValidationError from './ValidationError'\nimport { asString } from './commonValidators'\n\nexport const asBoundedLengthString = ({\n  lowerBound = -Infinity,\n  upperBound = Infinity,\n}: {\n  lowerBound?: number\n  upperBound?: number\n}) => (input: unknown) => {\n  assert(lowerBound <= upperBound)\n\n  const inputAsString = asString(input)\n\n  if (lowerBound <= inputAsString.length && inputAsString.length <= upperBound) {\n    return inputAsString\n  }\n\n  throw new ValidationError(\n    typed<[string, number, number]>`${ inputAsString } is not between ${ lowerBound } and ${ upperBound } characters.`,\n    'asBoundedLengthStringErrorMessage',\n    {\n      input: inputAsString.length,\n      lowerBound,\n      upperBound,\n    }\n  )\n}\n\nexport function asUrl(input: unknown): string.Url {\n  const inputAsString = asString(input)\n\n  if (!isUrl(inputAsString)) {\n    throw new ValidationError(typed<[string]>`${ inputAsString } is not a URL.`)\n  }\n\n  return inputAsString\n}\n","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--5-1!../../../../node_modules/postcss-loader/src/index.js!./classes.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".src-components-Reminder-TaskListItem-classes__TaskListItemContainer--3F5ef.src-components-Reminder-TaskListItem-classes__Dragging--1TtFC {\\n  opacity: 0;\\n}\\n\\n.src-components-Reminder-TaskListItem-classes__ListItemSecondaryAction--3QycB {\\n  padding-right: 72px; /* TODO */\\n}\\n\", \"\"]);\n// Exports\nexports.locals = {\n\t\"TaskListItemContainer\": \"src-components-Reminder-TaskListItem-classes__TaskListItemContainer--3F5ef\",\n\t\"Dragging\": \"src-components-Reminder-TaskListItem-classes__Dragging--1TtFC\",\n\t\"ListItemSecondaryAction\": \"src-components-Reminder-TaskListItem-classes__ListItemSecondaryAction--3QycB\"\n};\nmodule.exports = exports;\n","const curry = <T0, Ts extends unknown[], U>(f: (x: T0, ...xs: Ts) => U) => (x: T0) => (...xs: Ts): U => f(x, ...xs)\n\nexport default curry\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  add: 'add',\n})\n","import React from 'react'\nimport { FormattedMessage } from 'react-intl'\n\nimport Button from '@material-ui/core/Button'\n\nimport messages from './messages'\n\nexport interface Props {\n  addTask(): void\n}\n\nconst AddTaskButton: React.FunctionComponent<Props> = ({ addTask }) => (\n  <Button onClick={ addTask } variant=\"contained\" color=\"secondary\">\n    <FormattedMessage { ...messages.add } />\n  </Button>\n)\n\nexport default AddTaskButton\n","import React from 'react'\n\nimport List from '@material-ui/core/List'\n\nimport { Props as TaskListItemDropTargetProps } from '~/components/Reminder/TaskListItemDropTarget'\n\nexport interface Props {\n  children?: React.ReactElement<TaskListItemDropTargetProps, React.ComponentType<TaskListItemDropTargetProps>> | Array<React.ReactElement<TaskListItemDropTargetProps, React.ComponentType<TaskListItemDropTargetProps>>>\n}\n\nconst TaskList: React.FunctionComponent<Props> = ({ children }) => (\n  <List>\n    { children }\n  </List>\n)\n\nexport default TaskList\n","import React from 'react'\n\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\nexport interface Props {\n  onClick(): void\n}\n\nconst DeleteTaskButton: React.FunctionComponent<Props> = ({ onClick }) => (\n  <IconButton onClick={ onClick }>\n    <DeleteIcon />\n  </IconButton>\n)\n\nexport default DeleteTaskButton\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  asBoundedLengthStringErrorMessage: '{ name } must be 0-{ upperBound } characters.',\n})\n","import Case from 'case'\nimport classnames from 'classnames'\nimport React, { useCallback, useMemo } from 'react'\nimport { DragObjectWithType, useDrag } from 'react-dnd'\nimport { useIntl } from 'react-intl'\n\nimport Checkbox from '@material-ui/core/Checkbox'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport TextField from '@material-ui/core/TextField'\nimport DragHandleIcon from '@material-ui/icons/DragHandle'\n\nimport Task from '~/domain/entity/Task'\nimport { isOneOf } from '~/lib/guards/commonGuards'\nimport ValidationError from '~/lib/validators/ValidationError'\nimport DeleteTaskButton from './DeleteTaskButton'\nimport classes from './classes.css'\nimport messages from './messages'\n\nexport interface Props {\n  value: Task\n  index: number\n\n  onChange(value: Partial<Task>): void\n  onDelete(): void\n  validate(input: Task): Partial<Record<keyof Task, ValidationError>>\n}\n\ninterface CollectedProps {\n  dragging: boolean\n}\n\nexport interface DragObject extends DragObjectWithType {\n  value: Task\n  index: number\n}\n\nconst TaskListItem: React.FunctionComponent<Props> = ({ value, index, onChange, onDelete, validate }) => {\n  const [{ dragging }, drag, preview] = useDrag<DragObject, unknown, CollectedProps>({\n    item: {\n      type: 'TaskListItem',\n      value,\n      index,\n    },\n    isDragging: (monitor) => {\n      const item: DragObject = monitor.getItem()\n\n      return value.isIdenticalTo(item.value)\n    },\n    collect: (monitor) => ({\n      dragging: monitor.isDragging(),\n    }),\n  })\n\n  const className = useMemo(() => classnames(classes.TaskListItemContainer, {\n    [classes.Dragging]: dragging,\n  }), [dragging])\n\n  const handleContentChange = useCallback<React.ChangeEventHandler<HTMLInputElement>>((event) => {\n    onChange({\n      content: event.target.value,\n    })\n  }, [onChange])\n\n  const handleDoneChange = useCallback((event: React.ChangeEvent<HTMLInputElement>, _checked: boolean) => {\n    onChange({\n      done: event.target.checked,\n    })\n  }, [onChange])\n\n  const { formatMessage, locale } = useIntl()\n\n  const errors = useMemo(() => validate(value), [value, validate])\n  const hasError = useMemo(() => Object.values(errors).some((error) => error !== undefined), [errors])\n\n  const helperText = useMemo(() => {\n    if (errors.content === undefined) {\n      return null\n    }\n\n    if (isOneOf(...Object.keys(messages))(errors.content.key)) {\n      const text = formatMessage(messages[errors.content.key], errors.content.values)\n\n      switch (locale) {\n        case 'en': return Case.sentence(text)\n        case 'ja': return text\n        default: throw new Error // TODO\n      }\n    }\n\n    return null // TODO\n  }, [locale, formatMessage, errors.content])\n\n  return (\n    <div ref={ preview }>\n      <ListItem\n        classes={ {\n          container: className,\n          secondaryAction: classes.ListItemSecondaryAction,\n        } }\n      >\n        <ListItemIcon>\n          <div ref={ drag }>\n            <DragHandleIcon />\n          </div>\n        </ListItemIcon>\n        <ListItemIcon>\n          <Checkbox checked={ value.done } onChange={ handleDoneChange } />\n        </ListItemIcon>\n        <TextField\n          fullWidth\n          value={ value.content }\n          onChange={ handleContentChange }\n          disabled={ value.done }\n          error={ hasError }\n          helperText={ helperText }\n        />\n        <ListItemSecondaryAction>\n          <DeleteTaskButton onClick={ onDelete } />\n        </ListItemSecondaryAction>\n      </ListItem>\n    </div>\n  )\n}\n\nexport default TaskListItem\n","import React, { useRef } from 'react'\nimport { useDrop } from 'react-dnd'\n\nimport { DragObject, Props as TaskListItemProps } from '~/components/Reminder/TaskListItem'\nimport { shouldBePresent } from '~/lib/asserters/commonAsserters'\n\nexport interface Props {\n  children?: React.ReactElement<TaskListItemProps, React.ComponentType<TaskListItemProps>>\n  index: number\n\n  moveTask(sourceIndex: number, targetIndex: number): void\n}\n\nconst TaskListItemDropTarget: React.FunctionComponent<Props> = ({ children, index, moveTask }) => {\n  const div = useRef<HTMLDivElement>(null)\n\n  const [, drop] = useDrop<DragObject, unknown, unknown>({\n    accept: 'TaskListItem',\n    hover(item, monitor) {\n      shouldBePresent(div.current)\n\n      if (item.index === index) {\n        return\n      }\n\n      const clientOffset = monitor.getClientOffset()\n\n      shouldBePresent(clientOffset)\n\n      const boundingClientRect = div.current.getBoundingClientRect()\n      const pointerY = clientOffset.y - boundingClientRect.top\n      const middleY = (boundingClientRect.bottom - boundingClientRect.top) / 2\n\n      // downwards\n      if (item.index < index && pointerY < middleY) {\n        return\n      }\n\n      // upwards\n      if (item.index > index && pointerY > middleY) {\n        return\n      }\n\n      moveTask(item.index, index)\n\n      // tslint:disable-next-line:no-object-mutation\n      item.index = index\n    },\n  })\n\n  drop(div)\n\n  return (\n    <div ref={ div }>\n      { children }\n    </div>\n  )\n}\n\nexport default TaskListItemDropTarget\n","import { List } from 'immutable'\nimport React, { useCallback, useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport Task from '~/domain/entity/Task'\nimport TaskId from '~/domain/vo/TaskId'\nimport curry from '~/lib/curry'\nimport { asBoolean, asObject, leftOnly, named } from '~/lib/validators/commonValidators'\nimport { asBoundedLengthString } from '~/lib/validators/stringValidators'\nimport { State } from '~/redux'\nimport { addTaskAsync, changeTaskContentAsync, deleteTaskAsync, getTasksAsync, markTaskAsDoneAsync, markTaskAsUndoneAsync, moveTask } from '~/redux/modules/reminder'\nimport AddTaskButton from './AddTaskButton'\nimport TaskList from './TaskList'\nimport TaskListItem from './TaskListItem'\nimport TaskListItemDropTarget from './TaskListItemDropTarget'\n\ninterface StateProps {\n  tasks: List<Task>\n}\n\ninterface DispatchProps {\n  getTasks(): void\n  addTask(): void\n  changeTaskContent(taskId: TaskId, content: string): void\n  markTaskAsDone(taskId: TaskId): void\n  markTaskAsUndone(taskId: TaskId): void\n  deleteTask(taskId: TaskId): void\n  moveTask(source: number, dest: number): void\n}\n\ntype Props =\n  & StateProps\n  & DispatchProps\n\nconst validate = asObject('a Task for presentation', (input) => ({\n  content: leftOnly(named('content', asBoundedLengthString({\n    upperBound: 140,\n  })))(input.content),\n  done: leftOnly(asBoolean)(input.done),\n}))\n\nconst Reminder: React.FunctionComponent<Props> = ({ tasks, getTasks, addTask, changeTaskContent, markTaskAsDone, markTaskAsUndone, deleteTask, moveTask }) => {\n  useEffect(() => {\n    getTasks()\n  }, [getTasks])\n\n  const changeTask = useCallback((taskId, { content, done }) => {\n    if (content !== undefined) {\n      changeTaskContent(taskId, content)\n    }\n\n    if (done !== undefined) {\n      if (done) {\n        markTaskAsDone(taskId)\n      } else {\n        markTaskAsUndone(taskId)\n      }\n    }\n  }, [changeTaskContent, markTaskAsDone, markTaskAsUndone])\n\n  return (\n    <>\n      <TaskList>\n        {\n          tasks.map((task, index) => (\n            <TaskListItemDropTarget\n              key={ index }\n              index={ index }\n              moveTask={ moveTask }\n            >\n              <TaskListItem\n                key={ task.id.value }\n                value={ task }\n                index={ index }\n                onChange={ curry(changeTask)(task.id) }\n                onDelete={ curry(deleteTask)(task.id) }\n                validate={ validate }\n              />\n            </TaskListItemDropTarget>\n          )).toArray()\n        }\n      </TaskList>\n      <AddTaskButton addTask={ addTask } />\n    </>\n  )\n}\n\n// connect\n\nconst mapStateToProps = ({ reminder: { tasks } }: State): StateProps => ({\n  tasks,\n})\n\nconst mapDispatchToProps: DispatchProps = {\n  getTasks: getTasksAsync,\n  addTask: addTaskAsync,\n  changeTaskContent: changeTaskContentAsync,\n  markTaskAsDone: markTaskAsDoneAsync,\n  markTaskAsUndone: markTaskAsUndoneAsync,\n  deleteTask: deleteTaskAsync,\n  moveTask,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Reminder)\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  reminder: 'reminder',\n})\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { useIntl } from 'react-intl'\n\nimport Reminder from '~/components/Reminder'\nimport { createPage } from '~/templates/PageTemplate'\nimport messages from './messages'\n\nconst ReminderPage: React.FunctionComponent = () => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <>\n      <Helmet title={ formatMessage(messages.reminder) } />\n      <Reminder />\n    </>\n  )\n}\n\nexport default createPage(ReminderPage)\n"],"sourceRoot":""}