{"version":3,"file":"assets/scripts/home.52337a06.js","mappings":"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","sources":["webpack://rap/./node_modules/@material-ui/core/esm/internal/svg-icons/Person.js","webpack://rap/./node_modules/@material-ui/core/esm/Avatar/Avatar.js","webpack://rap/./node_modules/@material-ui/core/esm/InputAdornment/InputAdornment.js","webpack://rap/./node_modules/@material-ui/icons/Security.js","webpack://rap/./node_modules/@material-ui/icons/Send.js","webpack://rap/./src/components/FormattedTimeOfDay/index.tsx","webpack://rap/./src/components/CurrentTimeOfDay/index.tsx","webpack://rap/./src/identity.ts","webpack://rap/./src/components/NotifyMeButton/messages.ts","webpack://rap/./src/components/NotifyMeButton/index.tsx","webpack://rap/./src/hooks/useOnceForEachEffect.ts","webpack://rap/./src/components/ObtainCookieConsentButton/messages.ts","webpack://rap/./src/components/ObtainCookieConsentButton/index.tsx","webpack://rap/./src/components/SetClockButton/messages.ts","webpack://rap/./src/components/SetClockButton/index.tsx","webpack://rap/./src/components/Today/index.tsx","webpack://rap/./src/components/App/HomePage/messages.ts","webpack://rap/./src/components/App/HomePage/index.tsx","webpack://rap/./src/components/Banner/index.tsx","webpack://rap/./src/components/ObtainCookieConsentBanner/index.tsx","webpack://rap/./src/components/ObtainCookieConsentBanner/messages.ts","webpack://rap/./src/globalVariables/cookieDialogKey.ts","webpack://rap/./src/globalVariables/reloadNotToAcceptCookiesBannerKey.ts","webpack://rap/./src/hooks/useBanner.ts"],"sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"circular\"`. */\n    circular: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover',\n      // Hide alt text.\n      color: 'transparent',\n      // Hide the image broken icon, only works on Chrome.\n      textIndent: 10000\n    },\n\n    /* Styles applied to the fallback icon */\n    fallback: {\n      width: '75%',\n      height: '75%'\n    }\n  };\n};\n\nfunction useLoaded(_ref) {\n  var src = _ref.src,\n      srcSet = _ref.srcSet;\n\n  var _React$useState = React.useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    var active = true;\n    var image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return function () {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nvar Avatar = /*#__PURE__*/React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circular' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  var loaded = useLoaded({\n    src: src,\n    srcSet: srcSet\n  });\n  var hasImg = src || srcSet;\n  var hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: chainPropTypes(PropTypes.object, function (props) {\n    var classes = props.classes;\n\n    if (classes == null) {\n      return null;\n    }\n\n    if (classes.circle != null && // 2 classnames? one from withStyles the other must be custom\n    classes.circle.split(' ').length > 1) {\n      throw new Error(\"Material-UI: The `circle` class is deprecated. Use `circular` instead.\");\n    }\n\n    return null;\n  }),\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The shape of the avatar.\n   */\n  variant: chainPropTypes(PropTypes.oneOf(['circle', 'circular', 'rounded', 'square']), function (props) {\n    var variant = props.variant;\n\n    if (variant === 'circle') {\n      throw new Error('Material-UI: `variant=\"circle\"` is deprecated. Use `variant=\"circular\"` instead.');\n    }\n\n    return null;\n  })\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Typography from '../Typography';\nimport withStyles from '../styles/withStyles';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    height: '0.01em',\n    // Fix IE 11 flexbox alignment. To remove at some point.\n    maxHeight: '2em',\n    alignItems: 'center',\n    whiteSpace: 'nowrap'\n  },\n\n  /* Styles applied to the root element if `variant=\"filled\"`. */\n  filled: {\n    '&$positionStart:not($hiddenLabel)': {\n      marginTop: 16\n    }\n  },\n\n  /* Styles applied to the root element if `position=\"start\"`. */\n  positionStart: {\n    marginRight: 8\n  },\n\n  /* Styles applied to the root element if `position=\"end\"`. */\n  positionEnd: {\n    marginLeft: 8\n  },\n\n  /* Styles applied to the root element if `disablePointerEvents=true`. */\n  disablePointerEvents: {\n    pointerEvents: 'none'\n  },\n\n  /* Styles applied if the adornment is used inside <FormControl hiddenLabel />. */\n  hiddenLabel: {},\n\n  /* Styles applied if the adornment is used inside <FormControl margin=\"dense\" />. */\n  marginDense: {}\n};\nvar InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disablePointer = props.disablePointerEvents,\n      disablePointerEvents = _props$disablePointer === void 0 ? false : _props$disablePointer,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      position = props.position,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"]);\n\n  var muiFormControl = useFormControl() || {};\n  var variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('Material-UI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  return /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, position === 'end' ? classes.positionEnd : classes.positionStart, disablePointerEvents && classes.disablePointerEvents, muiFormControl.hiddenLabel && classes.hiddenLabel, variant === 'filled' && classes.filled, muiFormControl.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), typeof children === 'string' && !disableTypography ? /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\"\n  }, children) : children));\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes = {\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the input on click.\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  muiFormControl: PropTypes.object,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['start', 'end']).isRequired,\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputAdornment'\n})(InputAdornment);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 1L3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5l-9-4zm0 10.99h7c-.53 4.12-3.28 7.79-7 8.94V12H5V6.3l7-3.11v8.8z\"\n}), 'Security');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\"\n}), 'Send');\n\nexports.default = _default;","import React from 'react'\nimport { CustomFormatConfig, FormattedTime } from 'react-intl'\n\ntype Props =\n  & Alt.Omit<Intl.DateTimeFormatOptions, /* 'dateStyle' |  */'weekday' | 'era' | 'year' | 'month' | 'day'>\n  & CustomFormatConfig\n  & {\n      value: string | number | Date | undefined\n      children?(formattedTime: string): React.ReactElement | null\n    }\n\nconst FormattedTimeOfDay: React.FC<Props> = (props) => (\n  <FormattedTime\n    { ...props }\n    // dateStyle={ undefined }\n    weekday={ undefined }\n    era={ undefined }\n    year={ undefined }\n    month={ undefined }\n    day={ undefined }\n  />\n)\n\nexport default FormattedTimeOfDay\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport FormattedTimeOfDay from '~/components/FormattedTimeOfDay'\nimport { State } from '~/redux'\n\ninterface StateProps {\n  now: Date\n}\n\ntype Props =\n  & StateProps\n\n// TODO: delete?\nconst CurrentTimeOfDay: React.FC<Props> = ({ now }) => (\n  <FormattedTimeOfDay value={ now } format=\"medium\" />\n)\n\n// connect\n\nconst mapStateToProps = ({ io: { now } }: State): StateProps => ({\n  now,\n})\n\nexport default connect(mapStateToProps)(CurrentTimeOfDay)\n","const identity = <T extends U, U>(it: T): U => it\n\nexport default identity\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  sendPushNotification: 'Send push notification',\n})\n","import IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport SendIcon from '@material-ui/icons/Send'\nimport React, { useCallback, useMemo } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { useRecoilState } from 'recoil'\nimport { shouldBePresent } from '~/asserters/commonAsserters'\n\nimport notificationsState from '~/atoms/notificationsState'\nimport useOnceForEachEffect from '~/hooks/useOnceForEachEffect'\nimport messages from './messages'\n\ninterface Props {\n  inputFor: React.RefObject<HTMLInputElement | HTMLTextAreaElement>\n}\n\nconst NotifyMeButton: React.FC<Props> = ({ inputFor: ref }) => {\n  const [notifications, setNotifications] = useRecoilState(notificationsState)\n  const value = ref.current?.value\n  const disabled = useMemo(() => value === undefined || /^\\p{White_Space}*$/u.test(value), [value])\n\n  const handleNotifyButtonClick = useCallback<React.MouseEventHandler<HTMLButtonElement>>(async () => {\n    if (ref.current === null) {\n      return\n    }\n\n    shouldBePresent(value)\n\n    const permission = await Notification.requestPermission()\n\n    if (permission === 'granted') {\n      setNotifications((ns) => [...ns, new Notification(value)])\n    }\n  }, [ref, value, setNotifications])\n\n  const handleNotificationClose = useCallback<NonNullable<Notification['onclose']>>((event) => {\n    const notification = event.target\n\n    if (!(notification instanceof Notification)) {\n      return\n    }\n\n    setNotifications((ns) => ns.filter((n) => n !== notification))\n  }, [setNotifications])\n\n  useOnceForEachEffect(notifications, undefined, (notification) => {\n    notification.addEventListener('close', handleNotificationClose)\n  }, [notifications, handleNotificationClose])\n\n  if (!('Notification' in globalThis)) {\n    return null\n  }\n\n  return (\n    <Tooltip\n      title={ <FormattedMessage { ...messages.sendPushNotification } /> }\n      disableFocusListener={ disabled }\n      disableHoverListener={ disabled }\n      disableTouchListener={ disabled }\n    >\n      <span>\n        <IconButton\n          onClick={ handleNotifyButtonClick }\n          disabled={ disabled }\n        >\n          <SendIcon />\n        </IconButton>\n      </span>\n    </Tooltip>\n  )\n}\n\nexport default NotifyMeButton\n","import { DependencyList, useEffect } from 'react'\n\nimport identity from '~/identity'\n\ntype OnceForEachEffectCallback<T> = (x: T) => (void | ((x: T) => void | undefined))\n\n/**\n * @param identify that meets `a` is `b` in SameValueZero → `identify(a) === identify(b)`\n */\nexport default function useOnceForEachEffect<T, U = T>(xs: readonly T[], identify: (x: T) => U = identity as (x: T) => U, effect: OnceForEachEffectCallback<T>, deps?: DependencyList) { // TODO: delete `as (x: T) => U`; 引数の型は反変なので、デフォルト引数の型は、引数の型と同じかそれより狭い型に安全に変換できるが、 TypeScript の実装はそうなっていない。\n  useEffect(() => {\n    const cleanups: {\n      x: T,\n      cleanup: ReturnType<typeof effect>\n    }[] = []\n\n    const doneIds: U[] = []\n\n    for (const x of xs) {\n      const id = identify(x)\n\n      if (!doneIds.includes(id)) {\n        cleanups.push({\n          x,\n          cleanup: effect(x),\n        })\n\n        doneIds.push(id)\n      }\n    }\n\n    return () => {\n      for (const { x, cleanup } of cleanups) {\n        // cleanup?.(x)\n\n        if (typeof cleanup !== 'undefined') {\n          cleanup(x)\n        }\n      }\n    }\n  }, deps ?? []) // eslint-disable-line react-hooks/exhaustive-deps\n}\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  consentToUseCookies: 'Consent to use cookies…',\n  youHaveAlreadyConsentedToUseCookies: 'You have already consented to use cookies.',\n})\n","import Button from '@material-ui/core/Button'\nimport { useInjection } from 'inversify-react'\nimport { useSnackbar } from 'notistack'\nimport React, { useCallback, useMemo } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { useRecoilValue, useSetRecoilState } from 'recoil'\n\nimport { shouldBePresent } from '~/asserters/commonAsserters'\nimport cookieConsentObtainedState from '~/atoms/cookieConsentObtainedState'\nimport gtmConsentsState from '~/atoms/gtmConsentsState'\nimport ObtainCookieConsentBanner from '~/components/ObtainCookieConsentBanner'\nimport ConfigRegistry from '~/config/ConfigRegistry'\nimport cookieDialogKey from '~/globalVariables/cookieDialogKey'\nimport reloadNotToAcceptCookiesBannerKey from '~/globalVariables/reloadNotToAcceptCookiesBannerKey'\nimport useBanner from '~/hooks/useBanner'\nimport useGtm from '~/hooks/useGtm'\nimport currentBannerState from '~/selectors/currentBannerState'\nimport messages from './messages'\n\n// NOTE: このコンポーネントがアンマウント、再マウントされても dismiss がうまく動くように、グローバルな `cookieDialogKey` を使っている。これを解消するには、 `cookieDialogKey` を prop にするか、 <RecoilRoot> を分割する。\n/**\n * クッキーダイアログを表示するボタンを表現する.\n *\n * NOTE: https://github.com/mdn/content/blob/f4556b8707dcdd6fec9c6f121a24e6988309f95c/files/en-us/web/api/notification/requestpermission/index.html#L87-L89 と同じような理由で、 Rap では、ユーザーの操作無しにクッキーダイアログを表示することはしない。\n */\nconst ObtainCookieConsentButton: React.FC = () => {\n  const config = useInjection<ConfigRegistry>('EnvVarConfig')\n  const gtmContainerId = config.get('GTM_CONTAINER_ID')\n  const gtm = useGtm()\n  const banner = useBanner()\n  const { enqueueSnackbar } = useSnackbar()\n  const cookieConsentObtained = useRecoilValue(cookieConsentObtainedState)\n  const currentBanner = useRecoilValue(currentBannerState)\n  const setGtmConsents = useSetRecoilState(gtmConsentsState)\n\n  const whileConsentObtained = useMemo(() => {\n    return currentBanner?.key === cookieDialogKey\n  }, [currentBanner])\n\n  const handleAgree = useCallback(() => {\n    shouldBePresent(gtmContainerId)\n\n    setGtmConsents({\n      analytics_storage: 'granted',\n    })\n\n    // NOTE: 画面のちらつきを減らすために、裏にある方を先に隠す。\n    banner.hide({\n      key: reloadNotToAcceptCookiesBannerKey,\n      safe: true,\n    })\n\n    banner.hide({ key: cookieDialogKey })\n\n    gtm.install(gtmContainerId)\n  }, [banner, gtm, gtmContainerId, setGtmConsents])\n\n  const handleCancel = useCallback(() => {\n    banner.hide({ key: cookieDialogKey })\n  }, [banner])\n\n  // NOTE: すでに表示されているバナーに `handleAgree` や `handleCancel` の変更を反映させるには、 useEffect 等を使って、 `handleAgree` や `handleCancel` が変更されるたびに、現在のバナーの `key` が `cookieDialogKey` と一致するかどうかを調べ、一致する場合は同じ `key` を使って `banner.show()` する。\n  const handleClick = useCallback<React.MouseEventHandler<HTMLButtonElement>>(() => {\n    if (!cookieConsentObtained) {\n      banner.show(<ObtainCookieConsentBanner\n        onAgree={ handleAgree }\n        onCancel={ handleCancel }\n      />, {\n        key: cookieDialogKey,\n        replaceable: true,\n      })\n    } else {\n      enqueueSnackbar(<FormattedMessage { ...messages.youHaveAlreadyConsentedToUseCookies } />)\n    }\n  }, [cookieConsentObtained, banner, handleAgree, handleCancel, enqueueSnackbar])\n\n  return (\n    <Button onClick={ handleClick } disabled={ whileConsentObtained }>\n      <FormattedMessage { ...messages.consentToUseCookies } />\n    </Button>\n  )\n}\n\nexport default ObtainCookieConsentButton\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  setTheClock: 'Set the clock',\n})\n","import Button from '@material-ui/core/Button'\nimport React from 'react'\nimport { FormattedMessage} from 'react-intl'\nimport { connect } from 'react-redux'\n\nimport { updateNow } from '~/redux/modules/io'\nimport messages from './messages'\n\ninterface DispatchProps {\n  updateNow(): void\n}\n\ntype Props =\n  & DispatchProps\n\n// TODO: delete\nconst SetClockButton: React.FC<Props> = ({ updateNow }) => (\n  <Button onClick={ updateNow }>\n    <FormattedMessage { ...messages.setTheClock } />\n  </Button>\n)\n\n// connect\n\nconst mapDispatchToProps: DispatchProps = {\n  updateNow,\n}\n\nexport default connect(null, mapDispatchToProps)(SetClockButton)\n","import React from 'react'\nimport { FormattedDate } from 'react-intl'\nimport { connect } from 'react-redux'\n\nimport { State } from '~/redux'\n\ninterface StateProps {\n  now: Date\n}\n\ntype Props =\n  & StateProps\n\n// TODO: delete?\nconst Today: React.FC<Props> = ({ now }) => (\n  <FormattedDate value={ now } format=\"medium\" />\n)\n\n// connect\n\nconst mapStateToProps = ({ io: { now } }: State): StateProps => ({\n  now,\n})\n\nexport default connect(mapStateToProps)(Today)\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  home: 'Home',\n})\n","import InputAdornment from '@material-ui/core/InputAdornment'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport { useInjection } from 'inversify-react'\nimport React, { useCallback, useRef, useState } from 'react'\nimport Helmet from 'react-helmet'\nimport { FormattedNumber, useIntl } from 'react-intl'\n\nimport CurrentTimeOfDay from '~/components/CurrentTimeOfDay'\nimport NotifyMeButton from '~/components/NotifyMeButton'\nimport ObtainCookieConsentButton from '~/components/ObtainCookieConsentButton'\nimport { createPage } from '~/components/PageTemplate'\nimport SetClockButton from '~/components/SetClockButton'\nimport Today from '~/components/Today'\nimport ConfigRegistry from '~/config/ConfigRegistry'\nimport messages from './messages'\n\nconst HomePage: React.FC = () => {\n  const config = useInjection<ConfigRegistry>('EnvVarConfig')\n  const gtmContainerId = config.get('GTM_CONTAINER_ID')\n  const { formatMessage } = useIntl()\n  const input = useRef<HTMLInputElement>(null)\n  const [text, setText] = useState('')\n\n  const handleChange = useCallback<React.ChangeEventHandler<HTMLInputElement>>((event) => {\n    setText(event.target.value)\n  }, [])\n\n  return (\n    <>\n      <Helmet title={ formatMessage(messages.home) } />\n      <Typography>\n        <FormattedNumber format=\"usd\" value={ 100 } />\n      </Typography>\n      <Typography>\n        <Today /> <CurrentTimeOfDay />\n      </Typography>\n      <SetClockButton />\n      <TextField\n        value={ text }\n        onChange={ handleChange }\n        InputProps={ {\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <NotifyMeButton inputFor={ input } />\n            </InputAdornment>\n          ),\n        } }\n        inputProps= { {\n          ref: input,\n        } }\n      />\n      { gtmContainerId !== undefined && <ObtainCookieConsentButton /> }\n    </>\n  )\n}\n\nexport default createPage(HomePage)\n","import { AvatarProps } from '@material-ui/core/Avatar'\nimport Box from '@material-ui/core/Box'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Bowser from 'bowser'\nimport React from 'react'\n\nimport Spacer from '~/components/Spacer'\n\nexport interface Props {\n  leading?: React.ReactElement<AvatarProps, React.ComponentType<AvatarProps>>\n  text: React.ReactNode\n  actions: React.ReactNode\n}\n\n// TODO: Remove\n// TODO: Detect UA changes?\nconst browser = Bowser.getParser(navigator.userAgent)\n\nconst isMobile = browser.is('Mobile')\n\n/**\n * An implementation of https://material.io/components/banners.\n *\n * NOTE: Not support the no leading, mobile, one-line version.\n */\nconst Banner: React.FC<Props> = ({ leading, text, actions }) => (\n  <Paper square elevation={ 0 }>\n    <Box\n      display=\"flex\"\n      flexWrap=\"nowrap\"\n      alignItems={ isMobile ? 'flex-start' : 'center' }\n    >\n      { leading !== undefined && (\n        <Box\n          my={ isMobile ? 3 : 2 }\n          ml={ 2 }\n        >\n          { leading }\n        </Box>\n      ) }\n      <Box\n        alignSelf=\"stretch\"\n        display=\"flex\"\n        flexGrow={ 1 }\n        alignItems={ isMobile ? 'flex-start' : 'center' }\n        flexWrap={ isMobile ? 'wrap' : undefined }\n        gridColumnGap={ (isMobile ? 36 : 90) - 16 }\n        gridRowGap={ isMobile ? (leading !== undefined ? 20 : 12) - 10 : undefined }\n      >\n        <Box\n          mt={ isMobile ? 3 : 2 }\n          mb={ isMobile ? undefined : 2 }\n          ml={ isMobile ? 2 : 3 }\n          mr={ 1 }\n        >\n          <Typography variant=\"body2\">{ text }</Typography>{ /* TODO: Align to baseline */ }\n        </Box>\n        <Box\n          alignSelf=\"flex-end\"\n          display=\"flex\"\n          flexGrow={ 1 }\n        >\n          <Spacer />\n          <Box\n            mt={ isMobile ? 1.25 : 1 }\n            mx={ 1 }\n            mb={ 1 }\n            display=\"flex\"\n            gridColumnGap={ 8 }\n          >\n            { actions }\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  </Paper>\n)\n\nexport default Banner\n","import Avatar from '@material-ui/core/Avatar'\nimport Button from '@material-ui/core/Button'\nimport SecurityIcon from '@material-ui/icons/Security'\nimport React from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { useRecoilCallback } from 'recoil'\n\nimport cookieConsentObtainedState from '~/atoms/cookieConsentObtainedState'\nimport Banner from '~/components/Banner'\nimport messages from './messages'\n\ninterface Props {\n  onAgree?(): void\n  onCancel?(): void\n}\n\nconst ObtainCookieConsentBanner: React.FC<Props> = ({ onAgree, onCancel }) => {\n  const handleAgree = useRecoilCallback(({ set }) => () => {\n    set(cookieConsentObtainedState, true)\n\n    onAgree?.()\n  }, [onAgree])\n\n  return (\n    <Banner\n      leading={ <Avatar>\n        <SecurityIcon />\n      </Avatar> }\n      text={ <FormattedMessage { ...messages.weUseCookiesToAnalyzeOurTraffic } /> }\n      actions={ <>\n        <Button variant=\"text\" color=\"primary\" onClick={ handleAgree }>\n          <FormattedMessage { ...messages.agree } />\n        </Button>\n        <Button variant=\"text\" color=\"primary\" onClick={ onCancel }>\n          <FormattedMessage { ...messages.cancel } />\n        </Button>\n      </> }\n    />\n  )\n}\n\nexport default ObtainCookieConsentBanner\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  weUseCookiesToAnalyzeOurTraffic: 'We use cookies to analyze our traffic.',\n  agree: 'Agree',\n  cancel: 'Cancel',\n})\n","import { v4 } from 'uuid'\n\nconst cookieDialogKey = v4()\n\nexport default cookieDialogKey\n","import { v4 } from 'uuid'\n\nconst reloadNotToAcceptCookiesBannerKey = v4()\n\nexport default reloadNotToAcceptCookiesBannerKey\n","import { useRecoilCallback } from 'recoil'\nimport { v4 } from 'uuid'\n\nimport bannersState from '~/atoms/bannersState'\nimport { Props as BannerProps } from '~/components/Banner'\nimport currentBannerState from '~/selectors/currentBannerState'\n\ntype BannerElement = React.ReactElement<BannerProps, React.ComponentType<BannerProps>>\n\ninterface ShowOptions {\n  key?: string\n  replaceable?: boolean\n}\n\ninterface HideOptions {\n  key?: string\n  safe?: boolean // no failures if true\n}\n\nconst useBanner = () => {\n  const show = useRecoilCallback(({ set }) => (banner: BannerElement, options?: ShowOptions) => {\n    const key = options?.key ?? v4()\n    const replaceable = options?.replaceable ?? false\n\n    set(currentBannerState, {\n      banner,\n      key,\n      replaceable,\n    })\n\n    return key\n  })\n\n  const hide = useRecoilCallback(({ set }) => (options?: HideOptions) => {\n    const key = options?.key\n    const safe = options?.safe ?? false\n\n    if (key === undefined) {\n      set(currentBannerState, (currentBanner) => {\n        if (currentBanner === null && !safe) {\n          throw new Error('No banner found.')\n        }\n\n        return null\n      })\n    } else {\n      set(bannersState, (banners) => {\n        const i = banners.findIndex((banner) => banner.key === key)\n\n        if (i === -1 && !safe) {\n          throw new Error('No banner found.')\n        }\n\n        if (i !== -1) {\n          return [\n            ...banners.slice(0, i),\n            ...banners.slice(i + 1),\n          ]\n        }\n\n        return banners\n      })\n    }\n  })\n\n  return { show, hide }\n}\n\nexport default useBanner\n"],"names":["d","Avatar","props","ref","alt","childrenProp","children","classes","className","_props$component","component","Component","imgProps","sizes","src","srcSet","_props$variant","variant","other","loaded","_ref","_React$useState","setLoaded","active","image","Image","onload","onerror","useLoaded","hasImg","hasImgNotFailing","img","Person","fallback","root","system","colorDefault","withStyles","theme","position","display","alignItems","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","color","palette","background","default","backgroundColor","type","grey","circle","circular","rounded","shape","square","textAlign","objectFit","textIndent","name","InputAdornment","_props$disablePointer","disablePointerEvents","_props$disableTypogra","disableTypography","variantProp","muiFormControl","value","positionEnd","positionStart","hiddenLabel","filled","margin","marginDense","maxHeight","whiteSpace","marginTop","marginRight","marginLeft","pointerEvents","_interopRequireDefault","_interopRequireWildcard","exports","React","_default","createElement","weekday","undefined","era","year","month","day","connect","io","now","format","it","defineMessages","sendPushNotification","inputFor","notifications","setNotifications","useRecoilState","notificationsState","current","disabled","useMemo","test","handleNotifyButtonClick","useCallback","async","shouldBePresent","Notification","requestPermission","ns","handleNotificationClose","event","notification","target","filter","n","xs","identify","identity","effect","deps","useEffect","cleanups","doneIds","x","id","includes","push","cleanup","useOnceForEachEffect","addEventListener","globalThis","Tooltip","title","messages","disableFocusListener","disableHoverListener","disableTouchListener","IconButton","onClick","Send","consentToUseCookies","youHaveAlreadyConsentedToUseCookies","gtmContainerId","useInjection","get","gtm","useGtm","banner","useBanner","enqueueSnackbar","useSnackbar","cookieConsentObtained","useRecoilValue","cookieConsentObtainedState","currentBanner","currentBannerState","setGtmConsents","useSetRecoilState","gtmConsentsState","whileConsentObtained","key","cookieDialogKey","handleAgree","analytics_storage","hide","reloadNotToAcceptCookiesBannerKey","safe","install","handleCancel","handleClick","show","ObtainCookieConsentBanner","onAgree","onCancel","replaceable","Button","setTheClock","mapDispatchToProps","updateNow","home","createPage","formatMessage","useIntl","input","useRef","text","setText","useState","handleChange","Helmet","Typography","TextField","onChange","InputProps","endAdornment","inputProps","isMobile","Bowser","navigator","userAgent","is","leading","actions","elevation","flexWrap","my","ml","alignSelf","flexGrow","gridColumnGap","gridRowGap","mt","mb","mr","mx","useRecoilCallback","set","weUseCookiesToAnalyzeOurTraffic","agree","cancel","v4","options","Error","bannersState","banners","i","findIndex","slice"],"sourceRoot":""}