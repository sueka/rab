{"version":3,"sources":["webpack://react-app-prototype/./node_modules/react-intl/lib/src/components/useIntl.js","webpack://react-app-prototype/./src/components/Clock/index.tsx","webpack://react-app-prototype/./src/components/App/ClockPage/messages.ts","webpack://react-app-prototype/./src/components/App/ClockPage/index.tsx","webpack://react-app-prototype/./src/lib/components/FormattedTimeOfDay/index.tsx"],"names":["useIntl","intl","React","Context","invariantIntlContext","mapDispatchToProps","startClock","stopClock","connect","now","io","useEffect","Typography","FormattedTimeOfDay","value","format","defineMessages","clock","createPage","formatMessage","Helmet","title","messages","props","weekday","undefined","era","year","month","day"],"mappings":"qMAGe,SAASA,IACpB,IAAIC,EAAOC,aAAiBC,MAE5B,OADAC,QAAqBH,GACdA,I,+JCmCLI,EAAoC,CACxCC,gBACAC,gBAGF,GAAeC,SATS,SAAC,GAAD,MAAyC,CAC/DC,IADsB,EAAGC,GAAMD,OASOJ,EAAxC,EAzB+B,SAAC,GAAmC,IAAjCI,EAAiC,EAAjCA,IAAKH,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,UAOjD,OANAI,gBAAU,WAGR,OAFAL,IAEOC,IACN,CAACD,EAAYC,IAGd,gBAACK,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAoBC,MAAQL,EAAMM,OAAO,e,WC5B/C,GAAeC,E,SAAAA,IAAe,CAC5BC,MAAO,CAAF,uDAAE,WCgBT,GAAeC,QAXa,WAAM,IACxBC,GAAkBnB,SAAlBmB,cAER,OACE,gCACE,gBAACC,EAAA,EAAD,CAAQC,MAAQF,EAAcG,EAASL,SACvC,gBAAC,EAAD,W,iFCQN,IAZ4C,SAACM,GAAD,OAC1C,gBAAC,KAAD,OACOA,EADP,CAGEC,aAAUC,EACVC,SAAMD,EACNE,UAAOF,EACPG,WAAQH,EACRI,SAAMJ","file":"assets/scripts/clock.a9f526cf.js","sourcesContent":["import * as React from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nexport default function useIntl() {\n    var intl = React.useContext(Context);\n    invariantIntlContext(intl);\n    return intl;\n}\n","import Typography from '@material-ui/core/Typography'\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport FormattedTimeOfDay from '~/lib/components/FormattedTimeOfDay'\nimport { State } from '~/redux'\nimport { startClock, stopClock } from '~/redux/modules/io'\n\ninterface StateProps {\n  now: Date\n}\n\ninterface DispatchProps {\n  startClock(): void\n  stopClock(): void\n}\n\ntype Props =\n  & StateProps\n  & DispatchProps\n\nconst Clock: React.FC<Props> = ({ now, startClock, stopClock }) => {\n  useEffect(() => {\n    startClock()\n\n    return stopClock\n  }, [startClock, stopClock])\n\n  return (\n    <Typography>\n      <FormattedTimeOfDay value={ now } format=\"medium\" />\n    </Typography>\n  )\n}\n\n// connect\n\nconst mapStateToProps = ({ io: { now } }: State): StateProps => ({\n  now,\n})\n\nconst mapDispatchToProps: DispatchProps = {\n  startClock,\n  stopClock,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Clock)\n","import { defineMessages } from 'react-intl'\n\nexport default defineMessages({\n  clock: 'clock',\n})\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { useIntl } from 'react-intl'\n\nimport Clock from '~/components/Clock'\nimport { createPage } from '~/templates/PageTemplate'\nimport messages from './messages'\n\nconst ClockPage: React.FC = () => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <>\n      <Helmet title={ formatMessage(messages.clock) } />\n      <Clock />\n    </>\n  )\n}\n\nexport default createPage(ClockPage)\n","import React from 'react'\nimport { CustomFormatConfig, FormattedTime } from 'react-intl'\n\ntype Props =\n  & Alt.Omit<Intl.DateTimeFormatOptions, /* 'dateStyle' |  */'weekday' | 'era' | 'year' | 'month' | 'day'>\n  & CustomFormatConfig\n  & {\n      value: string | number | Date | undefined\n    }\n\nconst FormattedTimeOfDay: React.FC<Props> = (props) => (\n  <FormattedTime\n    { ...props }\n    // dateStyle={ undefined }\n    weekday={ undefined }\n    era={ undefined }\n    year={ undefined }\n    month={ undefined }\n    day={ undefined }\n  />\n)\n\nexport default FormattedTimeOfDay\n"],"sourceRoot":""}